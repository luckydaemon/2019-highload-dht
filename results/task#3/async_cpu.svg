<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (413 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=2644] (1 samples, 0.24%)</title><rect x="10.0" y="947.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.24%)</title><rect x="10.0" y="931.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (1 samples, 0.24%)</title><rect x="10.0" y="915.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (1 samples, 0.24%)</title><rect x="10.0" y="899.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="10.0" y="883.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="10.0" y="867.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.24%)</title><rect x="10.0" y="851.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="10.0" y="835.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="10.0" y="819.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>sys_accept4 (1 samples, 0.24%)</title><rect x="10.0" y="803.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>SYSC_accept4 (1 samples, 0.24%)</title><rect x="10.0" y="787.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>inet_accept (1 samples, 0.24%)</title><rect x="10.0" y="771.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>inet_csk_accept (1 samples, 0.24%)</title><rect x="10.0" y="755.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="10.0" y="739.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.24%)</title><rect x="10.0" y="723.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=2640] (88 samples, 21.31%)</title><rect x="12.9" y="947.0" width="251.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="15.9" y="958.0">[NIO Selector #0 tid=2640]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.24%)</title><rect x="12.9" y="931.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="15.9" y="942.0"></text>
</g>
<g>
<title>Runtime1::exception_handler_for_pc(JavaThread*) (1 samples, 0.24%)</title><rect x="12.9" y="915.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>caller_is_deopted() (1 samples, 0.24%)</title><rect x="12.9" y="899.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.24%)</title><rect x="12.9" y="883.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.24%)</title><rect x="12.9" y="867.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.24%)</title><rect x="15.7" y="931.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="15.7" y="915.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="18.7" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.24%)</title><rect x="15.7" y="899.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.7" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (86 samples, 20.82%)</title><rect x="18.6" y="931.0" width="245.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.6" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.24%)</title><rect x="21.4" y="915.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.24%)</title><rect x="21.4" y="899.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.24%)</title><rect x="21.4" y="883.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 2.66%)</title><rect x="24.3" y="915.0" width="31.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.3" y="926.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.24%)</title><rect x="30.0" y="899.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.24%)</title><rect x="30.0" y="883.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 1.69%)</title><rect x="32.9" y="899.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.69%)</title><rect x="32.9" y="883.0" width="20.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 1.69%)</title><rect x="32.9" y="867.0" width="20.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="35.9" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.69%)</title><rect x="32.9" y="851.0" width="20.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.69%)</title><rect x="32.9" y="835.0" width="20.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.9" y="846.0"></text>
</g>
<g>
<title>sys_epoll_wait (7 samples, 1.69%)</title><rect x="32.9" y="819.0" width="20.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.9" y="830.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 1.69%)</title><rect x="32.9" y="803.0" width="20.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.9" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (1 samples, 0.24%)</title><rect x="32.9" y="787.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.9" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="32.9" y="771.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.9" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.10 (1 samples, 0.24%)</title><rect x="32.9" y="755.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.24%)</title><rect x="32.9" y="739.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="35.9" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.24%)</title><rect x="32.9" y="723.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 1.45%)</title><rect x="35.7" y="787.0" width="17.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="38.7" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 1.45%)</title><rect x="35.7" y="771.0" width="17.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="38.7" y="782.0"></text>
</g>
<g>
<title>schedule (6 samples, 1.45%)</title><rect x="35.7" y="755.0" width="17.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="38.7" y="766.0"></text>
</g>
<g>
<title>__schedule (6 samples, 1.45%)</title><rect x="35.7" y="739.0" width="17.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 1.45%)</title><rect x="35.7" y="723.0" width="17.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.7" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="52.9" y="899.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.9" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="52.9" y="883.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="55.9" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="52.9" y="867.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="55.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (73 samples, 17.68%)</title><rect x="55.7" y="915.0" width="208.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.7" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (71 samples, 17.19%)</title><rect x="55.7" y="899.0" width="202.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.7" y="910.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (65 samples, 15.74%)</title><rect x="55.7" y="883.0" width="185.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.7" y="894.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (62 samples, 15.01%)</title><rect x="58.6" y="867.0" width="177.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.6" y="878.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (61 samples, 14.77%)</title><rect x="58.6" y="851.0" width="174.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.6" y="862.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (60 samples, 14.53%)</title><rect x="58.6" y="835.0" width="171.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.6" y="846.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.24%)</title><rect x="58.6" y="819.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (59 samples, 14.29%)</title><rect x="61.4" y="819.0" width="168.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.4" y="830.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.24%)</title><rect x="64.3" y="803.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.get (31 samples, 7.51%)</title><rect x="67.1" y="803.0" width="88.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.1" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.48%)</title><rect x="67.1" y="787.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="70.0" y="771.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.0" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="70.0" y="755.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="70.0" y="739.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="70.0" y="723.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="73.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="70.0" y="707.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="73.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (29 samples, 7.02%)</title><rect x="72.9" y="787.0" width="82.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.9" y="798.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (14 samples, 3.39%)</title><rect x="72.9" y="771.0" width="40.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.9" y="782.0">jav..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (14 samples, 3.39%)</title><rect x="72.9" y="755.0" width="40.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.9" y="766.0">jav..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (14 samples, 3.39%)</title><rect x="72.9" y="739.0" width="40.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.9" y="750.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (14 samples, 3.39%)</title><rect x="72.9" y="723.0" width="40.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.9" y="734.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 3.39%)</title><rect x="72.9" y="707.0" width="40.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.9" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 3.39%)</title><rect x="72.9" y="691.0" width="40.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.9" y="702.0">jav..</text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.24%)</title><rect x="75.7" y="675.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="78.7" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (12 samples, 2.91%)</title><rect x="78.6" y="675.0" width="34.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="81.6" y="686.0">Ja..</text>
</g>
<g>
<title>JVM_FillInStackTrace (12 samples, 2.91%)</title><rect x="78.6" y="659.0" width="34.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="81.6" y="670.0">JV..</text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (1 samples, 0.24%)</title><rect x="78.6" y="643.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="81.6" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (10 samples, 2.42%)</title><rect x="81.4" y="643.0" width="28.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="84.4" y="654.0">ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="81.4" y="627.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="84.4" y="638.0"></text>
</g>
<g>
<title>frame::interpreter_frame_bcp() const (1 samples, 0.24%)</title><rect x="84.3" y="627.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="87.3" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (8 samples, 1.94%)</title><rect x="87.1" y="627.0" width="22.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="90.1" y="638.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="90.0" y="611.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="93.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="90.0" y="595.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="90.0" y="579.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="93.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="90.0" y="563.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.0" y="574.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (4 samples, 0.97%)</title><rect x="92.9" y="611.0" width="11.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="95.9" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (4 samples, 0.97%)</title><rect x="92.9" y="595.0" width="11.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="95.9" y="606.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="92.9" y="579.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="95.9" y="590.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (2 samples, 0.48%)</title><rect x="95.7" y="579.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="98.7" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.48%)</title><rect x="95.7" y="563.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.7" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="101.4" y="579.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="104.4" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="101.4" y="563.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="104.4" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.24%)</title><rect x="101.4" y="547.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="104.4" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.24%)</title><rect x="101.4" y="531.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="104.4" y="542.0"></text>
</g>
<g>
<title>G1BarrierSet::enqueue(oopDesc*) (1 samples, 0.24%)</title><rect x="104.3" y="611.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="107.3" y="622.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.24%)</title><rect x="107.1" y="611.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="110.1" y="622.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.24%)</title><rect x="110.0" y="643.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="113.0" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.15%)</title><rect x="112.9" y="771.0" width="37.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.9" y="782.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.15%)</title><rect x="112.9" y="755.0" width="37.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.9" y="766.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (12 samples, 2.91%)</title><rect x="112.9" y="739.0" width="34.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="115.9" y="750.0">Ja..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.24%)</title><rect x="112.9" y="723.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="115.9" y="734.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.24%)</title><rect x="115.7" y="723.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="118.7" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.24%)</title><rect x="118.6" y="723.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="121.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.24%)</title><rect x="121.4" y="723.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="124.4" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (8 samples, 1.94%)</title><rect x="124.3" y="723.0" width="22.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="127.3" y="734.0">r..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="124.3" y="707.0" width="2.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="127.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.69%)</title><rect x="127.1" y="707.0" width="20.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="130.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.45%)</title><rect x="127.1" y="691.0" width="17.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="130.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (6 samples, 1.45%)</title><rect x="127.1" y="675.0" width="17.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="130.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (4 samples, 0.97%)</title><rect x="127.1" y="659.0" width="11.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="130.1" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="127.1" y="643.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="130.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.24%)</title><rect x="130.0" y="643.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="133.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.24%)</title><rect x="132.9" y="643.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="135.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.24%)</title><rect x="132.9" y="627.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="135.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="135.7" y="643.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="138.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="135.7" y="627.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="138.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="138.6" y="659.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="141.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.24%)</title><rect x="141.4" y="659.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="144.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.24%)</title><rect x="144.3" y="691.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="147.3" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.24%)</title><rect x="147.1" y="739.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="150.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (2 samples, 0.48%)</title><rect x="150.0" y="771.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (2 samples, 0.48%)</title><rect x="150.0" y="755.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.48%)</title><rect x="150.0" y="739.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.48%)</title><rect x="150.0" y="723.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.48%)</title><rect x="150.0" y="707.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.48%)</title><rect x="150.0" y="691.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.responseSend (26 samples, 6.30%)</title><rect x="155.7" y="803.0" width="74.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.7" y="814.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 6.30%)</title><rect x="155.7" y="787.0" width="74.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.7" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 6.30%)</title><rect x="155.7" y="771.0" width="74.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.7" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="155.7" y="755.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.24%)</title><rect x="155.7" y="739.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.24%)</title><rect x="155.7" y="723.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 6.05%)</title><rect x="158.6" y="755.0" width="71.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.6" y="766.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (25 samples, 6.05%)</title><rect x="158.6" y="739.0" width="71.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.6" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (25 samples, 6.05%)</title><rect x="158.6" y="723.0" width="71.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.6" y="734.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (25 samples, 6.05%)</title><rect x="158.6" y="707.0" width="71.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.6" y="718.0">one/nio/..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.24%)</title><rect x="161.4" y="691.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="164.4" y="702.0"></text>
</g>
<g>
<title>__send (23 samples, 5.57%)</title><rect x="164.3" y="691.0" width="65.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="167.3" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 5.33%)</title><rect x="167.1" y="675.0" width="62.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="170.1" y="686.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 5.33%)</title><rect x="167.1" y="659.0" width="62.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="170.1" y="670.0">do_sys..</text>
</g>
<g>
<title>sys_sendto (22 samples, 5.33%)</title><rect x="167.1" y="643.0" width="62.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.1" y="654.0">sys_se..</text>
</g>
<g>
<title>SYSC_sendto (22 samples, 5.33%)</title><rect x="167.1" y="627.0" width="62.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="170.1" y="638.0">SYSC_s..</text>
</g>
<g>
<title>sock_sendmsg (22 samples, 5.33%)</title><rect x="167.1" y="611.0" width="62.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="170.1" y="622.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (22 samples, 5.33%)</title><rect x="167.1" y="595.0" width="62.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.1" y="606.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (22 samples, 5.33%)</title><rect x="167.1" y="579.0" width="62.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="170.1" y="590.0">tcp_se..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="167.1" y="563.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="170.1" y="574.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.24%)</title><rect x="167.1" y="547.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="170.1" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (21 samples, 5.08%)</title><rect x="170.0" y="563.0" width="60.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="173.0" y="574.0">tcp_se..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.24%)</title><rect x="170.0" y="547.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="173.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.24%)</title><rect x="170.0" y="531.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="173.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (1 samples, 0.24%)</title><rect x="170.0" y="515.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="173.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.24%)</title><rect x="170.0" y="499.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="173.0" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.24%)</title><rect x="170.0" y="483.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.0" y="494.0"></text>
</g>
<g>
<title>tcp_push (17 samples, 4.12%)</title><rect x="172.9" y="547.0" width="48.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.9" y="558.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (17 samples, 4.12%)</title><rect x="172.9" y="531.0" width="48.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.9" y="542.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (17 samples, 4.12%)</title><rect x="172.9" y="515.0" width="48.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.9" y="526.0">tcp_..</text>
</g>
<g>
<title>skb_clone (1 samples, 0.24%)</title><rect x="175.7" y="499.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="178.7" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="178.6" y="499.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.6" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.24%)</title><rect x="178.6" y="483.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="181.6" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.24%)</title><rect x="178.6" y="467.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.6" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="178.6" y="451.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="181.6" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="178.6" y="435.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="181.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="178.6" y="419.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="181.6" y="430.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.24%)</title><rect x="181.4" y="499.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="184.4" y="510.0"></text>
</g>
<g>
<title>tcp_transmit_skb (13 samples, 3.15%)</title><rect x="184.3" y="499.0" width="37.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.3" y="510.0">tcp..</text>
</g>
<g>
<title>ip_queue_xmit (13 samples, 3.15%)</title><rect x="184.3" y="483.0" width="37.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="187.3" y="494.0">ip_..</text>
</g>
<g>
<title>ip_local_out (13 samples, 3.15%)</title><rect x="184.3" y="467.0" width="37.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="187.3" y="478.0">ip_..</text>
</g>
<g>
<title>ip_output (13 samples, 3.15%)</title><rect x="184.3" y="451.0" width="37.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.3" y="462.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="184.3" y="435.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (12 samples, 2.91%)</title><rect x="187.1" y="435.0" width="34.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="190.1" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (12 samples, 2.91%)</title><rect x="187.1" y="419.0" width="34.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.1" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 2.66%)</title><rect x="187.1" y="403.0" width="31.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="190.1" y="414.0">__..</text>
</g>
<g>
<title>do_softirq.part.17 (11 samples, 2.66%)</title><rect x="187.1" y="387.0" width="31.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="190.1" y="398.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 2.42%)</title><rect x="190.0" y="371.0" width="28.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.0" y="382.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 2.42%)</title><rect x="190.0" y="355.0" width="28.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.0" y="366.0">__..</text>
</g>
<g>
<title>net_rx_action (10 samples, 2.42%)</title><rect x="190.0" y="339.0" width="28.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.0" y="350.0">ne..</text>
</g>
<g>
<title>process_backlog (10 samples, 2.42%)</title><rect x="190.0" y="323.0" width="28.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="193.0" y="334.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (10 samples, 2.42%)</title><rect x="190.0" y="307.0" width="28.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.0" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 2.42%)</title><rect x="190.0" y="291.0" width="28.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="193.0" y="302.0">__..</text>
</g>
<g>
<title>ip_rcv (10 samples, 2.42%)</title><rect x="190.0" y="275.0" width="28.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="193.0" y="286.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 2.42%)</title><rect x="190.0" y="259.0" width="28.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="193.0" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (10 samples, 2.42%)</title><rect x="190.0" y="243.0" width="28.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="193.0" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 2.42%)</title><rect x="190.0" y="227.0" width="28.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="193.0" y="238.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 2.42%)</title><rect x="190.0" y="211.0" width="28.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="193.0" y="222.0">tc..</text>
</g>
<g>
<title>.slowpath (1 samples, 0.24%)</title><rect x="190.0" y="195.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="193.0" y="206.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock_slowpath (1 samples, 0.24%)</title><rect x="190.0" y="179.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="193.0" y="190.0"></text>
</g>
<g>
<title>__pv_queued_spin_unlock_slowpath (1 samples, 0.24%)</title><rect x="190.0" y="163.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.0" y="174.0"></text>
</g>
<g>
<title>kvm_kick_cpu (1 samples, 0.24%)</title><rect x="190.0" y="147.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 2.18%)</title><rect x="192.9" y="195.0" width="25.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.9" y="206.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 2.18%)</title><rect x="192.9" y="179.0" width="25.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="195.9" y="190.0">t..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.48%)</title><rect x="192.9" y="163.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.9" y="174.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.24%)</title><rect x="192.9" y="147.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.9" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.24%)</title><rect x="195.7" y="147.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="198.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="195.7" y="131.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="198.7" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="195.7" y="115.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="198.7" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.24%)</title><rect x="195.7" y="99.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.7" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (7 samples, 1.69%)</title><rect x="198.6" y="163.0" width="20.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="201.6" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 1.69%)</title><rect x="198.6" y="147.0" width="20.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.6" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 1.45%)</title><rect x="201.4" y="131.0" width="17.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="204.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 1.45%)</title><rect x="201.4" y="115.0" width="17.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="204.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 1.45%)</title><rect x="201.4" y="99.0" width="17.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="204.4" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.24%)</title><rect x="218.6" y="403.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="221.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="218.6" y="387.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="221.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="218.6" y="371.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="218.6" y="355.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="221.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.24%)</title><rect x="218.6" y="339.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.24%)</title><rect x="218.6" y="323.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.6" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.24%)</title><rect x="218.6" y="307.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="221.6" y="318.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.73%)</title><rect x="221.4" y="547.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.48%)</title><rect x="224.3" y="531.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="227.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.24%)</title><rect x="227.1" y="515.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="230.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.24%)</title><rect x="230.0" y="835.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="230.0" y="819.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.24%)</title><rect x="230.0" y="803.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.0" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.24%)</title><rect x="230.0" y="787.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.0" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="232.9" y="851.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="235.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="232.9" y="835.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="235.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="232.9" y="819.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="235.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="235.7" y="867.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="235.7" y="851.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="235.7" y="835.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.7" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="235.7" y="819.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.7" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="235.7" y="803.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="238.7" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="235.7" y="787.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="238.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="238.6" y="867.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="238.6" y="851.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.24%)</title><rect x="238.6" y="835.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.24%)</title><rect x="238.6" y="819.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.24%)</title><rect x="238.6" y="803.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.45%)</title><rect x="241.4" y="883.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.45%)</title><rect x="241.4" y="867.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.4" y="878.0"></text>
</g>
<g>
<title>__GI___recv (6 samples, 1.45%)</title><rect x="241.4" y="851.0" width="17.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="244.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.45%)</title><rect x="241.4" y="835.0" width="17.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.45%)</title><rect x="241.4" y="819.0" width="17.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="244.4" y="830.0"></text>
</g>
<g>
<title>sys_recvfrom (4 samples, 0.97%)</title><rect x="247.1" y="803.0" width="11.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.1" y="814.0"></text>
</g>
<g>
<title>SYSC_recvfrom (4 samples, 0.97%)</title><rect x="247.1" y="787.0" width="11.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.1" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.73%)</title><rect x="247.1" y="771.0" width="8.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.1" y="782.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.73%)</title><rect x="247.1" y="755.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="250.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.73%)</title><rect x="247.1" y="739.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="250.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="250.0" y="723.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.0" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="250.0" y="707.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.24%)</title><rect x="250.0" y="691.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="253.0" y="702.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.24%)</title><rect x="250.0" y="675.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="253.0" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="252.9" y="723.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="255.9" y="734.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.24%)</title><rect x="252.9" y="707.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="255.9" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="255.7" y="771.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="258.7" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="255.7" y="755.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="258.7" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="255.7" y="739.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="258.7" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="255.7" y="723.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="258.7" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.48%)</title><rect x="258.6" y="899.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="261.6" y="910.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.48%)</title><rect x="258.6" y="883.0" width="5.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="261.6" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.48%)</title><rect x="258.6" y="867.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="261.6" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2641] (90 samples, 21.79%)</title><rect x="264.3" y="947.0" width="257.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="267.3" y="958.0">[NIO Selector #1 tid=2641]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.24%)</title><rect x="264.3" y="931.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="267.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="264.3" y="915.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="267.3" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.24%)</title><rect x="264.3" y="899.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="267.3" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (89 samples, 21.55%)</title><rect x="267.1" y="931.0" width="254.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.1" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.24%)</title><rect x="272.9" y="915.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 5.08%)</title><rect x="275.7" y="915.0" width="60.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.7" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 4.84%)</title><rect x="275.7" y="899.0" width="57.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.7" y="910.0">one/ni..</text>
</g>
<g>
<title>[unknown] (20 samples, 4.84%)</title><rect x="275.7" y="883.0" width="57.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="278.7" y="894.0">[unkno..</text>
</g>
<g>
<title>epoll_wait (20 samples, 4.84%)</title><rect x="275.7" y="867.0" width="57.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="278.7" y="878.0">epoll_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 4.60%)</title><rect x="278.6" y="851.0" width="54.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="281.6" y="862.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 4.60%)</title><rect x="278.6" y="835.0" width="54.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="281.6" y="846.0">do_sy..</text>
</g>
<g>
<title>sys_epoll_wait (19 samples, 4.60%)</title><rect x="278.6" y="819.0" width="54.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="281.6" y="830.0">sys_e..</text>
</g>
<g>
<title>ep_poll (19 samples, 4.60%)</title><rect x="278.6" y="803.0" width="54.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="281.6" y="814.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (4 samples, 0.97%)</title><rect x="278.6" y="787.0" width="11.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.6" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="278.6" y="771.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="281.6" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.48%)</title><rect x="281.4" y="771.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="284.4" y="782.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.48%)</title><rect x="281.4" y="755.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="284.4" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.24%)</title><rect x="287.1" y="771.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="290.1" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 3.63%)</title><rect x="290.0" y="787.0" width="42.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="293.0" y="798.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (15 samples, 3.63%)</title><rect x="290.0" y="771.0" width="42.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.0" y="782.0">sche..</text>
</g>
<g>
<title>schedule (15 samples, 3.63%)</title><rect x="290.0" y="755.0" width="42.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="293.0" y="766.0">sche..</text>
</g>
<g>
<title>__schedule (15 samples, 3.63%)</title><rect x="290.0" y="739.0" width="42.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="293.0" y="750.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (15 samples, 3.63%)</title><rect x="290.0" y="723.0" width="42.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="293.0" y="734.0">fini..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="332.9" y="899.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="335.9" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="332.9" y="883.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="335.9" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="332.9" y="867.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="335.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 15.74%)</title><rect x="335.7" y="915.0" width="185.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.7" y="926.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 15.74%)</title><rect x="335.7" y="899.0" width="185.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.7" y="910.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (59 samples, 14.29%)</title><rect x="335.7" y="883.0" width="168.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.7" y="894.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57 samples, 13.80%)</title><rect x="338.6" y="867.0" width="162.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.6" y="878.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57 samples, 13.80%)</title><rect x="338.6" y="851.0" width="162.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.6" y="862.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (56 samples, 13.56%)</title><rect x="338.6" y="835.0" width="160.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.6" y="846.0">RequestHandler1_enti..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.48%)</title><rect x="338.6" y="819.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.24%)</title><rect x="338.6" y="803.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.24%)</title><rect x="338.6" y="787.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="341.6" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.24%)</title><rect x="338.6" y="771.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="341.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.24%)</title><rect x="341.4" y="803.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.24%)</title><rect x="341.4" y="787.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.24%)</title><rect x="341.4" y="771.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.24%)</title><rect x="341.4" y="755.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (54 samples, 13.08%)</title><rect x="344.3" y="819.0" width="154.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.3" y="830.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.get (24 samples, 5.81%)</title><rect x="344.3" y="803.0" width="68.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.3" y="814.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.24%)</title><rect x="344.3" y="787.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.24%)</title><rect x="344.3" y="771.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.3" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.24%)</title><rect x="344.3" y="755.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="347.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.48%)</title><rect x="347.1" y="787.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="350.0" y="771.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.0" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="350.0" y="755.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (1 samples, 0.24%)</title><rect x="350.0" y="739.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (21 samples, 5.08%)</title><rect x="352.9" y="787.0" width="60.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.9" y="798.0">ru/mai..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (12 samples, 2.91%)</title><rect x="352.9" y="771.0" width="34.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.9" y="782.0">ja..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (12 samples, 2.91%)</title><rect x="352.9" y="755.0" width="34.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.9" y="766.0">ja..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (12 samples, 2.91%)</title><rect x="352.9" y="739.0" width="34.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.9" y="750.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (12 samples, 2.91%)</title><rect x="352.9" y="723.0" width="34.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.9" y="734.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 2.91%)</title><rect x="352.9" y="707.0" width="34.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.9" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 2.91%)</title><rect x="352.9" y="691.0" width="34.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.9" y="702.0">ja..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (12 samples, 2.91%)</title><rect x="352.9" y="675.0" width="34.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="355.9" y="686.0">Ja..</text>
</g>
<g>
<title>JVM_FillInStackTrace (12 samples, 2.91%)</title><rect x="352.9" y="659.0" width="34.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="355.9" y="670.0">JV..</text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (1 samples, 0.24%)</title><rect x="352.9" y="643.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="355.9" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (11 samples, 2.66%)</title><rect x="355.7" y="643.0" width="31.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="358.7" y="654.0">ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="355.7" y="627.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="358.7" y="638.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.24%)</title><rect x="358.6" y="627.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="361.6" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (9 samples, 2.18%)</title><rect x="361.4" y="627.0" width="25.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="364.4" y="638.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="364.3" y="611.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="367.3" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (3 samples, 0.73%)</title><rect x="367.1" y="611.0" width="8.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="370.1" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (3 samples, 0.73%)</title><rect x="367.1" y="595.0" width="8.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="370.1" y="606.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (2 samples, 0.48%)</title><rect x="367.1" y="579.0" width="5.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="370.1" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="370.0" y="563.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="373.0" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.24%)</title><rect x="370.0" y="547.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="373.0" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="372.9" y="579.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="375.9" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="372.9" y="563.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="375.9" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.24%)</title><rect x="372.9" y="547.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="375.9" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.24%)</title><rect x="372.9" y="531.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="375.9" y="542.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.24%)</title><rect x="375.7" y="611.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="378.7" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.24%)</title><rect x="375.7" y="595.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="378.7" y="606.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.24%)</title><rect x="375.7" y="579.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="378.7" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.73%)</title><rect x="378.6" y="611.0" width="8.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="381.6" y="622.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.73%)</title><rect x="378.6" y="595.0" width="8.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="381.6" y="606.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.24%)</title><rect x="378.6" y="579.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="381.6" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.48%)</title><rect x="381.4" y="579.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="384.4" y="590.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.48%)</title><rect x="381.4" y="563.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="384.4" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (8 samples, 1.94%)</title><rect x="387.1" y="771.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.1" y="782.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (8 samples, 1.94%)</title><rect x="387.1" y="755.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.1" y="766.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (8 samples, 1.94%)</title><rect x="387.1" y="739.0" width="22.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="390.1" y="750.0">J..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.24%)</title><rect x="387.1" y="723.0" width="2.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="390.1" y="734.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.24%)</title><rect x="390.0" y="723.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="393.0" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (6 samples, 1.45%)</title><rect x="392.9" y="723.0" width="17.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="395.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (5 samples, 1.21%)</title><rect x="395.7" y="707.0" width="14.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="398.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (5 samples, 1.21%)</title><rect x="395.7" y="691.0" width="14.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="398.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (5 samples, 1.21%)</title><rect x="395.7" y="675.0" width="14.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="398.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (4 samples, 0.97%)</title><rect x="395.7" y="659.0" width="11.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="398.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.48%)</title><rect x="398.6" y="643.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="401.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.24%)</title><rect x="401.4" y="627.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="404.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.24%)</title><rect x="401.4" y="611.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="404.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="404.3" y="643.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="407.3" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12864652738422910904.so (1 samples, 0.24%)</title><rect x="404.3" y="627.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="407.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.24%)</title><rect x="407.1" y="659.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="410.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (1 samples, 0.24%)</title><rect x="410.0" y="771.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (1 samples, 0.24%)</title><rect x="410.0" y="755.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.24%)</title><rect x="410.0" y="739.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="410.0" y="723.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.24%)</title><rect x="410.0" y="707.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.24%)</title><rect x="410.0" y="691.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="410.0" y="675.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="413.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.responseSend (30 samples, 7.26%)</title><rect x="412.9" y="803.0" width="85.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.9" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 7.26%)</title><rect x="412.9" y="787.0" width="85.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.9" y="798.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30 samples, 7.26%)</title><rect x="412.9" y="771.0" width="85.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.9" y="782.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.48%)</title><rect x="412.9" y="755.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.48%)</title><rect x="412.9" y="739.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.24%)</title><rect x="412.9" y="723.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.24%)</title><rect x="412.9" y="707.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.24%)</title><rect x="415.7" y="723.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.24%)</title><rect x="415.7" y="707.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.7" y="718.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.24%)</title><rect x="415.7" y="691.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 6.78%)</title><rect x="418.6" y="755.0" width="80.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.6" y="766.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 6.78%)</title><rect x="418.6" y="739.0" width="80.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.6" y="750.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (28 samples, 6.78%)</title><rect x="418.6" y="723.0" width="80.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.6" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (28 samples, 6.78%)</title><rect x="418.6" y="707.0" width="80.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.6" y="718.0">one/nio/n..</text>
</g>
<g>
<title>__send (28 samples, 6.78%)</title><rect x="418.6" y="691.0" width="80.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="421.6" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 6.78%)</title><rect x="418.6" y="675.0" width="80.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="421.6" y="686.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (27 samples, 6.54%)</title><rect x="418.6" y="659.0" width="77.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="421.6" y="670.0">do_syscal..</text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.48%)</title><rect x="421.4" y="643.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="424.4" y="654.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.48%)</title><rect x="421.4" y="627.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="424.4" y="638.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.48%)</title><rect x="421.4" y="611.0" width="5.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.4" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.48%)</title><rect x="421.4" y="595.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="424.4" y="606.0"></text>
</g>
<g>
<title>sys_sendto (24 samples, 5.81%)</title><rect x="427.1" y="643.0" width="68.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.1" y="654.0">sys_sen..</text>
</g>
<g>
<title>SYSC_sendto (24 samples, 5.81%)</title><rect x="427.1" y="627.0" width="68.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.1" y="638.0">SYSC_se..</text>
</g>
<g>
<title>sock_sendmsg (24 samples, 5.81%)</title><rect x="427.1" y="611.0" width="68.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.1" y="622.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (23 samples, 5.57%)</title><rect x="427.1" y="595.0" width="65.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="430.1" y="606.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (23 samples, 5.57%)</title><rect x="427.1" y="579.0" width="65.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="430.1" y="590.0">tcp_sen..</text>
</g>
<g>
<title>tcp_sendmsg_locked (23 samples, 5.57%)</title><rect x="427.1" y="563.0" width="65.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.1" y="574.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.24%)</title><rect x="427.1" y="547.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="430.1" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.24%)</title><rect x="427.1" y="531.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="430.1" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.48%)</title><rect x="430.0" y="547.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="433.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.48%)</title><rect x="430.0" y="531.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="433.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.48%)</title><rect x="430.0" y="515.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.0" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.24%)</title><rect x="432.9" y="499.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="435.9" y="510.0"></text>
</g>
<g>
<title>tcp_push (19 samples, 4.60%)</title><rect x="435.7" y="547.0" width="54.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.7" y="558.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (19 samples, 4.60%)</title><rect x="435.7" y="531.0" width="54.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.7" y="542.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (19 samples, 4.60%)</title><rect x="435.7" y="515.0" width="54.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.7" y="526.0">tcp_w..</text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.48%)</title><rect x="435.7" y="499.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.7" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.48%)</title><rect x="435.7" y="483.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.7" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (2 samples, 0.48%)</title><rect x="435.7" y="467.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="438.7" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="438.6" y="451.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.6" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="438.6" y="435.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="441.6" y="446.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.24%)</title><rect x="438.6" y="419.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="441.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.24%)</title><rect x="438.6" y="403.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="441.6" y="414.0"></text>
</g>
<g>
<title>tcp_transmit_skb (17 samples, 4.12%)</title><rect x="441.4" y="499.0" width="48.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.4" y="510.0">tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (17 samples, 4.12%)</title><rect x="441.4" y="483.0" width="48.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="444.4" y="494.0">ip_q..</text>
</g>
<g>
<title>ip_local_out (17 samples, 4.12%)</title><rect x="441.4" y="467.0" width="48.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.4" y="478.0">ip_l..</text>
</g>
<g>
<title>ip_output (17 samples, 4.12%)</title><rect x="441.4" y="451.0" width="48.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.4" y="462.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (16 samples, 3.87%)</title><rect x="444.3" y="435.0" width="45.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="447.3" y="446.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.24%)</title><rect x="444.3" y="419.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (15 samples, 3.63%)</title><rect x="447.1" y="419.0" width="42.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="450.1" y="430.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (13 samples, 3.15%)</title><rect x="447.1" y="403.0" width="37.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="450.1" y="414.0">__l..</text>
</g>
<g>
<title>do_softirq.part.17 (13 samples, 3.15%)</title><rect x="447.1" y="387.0" width="37.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="450.1" y="398.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (13 samples, 3.15%)</title><rect x="447.1" y="371.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="450.1" y="382.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (13 samples, 3.15%)</title><rect x="447.1" y="355.0" width="37.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="450.1" y="366.0">__s..</text>
</g>
<g>
<title>net_rx_action (13 samples, 3.15%)</title><rect x="447.1" y="339.0" width="37.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.1" y="350.0">net..</text>
</g>
<g>
<title>process_backlog (13 samples, 3.15%)</title><rect x="447.1" y="323.0" width="37.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="450.1" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (13 samples, 3.15%)</title><rect x="447.1" y="307.0" width="37.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="450.1" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 3.15%)</title><rect x="447.1" y="291.0" width="37.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.1" y="302.0">__n..</text>
</g>
<g>
<title>ip_rcv (13 samples, 3.15%)</title><rect x="447.1" y="275.0" width="37.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.1" y="286.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (11 samples, 2.66%)</title><rect x="452.9" y="259.0" width="31.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.9" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (10 samples, 2.42%)</title><rect x="452.9" y="243.0" width="28.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="455.9" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 2.42%)</title><rect x="452.9" y="227.0" width="28.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="455.9" y="238.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 2.42%)</title><rect x="452.9" y="211.0" width="28.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="455.9" y="222.0">tc..</text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 2.42%)</title><rect x="452.9" y="195.0" width="28.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="455.9" y="206.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (10 samples, 2.42%)</title><rect x="452.9" y="179.0" width="28.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="455.9" y="190.0">tc..</text>
</g>
<g>
<title>tcp_ack (5 samples, 1.21%)</title><rect x="455.7" y="163.0" width="14.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="458.7" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 1.21%)</title><rect x="455.7" y="147.0" width="14.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="458.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.48%)</title><rect x="455.7" y="131.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="458.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.24%)</title><rect x="455.7" y="115.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="458.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.24%)</title><rect x="455.7" y="99.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="458.7" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="458.6" y="115.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="461.6" y="126.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.24%)</title><rect x="458.6" y="99.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="461.6" y="110.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.24%)</title><rect x="461.4" y="131.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.4" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.24%)</title><rect x="464.3" y="131.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="467.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.33 (1 samples, 0.24%)</title><rect x="467.1" y="131.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.1" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.24%)</title><rect x="470.0" y="163.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.0" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (3 samples, 0.73%)</title><rect x="472.9" y="163.0" width="8.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.9" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.73%)</title><rect x="472.9" y="147.0" width="8.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.9" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.24%)</title><rect x="478.6" y="131.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="481.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.24%)</title><rect x="478.6" y="115.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.6" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="478.6" y="99.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="481.6" y="110.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="481.4" y="243.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.4" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.48%)</title><rect x="484.3" y="403.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="487.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.48%)</title><rect x="484.3" y="387.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="487.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="484.3" y="371.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="487.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="484.3" y="355.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="487.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.24%)</title><rect x="484.3" y="339.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="487.3" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.24%)</title><rect x="487.1" y="371.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="490.1" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.24%)</title><rect x="487.1" y="355.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="490.1" y="366.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="490.0" y="547.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.0" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.24%)</title><rect x="490.0" y="531.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="493.0" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.24%)</title><rect x="490.0" y="515.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.0" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.24%)</title><rect x="492.9" y="595.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="495.9" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.24%)</title><rect x="492.9" y="579.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.24%)</title><rect x="492.9" y="563.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.9" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.24%)</title><rect x="492.9" y="547.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="495.9" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.24%)</title><rect x="492.9" y="531.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.9" y="542.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.24%)</title><rect x="495.7" y="659.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.24%)</title><rect x="498.6" y="835.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="498.6" y="819.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.24%)</title><rect x="498.6" y="803.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.24%)</title><rect x="498.6" y="787.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.6" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="498.6" y="771.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="501.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="501.4" y="867.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="501.4" y="851.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="501.4" y="835.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.4" y="846.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.24%)</title><rect x="501.4" y="819.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.45%)</title><rect x="504.3" y="883.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.45%)</title><rect x="504.3" y="867.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.73%)</title><rect x="504.3" y="851.0" width="8.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="507.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.73%)</title><rect x="504.3" y="835.0" width="8.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="507.3" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.48%)</title><rect x="504.3" y="819.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="507.3" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="507.1" y="803.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="510.1" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.24%)</title><rect x="507.1" y="787.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="510.1" y="798.0"></text>
</g>
<g>
<title>throw_by_name (1 samples, 0.24%)</title><rect x="510.0" y="819.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="513.0" y="830.0"></text>
</g>
<g>
<title>jni_FindClass (1 samples, 0.24%)</title><rect x="510.0" y="803.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="513.0" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.24%)</title><rect x="510.0" y="787.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="513.0" y="798.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.48%)</title><rect x="512.9" y="851.0" width="5.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="515.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="515.7" y="835.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="515.7" y="819.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.7" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="518.6" y="851.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="521.6" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="518.6" y="835.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="521.6" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="518.6" y="819.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="521.6" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=2642] (89 samples, 21.55%)</title><rect x="521.4" y="947.0" width="254.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="524.4" y="958.0">[NIO Selector #2 tid=2642]</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.48%)</title><rect x="521.4" y="931.0" width="5.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="524.4" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 21.07%)</title><rect x="527.1" y="931.0" width="248.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.1" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 3.15%)</title><rect x="538.6" y="915.0" width="37.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.6" y="926.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 3.15%)</title><rect x="538.6" y="899.0" width="37.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.6" y="910.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.24%)</title><rect x="541.4" y="883.0" width="2.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="544.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 2.18%)</title><rect x="544.3" y="883.0" width="25.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="547.3" y="894.0">[..</text>
</g>
<g>
<title>epoll_wait (9 samples, 2.18%)</title><rect x="544.3" y="867.0" width="25.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="547.3" y="878.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 2.18%)</title><rect x="544.3" y="851.0" width="25.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.3" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.18%)</title><rect x="544.3" y="835.0" width="25.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="547.3" y="846.0">d..</text>
</g>
<g>
<title>sys_epoll_wait (9 samples, 2.18%)</title><rect x="544.3" y="819.0" width="25.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="547.3" y="830.0">s..</text>
</g>
<g>
<title>ep_poll (9 samples, 2.18%)</title><rect x="544.3" y="803.0" width="25.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="547.3" y="814.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (1 samples, 0.24%)</title><rect x="544.3" y="787.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="547.3" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="544.3" y="771.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="547.3" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.10 (1 samples, 0.24%)</title><rect x="544.3" y="755.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="547.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.24%)</title><rect x="544.3" y="739.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.3" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.24%)</title><rect x="544.3" y="723.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="547.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 1.94%)</title><rect x="547.1" y="787.0" width="22.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.1" y="798.0">s..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 1.94%)</title><rect x="547.1" y="771.0" width="22.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="550.1" y="782.0">s..</text>
</g>
<g>
<title>schedule (8 samples, 1.94%)</title><rect x="547.1" y="755.0" width="22.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="550.1" y="766.0">s..</text>
</g>
<g>
<title>__schedule (8 samples, 1.94%)</title><rect x="547.1" y="739.0" width="22.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="550.1" y="750.0">_..</text>
</g>
<g>
<title>finish_task_switch (8 samples, 1.94%)</title><rect x="547.1" y="723.0" width="22.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.1" y="734.0">f..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.24%)</title><rect x="570.0" y="883.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="573.0" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="572.9" y="883.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.9" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="572.9" y="867.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="575.9" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="572.9" y="851.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="575.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (70 samples, 16.95%)</title><rect x="575.7" y="915.0" width="200.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.7" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (70 samples, 16.95%)</title><rect x="575.7" y="899.0" width="200.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.7" y="910.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (63 samples, 15.25%)</title><rect x="575.7" y="883.0" width="180.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.7" y="894.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (59 samples, 14.29%)</title><rect x="578.6" y="867.0" width="168.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.6" y="878.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (59 samples, 14.29%)</title><rect x="578.6" y="851.0" width="168.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.6" y="862.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (59 samples, 14.29%)</title><rect x="578.6" y="835.0" width="168.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.6" y="846.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.24%)</title><rect x="578.6" y="819.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.24%)</title><rect x="578.6" y="803.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (58 samples, 14.04%)</title><rect x="581.4" y="819.0" width="165.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.4" y="830.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.24%)</title><rect x="581.4" y="803.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.get (29 samples, 7.02%)</title><rect x="584.3" y="803.0" width="82.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.3" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.24%)</title><rect x="584.3" y="787.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.3" y="798.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.24%)</title><rect x="587.1" y="787.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="590.1" y="798.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.24%)</title><rect x="587.1" y="771.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.1" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="587.1" y="755.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="590.1" y="766.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.24%)</title><rect x="587.1" y="739.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.1" y="750.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.24%)</title><rect x="587.1" y="723.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.1" y="734.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.24%)</title><rect x="587.1" y="707.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="590.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (27 samples, 6.54%)</title><rect x="590.0" y="787.0" width="77.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.0" y="798.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (16 samples, 3.87%)</title><rect x="590.0" y="771.0" width="45.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.0" y="782.0">java..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (16 samples, 3.87%)</title><rect x="590.0" y="755.0" width="45.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.0" y="766.0">java..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (16 samples, 3.87%)</title><rect x="590.0" y="739.0" width="45.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.0" y="750.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (16 samples, 3.87%)</title><rect x="590.0" y="723.0" width="45.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.0" y="734.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (16 samples, 3.87%)</title><rect x="590.0" y="707.0" width="45.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.0" y="718.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (15 samples, 3.63%)</title><rect x="592.9" y="691.0" width="42.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.9" y="702.0">java..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (15 samples, 3.63%)</title><rect x="592.9" y="675.0" width="42.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="595.9" y="686.0">Java..</text>
</g>
<g>
<title>JVM_FillInStackTrace (12 samples, 2.91%)</title><rect x="592.9" y="659.0" width="34.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="595.9" y="670.0">JV..</text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (1 samples, 0.24%)</title><rect x="592.9" y="643.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="595.9" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (11 samples, 2.66%)</title><rect x="595.7" y="643.0" width="31.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="598.7" y="654.0">ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="595.7" y="627.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="598.7" y="638.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.24%)</title><rect x="598.6" y="627.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="601.6" y="638.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.24%)</title><rect x="601.4" y="627.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.4" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (8 samples, 1.94%)</title><rect x="604.3" y="627.0" width="22.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="607.3" y="638.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="604.3" y="611.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="607.3" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.24%)</title><rect x="607.1" y="611.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="610.1" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.24%)</title><rect x="607.1" y="595.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="610.1" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="607.1" y="579.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="610.1" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="607.1" y="563.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="610.1" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.24%)</title><rect x="607.1" y="547.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="610.1" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="607.1" y="531.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="610.1" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="607.1" y="515.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.1" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="607.1" y="499.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="610.1" y="510.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.24%)</title><rect x="610.0" y="611.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="613.0" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.24%)</title><rect x="612.9" y="611.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="615.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.73%)</title><rect x="615.7" y="611.0" width="8.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="618.7" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.24%)</title><rect x="618.6" y="595.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="621.6" y="606.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.24%)</title><rect x="621.4" y="595.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="624.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="621.4" y="579.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="621.4" y="563.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="624.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="621.4" y="547.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="624.4" y="558.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.24%)</title><rect x="624.3" y="611.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="627.3" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.24%)</title><rect x="627.1" y="659.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="630.1" y="670.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.48%)</title><rect x="630.0" y="659.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="633.0" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 2.18%)</title><rect x="635.7" y="771.0" width="25.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.7" y="782.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 2.18%)</title><rect x="635.7" y="755.0" width="25.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.7" y="766.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (9 samples, 2.18%)</title><rect x="635.7" y="739.0" width="25.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="638.7" y="750.0">J..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (9 samples, 2.18%)</title><rect x="635.7" y="723.0" width="25.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="638.7" y="734.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (9 samples, 2.18%)</title><rect x="635.7" y="707.0" width="25.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="638.7" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.24%)</title><rect x="635.7" y="691.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="638.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (8 samples, 1.94%)</title><rect x="638.6" y="691.0" width="22.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="641.6" y="702.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (5 samples, 1.21%)</title><rect x="638.6" y="675.0" width="14.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="641.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.48%)</title><rect x="638.6" y="659.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="641.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (2 samples, 0.48%)</title><rect x="644.3" y="659.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="647.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.24%)</title><rect x="647.1" y="643.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="650.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.24%)</title><rect x="647.1" y="627.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="650.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.24%)</title><rect x="647.1" y="611.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="650.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.24%)</title><rect x="650.0" y="659.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="653.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (3 samples, 0.73%)</title><rect x="652.9" y="675.0" width="8.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="655.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (2 samples, 0.48%)</title><rect x="661.4" y="771.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (2 samples, 0.48%)</title><rect x="661.4" y="755.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.24%)</title><rect x="661.4" y="739.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.24%)</title><rect x="664.3" y="739.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="664.3" y="723.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.24%)</title><rect x="664.3" y="707.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.24%)</title><rect x="664.3" y="691.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.responseSend (28 samples, 6.78%)</title><rect x="667.1" y="803.0" width="80.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.1" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 6.78%)</title><rect x="667.1" y="787.0" width="80.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.1" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 6.78%)</title><rect x="667.1" y="771.0" width="80.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.1" y="782.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="667.1" y="755.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.24%)</title><rect x="667.1" y="739.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 6.54%)</title><rect x="670.0" y="755.0" width="77.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.0" y="766.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 6.54%)</title><rect x="670.0" y="739.0" width="77.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.0" y="750.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (27 samples, 6.54%)</title><rect x="670.0" y="723.0" width="77.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.0" y="734.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (27 samples, 6.54%)</title><rect x="670.0" y="707.0" width="77.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.0" y="718.0">one/nio/n..</text>
</g>
<g>
<title>__send (27 samples, 6.54%)</title><rect x="670.0" y="691.0" width="77.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="673.0" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 6.54%)</title><rect x="670.0" y="675.0" width="77.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="673.0" y="686.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (27 samples, 6.54%)</title><rect x="670.0" y="659.0" width="77.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="673.0" y="670.0">do_syscal..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="672.9" y="643.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="675.9" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="672.9" y="627.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="675.9" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="672.9" y="611.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.9" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="672.9" y="595.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="675.9" y="606.0"></text>
</g>
<g>
<title>sys_sendto (25 samples, 6.05%)</title><rect x="675.7" y="643.0" width="71.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="678.7" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (25 samples, 6.05%)</title><rect x="675.7" y="627.0" width="71.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="678.7" y="638.0">SYSC_sen..</text>
</g>
<g>
<title>sock_sendmsg (25 samples, 6.05%)</title><rect x="675.7" y="611.0" width="71.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="678.7" y="622.0">sock_sen..</text>
</g>
<g>
<title>inet_sendmsg (25 samples, 6.05%)</title><rect x="675.7" y="595.0" width="71.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="678.7" y="606.0">inet_sen..</text>
</g>
<g>
<title>tcp_sendmsg (25 samples, 6.05%)</title><rect x="675.7" y="579.0" width="71.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="678.7" y="590.0">tcp_send..</text>
</g>
<g>
<title>tcp_sendmsg_locked (25 samples, 6.05%)</title><rect x="675.7" y="563.0" width="71.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="678.7" y="574.0">tcp_send..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.48%)</title><rect x="675.7" y="547.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="678.7" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.48%)</title><rect x="675.7" y="531.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="678.7" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.24%)</title><rect x="681.4" y="547.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.4" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.24%)</title><rect x="681.4" y="531.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.4" y="542.0"></text>
</g>
<g>
<title>tcp_push (21 samples, 5.08%)</title><rect x="684.3" y="547.0" width="60.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="687.3" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (21 samples, 5.08%)</title><rect x="684.3" y="531.0" width="60.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="687.3" y="542.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (21 samples, 5.08%)</title><rect x="684.3" y="515.0" width="60.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="687.3" y="526.0">tcp_wr..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="684.3" y="499.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.3" y="510.0"></text>
</g>
<g>
<title>tcp_transmit_skb (20 samples, 4.84%)</title><rect x="687.1" y="499.0" width="57.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="690.1" y="510.0">tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (18 samples, 4.36%)</title><rect x="690.0" y="483.0" width="51.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.0" y="494.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out (18 samples, 4.36%)</title><rect x="690.0" y="467.0" width="51.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="693.0" y="478.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.24%)</title><rect x="690.0" y="451.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.0" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.24%)</title><rect x="690.0" y="435.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.0" y="446.0"></text>
</g>
<g>
<title>ip_output (17 samples, 4.12%)</title><rect x="692.9" y="451.0" width="48.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="695.9" y="462.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (17 samples, 4.12%)</title><rect x="692.9" y="435.0" width="48.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="695.9" y="446.0">ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (17 samples, 4.12%)</title><rect x="692.9" y="419.0" width="48.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="695.9" y="430.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (14 samples, 3.39%)</title><rect x="692.9" y="403.0" width="40.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="695.9" y="414.0">__l..</text>
</g>
<g>
<title>do_softirq.part.17 (14 samples, 3.39%)</title><rect x="692.9" y="387.0" width="40.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="695.9" y="398.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (13 samples, 3.15%)</title><rect x="695.7" y="371.0" width="37.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="698.7" y="382.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (13 samples, 3.15%)</title><rect x="695.7" y="355.0" width="37.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="698.7" y="366.0">__s..</text>
</g>
<g>
<title>net_rx_action (12 samples, 2.91%)</title><rect x="698.6" y="339.0" width="34.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="701.6" y="350.0">ne..</text>
</g>
<g>
<title>process_backlog (12 samples, 2.91%)</title><rect x="698.6" y="323.0" width="34.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.6" y="334.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 2.91%)</title><rect x="698.6" y="307.0" width="34.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="701.6" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (12 samples, 2.91%)</title><rect x="698.6" y="291.0" width="34.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.6" y="302.0">__..</text>
</g>
<g>
<title>ip_rcv (12 samples, 2.91%)</title><rect x="698.6" y="275.0" width="34.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.6" y="286.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 2.91%)</title><rect x="698.6" y="259.0" width="34.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="701.6" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (12 samples, 2.91%)</title><rect x="698.6" y="243.0" width="34.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.6" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 2.91%)</title><rect x="698.6" y="227.0" width="34.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.6" y="238.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 2.42%)</title><rect x="704.3" y="211.0" width="28.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.3" y="222.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.24%)</title><rect x="707.1" y="195.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.1" y="206.0"></text>
</g>
<g>
<title>tcp_filter (1 samples, 0.24%)</title><rect x="710.0" y="195.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="713.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="710.0" y="179.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.0" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.24%)</title><rect x="710.0" y="163.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 1.69%)</title><rect x="712.9" y="195.0" width="20.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="715.9" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 1.69%)</title><rect x="712.9" y="179.0" width="20.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="715.9" y="190.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.24%)</title><rect x="712.9" y="163.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.9" y="174.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.73%)</title><rect x="715.7" y="163.0" width="8.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="718.7" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.24%)</title><rect x="715.7" y="147.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="718.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.24%)</title><rect x="718.6" y="147.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="721.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="718.6" y="131.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.6" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.24%)</title><rect x="718.6" y="115.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.6" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.24%)</title><rect x="718.6" y="99.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="721.6" y="110.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.24%)</title><rect x="721.4" y="147.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.4" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (3 samples, 0.73%)</title><rect x="724.3" y="163.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="727.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.73%)</title><rect x="724.3" y="147.0" width="8.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="727.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.73%)</title><rect x="724.3" y="131.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.73%)</title><rect x="724.3" y="115.0" width="8.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="727.3" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.73%)</title><rect x="724.3" y="99.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.3" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.73%)</title><rect x="732.9" y="403.0" width="8.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="735.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.73%)</title><rect x="732.9" y="387.0" width="8.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.48%)</title><rect x="732.9" y="371.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="735.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="732.9" y="355.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.24%)</title><rect x="732.9" y="339.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.9" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.24%)</title><rect x="732.9" y="323.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.9" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.24%)</title><rect x="732.9" y="307.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.9" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.24%)</title><rect x="735.7" y="355.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="738.6" y="371.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="741.6" y="382.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.24%)</title><rect x="741.4" y="483.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="744.4" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.24%)</title><rect x="741.4" y="467.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="744.4" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="744.3" y="547.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="747.3" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.24%)</title><rect x="744.3" y="531.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="747.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.48%)</title><rect x="747.1" y="867.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="747.1" y="851.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="747.1" y="835.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.24%)</title><rect x="750.0" y="851.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.24%)</title><rect x="750.0" y="835.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="752.9" y="867.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="752.9" y="851.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="752.9" y="835.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.24%)</title><rect x="752.9" y="819.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.24%)</title><rect x="752.9" y="803.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.9" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.24%)</title><rect x="752.9" y="787.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.69%)</title><rect x="755.7" y="883.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.69%)</title><rect x="755.7" y="867.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.97%)</title><rect x="755.7" y="851.0" width="11.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="758.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.97%)</title><rect x="755.7" y="835.0" width="11.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="758.7" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.73%)</title><rect x="755.7" y="819.0" width="8.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="758.7" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.24%)</title><rect x="755.7" y="803.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="758.7" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="758.6" y="803.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="761.6" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="758.6" y="787.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="761.6" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.24%)</title><rect x="758.6" y="771.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="761.6" y="782.0"></text>
</g>
<g>
<title>jni_ThrowNew (1 samples, 0.24%)</title><rect x="761.4" y="803.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="764.4" y="814.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (1 samples, 0.24%)</title><rect x="761.4" y="787.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="764.4" y="798.0"></text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (1 samples, 0.24%)</title><rect x="761.4" y="771.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="764.4" y="782.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (1 samples, 0.24%)</title><rect x="761.4" y="755.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="764.4" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (1 samples, 0.24%)</title><rect x="761.4" y="739.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="764.4" y="750.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (1 samples, 0.24%)</title><rect x="761.4" y="723.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="764.4" y="734.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.24%)</title><rect x="761.4" y="707.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="764.4" y="718.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.24%)</title><rect x="761.4" y="691.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="764.4" y="702.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.24%)</title><rect x="761.4" y="675.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="764.4" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="764.3" y="819.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="767.3" y="830.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.73%)</title><rect x="767.1" y="851.0" width="8.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="770.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.73%)</title><rect x="767.1" y="835.0" width="8.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="770.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.73%)</title><rect x="767.1" y="819.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="770.1" y="830.0"></text>
</g>
<g>
<title>sys_recvfrom (2 samples, 0.48%)</title><rect x="770.0" y="803.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="773.0" y="814.0"></text>
</g>
<g>
<title>SYSC_recvfrom (2 samples, 0.48%)</title><rect x="770.0" y="787.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="773.0" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.48%)</title><rect x="770.0" y="771.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.0" y="782.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.48%)</title><rect x="770.0" y="755.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="773.0" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.48%)</title><rect x="770.0" y="739.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.0" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.48%)</title><rect x="770.0" y="723.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="773.0" y="734.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.24%)</title><rect x="772.9" y="707.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="775.9" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.24%)</title><rect x="772.9" y="691.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="775.9" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2643] (89 samples, 21.55%)</title><rect x="775.7" y="947.0" width="254.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="778.7" y="958.0">[NIO Selector #3 tid=2643]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (89 samples, 21.55%)</title><rect x="775.7" y="931.0" width="254.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.7" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.24%)</title><rect x="787.1" y="915.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 4.12%)</title><rect x="790.0" y="915.0" width="48.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.0" y="926.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (17 samples, 4.12%)</title><rect x="790.0" y="899.0" width="48.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.0" y="910.0">one/..</text>
</g>
<g>
<title>[unknown] (17 samples, 4.12%)</title><rect x="790.0" y="883.0" width="48.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="793.0" y="894.0">[unk..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="790.0" y="867.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="793.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.24%)</title><rect x="790.0" y="851.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="793.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="790.0" y="835.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="793.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="790.0" y="819.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.0" y="830.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.24%)</title><rect x="790.0" y="803.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.0" y="814.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.24%)</title><rect x="790.0" y="787.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.24%)</title><rect x="790.0" y="771.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.0" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.24%)</title><rect x="790.0" y="755.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.0" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="790.0" y="739.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.0" y="750.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="790.0" y="723.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.0" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="790.0" y="707.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.0" y="718.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 3.87%)</title><rect x="792.9" y="867.0" width="45.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="795.9" y="878.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 3.87%)</title><rect x="792.9" y="851.0" width="45.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="795.9" y="862.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 3.87%)</title><rect x="792.9" y="835.0" width="45.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="795.9" y="846.0">do_s..</text>
</g>
<g>
<title>sys_epoll_wait (16 samples, 3.87%)</title><rect x="792.9" y="819.0" width="45.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="795.9" y="830.0">sys_..</text>
</g>
<g>
<title>ep_poll (16 samples, 3.87%)</title><rect x="792.9" y="803.0" width="45.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="795.9" y="814.0">ep_p..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="795.7" y="787.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.7" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (1 samples, 0.24%)</title><rect x="798.6" y="787.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="801.6" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="798.6" y="771.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="801.6" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.10 (1 samples, 0.24%)</title><rect x="798.6" y="755.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="801.6" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (13 samples, 3.15%)</title><rect x="801.4" y="787.0" width="37.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="804.4" y="798.0">sch..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 3.15%)</title><rect x="801.4" y="771.0" width="37.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.4" y="782.0">sch..</text>
</g>
<g>
<title>schedule (13 samples, 3.15%)</title><rect x="801.4" y="755.0" width="37.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="804.4" y="766.0">sch..</text>
</g>
<g>
<title>__schedule (13 samples, 3.15%)</title><rect x="801.4" y="739.0" width="37.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="804.4" y="750.0">__s..</text>
</g>
<g>
<title>finish_task_switch (13 samples, 3.15%)</title><rect x="801.4" y="723.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="804.4" y="734.0">fin..</text>
</g>
<g>
<title>one/nio/net/Session.process (66 samples, 15.98%)</title><rect x="838.6" y="915.0" width="188.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.6" y="926.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (66 samples, 15.98%)</title><rect x="838.6" y="899.0" width="188.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.6" y="910.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60 samples, 14.53%)</title><rect x="838.6" y="883.0" width="171.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.6" y="894.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (58 samples, 14.04%)</title><rect x="838.6" y="867.0" width="165.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.6" y="878.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (58 samples, 14.04%)</title><rect x="838.6" y="851.0" width="165.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.6" y="862.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (56 samples, 13.56%)</title><rect x="838.6" y="835.0" width="160.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.6" y="846.0">RequestHandler1_enti..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.24%)</title><rect x="838.6" y="819.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="838.6" y="803.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.24%)</title><rect x="838.6" y="787.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (55 samples, 13.32%)</title><rect x="841.4" y="819.0" width="157.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.4" y="830.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.24%)</title><rect x="841.4" y="803.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.24%)</title><rect x="841.4" y="787.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.get (31 samples, 7.51%)</title><rect x="844.3" y="803.0" width="88.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.3" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.24%)</title><rect x="844.3" y="787.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.24%)</title><rect x="844.3" y="771.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.3" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.24%)</title><rect x="844.3" y="755.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (30 samples, 7.26%)</title><rect x="847.1" y="787.0" width="85.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.1" y="798.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (20 samples, 4.84%)</title><rect x="847.1" y="771.0" width="57.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.1" y="782.0">java/u..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (20 samples, 4.84%)</title><rect x="847.1" y="755.0" width="57.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.1" y="766.0">java/l..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (20 samples, 4.84%)</title><rect x="847.1" y="739.0" width="57.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.1" y="750.0">java/l..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (20 samples, 4.84%)</title><rect x="847.1" y="723.0" width="57.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.1" y="734.0">java/l..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (19 samples, 4.60%)</title><rect x="850.0" y="707.0" width="54.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.0" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (19 samples, 4.60%)</title><rect x="850.0" y="691.0" width="54.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.0" y="702.0">java/..</text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (19 samples, 4.60%)</title><rect x="850.0" y="675.0" width="54.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="853.0" y="686.0">Java_..</text>
</g>
<g>
<title>JVM_FillInStackTrace (19 samples, 4.60%)</title><rect x="850.0" y="659.0" width="54.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="853.0" y="670.0">JVM_F..</text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (19 samples, 4.60%)</title><rect x="850.0" y="643.0" width="54.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="853.0" y="654.0">java_..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="850.0" y="627.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="853.0" y="638.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.24%)</title><rect x="852.9" y="627.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="855.9" y="638.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.24%)</title><rect x="855.7" y="627.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="858.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="855.7" y="611.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="858.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="855.7" y="595.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="858.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="855.7" y="579.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="858.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="858.6" y="627.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="861.6" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (15 samples, 3.63%)</title><rect x="861.4" y="627.0" width="42.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="864.4" y="638.0">java..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="867.1" y="611.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="870.1" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="870.0" y="611.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="873.0" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.24%)</title><rect x="872.9" y="611.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="875.9" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (3 samples, 0.73%)</title><rect x="875.7" y="611.0" width="8.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="878.7" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (3 samples, 0.73%)</title><rect x="875.7" y="595.0" width="8.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="878.7" y="606.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (3 samples, 0.73%)</title><rect x="875.7" y="579.0" width="8.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="878.7" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.73%)</title><rect x="875.7" y="563.0" width="8.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="878.7" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.73%)</title><rect x="875.7" y="547.0" width="8.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="878.7" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.48%)</title><rect x="875.7" y="531.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="878.7" y="542.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.24%)</title><rect x="881.4" y="531.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="884.4" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.48%)</title><rect x="884.3" y="611.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="887.3" y="622.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.48%)</title><rect x="890.0" y="611.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="893.0" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.24%)</title><rect x="890.0" y="595.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="893.0" y="606.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.24%)</title><rect x="890.0" y="579.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="893.0" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="890.0" y="563.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="893.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="890.0" y="547.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="890.0" y="531.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.0" y="542.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.24%)</title><rect x="892.9" y="595.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="895.9" y="606.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.73%)</title><rect x="895.7" y="611.0" width="8.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="898.7" y="622.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.73%)</title><rect x="895.7" y="595.0" width="8.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="898.7" y="606.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.73%)</title><rect x="895.7" y="579.0" width="8.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="898.7" y="590.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.48%)</title><rect x="898.6" y="563.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="901.6" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (8 samples, 1.94%)</title><rect x="904.3" y="771.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.3" y="782.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (8 samples, 1.94%)</title><rect x="904.3" y="755.0" width="22.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.3" y="766.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (8 samples, 1.94%)</title><rect x="904.3" y="739.0" width="22.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="907.3" y="750.0">J..</text>
</g>
<g>
<title>__malloc (1 samples, 0.24%)</title><rect x="907.1" y="723.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="910.1" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (6 samples, 1.45%)</title><rect x="910.0" y="723.0" width="17.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="913.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="910.0" y="707.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="913.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.24%)</title><rect x="910.0" y="691.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="913.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (5 samples, 1.21%)</title><rect x="912.9" y="707.0" width="14.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="915.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (5 samples, 1.21%)</title><rect x="912.9" y="691.0" width="14.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="915.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (4 samples, 0.97%)</title><rect x="912.9" y="675.0" width="11.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="915.9" y="686.0"></text>
</g>
<g>
<title>_init (1 samples, 0.24%)</title><rect x="912.9" y="659.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="915.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (3 samples, 0.73%)</title><rect x="915.7" y="659.0" width="8.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="918.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="915.7" y="643.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="918.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (2 samples, 0.48%)</title><rect x="918.6" y="643.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="921.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.24%)</title><rect x="924.3" y="675.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="927.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (2 samples, 0.48%)</title><rect x="927.1" y="771.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="930.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (2 samples, 0.48%)</title><rect x="927.1" y="755.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.24%)</title><rect x="927.1" y="739.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="930.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.24%)</title><rect x="927.1" y="723.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.24%)</title><rect x="927.1" y="707.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.24%)</title><rect x="927.1" y="691.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="927.1" y="675.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="930.1" y="686.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.24%)</title><rect x="927.1" y="659.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="930.1" y="670.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.24%)</title><rect x="927.1" y="643.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="930.1" y="654.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="927.1" y="627.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="930.1" y="638.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.24%)</title><rect x="927.1" y="611.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="930.1" y="622.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.24%)</title><rect x="927.1" y="595.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.1" y="606.0"></text>
</g>
<g>
<title>native_set_pte_at (1 samples, 0.24%)</title><rect x="927.1" y="579.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="930.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.24%)</title><rect x="930.0" y="739.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.24%)</title><rect x="930.0" y="723.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.24%)</title><rect x="930.0" y="707.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.24%)</title><rect x="930.0" y="691.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="933.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.responseSend (23 samples, 5.57%)</title><rect x="932.9" y="803.0" width="65.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.9" y="814.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (23 samples, 5.57%)</title><rect x="932.9" y="787.0" width="65.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.9" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (23 samples, 5.57%)</title><rect x="932.9" y="771.0" width="65.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.9" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="932.9" y="755.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 5.33%)</title><rect x="935.7" y="755.0" width="62.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.7" y="766.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 5.33%)</title><rect x="935.7" y="739.0" width="62.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.7" y="750.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.24%)</title><rect x="935.7" y="723.0" width="2.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="938.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (21 samples, 5.08%)</title><rect x="938.6" y="723.0" width="60.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.6" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (21 samples, 5.08%)</title><rect x="938.6" y="707.0" width="60.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.6" y="718.0">one/ni..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="938.6" y="691.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="941.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="938.6" y="675.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="941.6" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.24%)</title><rect x="938.6" y="659.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="941.6" y="670.0"></text>
</g>
<g>
<title>__send (20 samples, 4.84%)</title><rect x="941.4" y="691.0" width="57.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="944.4" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 4.84%)</title><rect x="941.4" y="675.0" width="57.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="944.4" y="686.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 4.84%)</title><rect x="941.4" y="659.0" width="57.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="944.4" y="670.0">do_sys..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="944.3" y="643.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="947.3" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="944.3" y="627.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="947.3" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="944.3" y="611.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.3" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="944.3" y="595.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.3" y="606.0"></text>
</g>
<g>
<title>sys_sendto (18 samples, 4.36%)</title><rect x="947.1" y="643.0" width="51.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="950.1" y="654.0">sys_s..</text>
</g>
<g>
<title>SYSC_sendto (18 samples, 4.36%)</title><rect x="947.1" y="627.0" width="51.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="950.1" y="638.0">SYSC_..</text>
</g>
<g>
<title>sock_sendmsg (17 samples, 4.12%)</title><rect x="947.1" y="611.0" width="48.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="950.1" y="622.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (16 samples, 3.87%)</title><rect x="947.1" y="595.0" width="45.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.1" y="606.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (16 samples, 3.87%)</title><rect x="947.1" y="579.0" width="45.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="950.1" y="590.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.48%)</title><rect x="947.1" y="563.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.24%)</title><rect x="947.1" y="547.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="950.1" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.24%)</title><rect x="950.0" y="547.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="953.0" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="952.9" y="563.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="955.9" y="574.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.24%)</title><rect x="952.9" y="547.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="955.9" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.24%)</title><rect x="952.9" y="531.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="955.9" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="952.9" y="515.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="955.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="952.9" y="499.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="955.9" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (13 samples, 3.15%)</title><rect x="955.7" y="563.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="958.7" y="574.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.24%)</title><rect x="961.4" y="547.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (9 samples, 2.18%)</title><rect x="964.3" y="547.0" width="25.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="967.3" y="558.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (9 samples, 2.18%)</title><rect x="964.3" y="531.0" width="25.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="967.3" y="542.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (9 samples, 2.18%)</title><rect x="964.3" y="515.0" width="25.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.3" y="526.0">t..</text>
</g>
<g>
<title>tcp_transmit_skb (9 samples, 2.18%)</title><rect x="964.3" y="499.0" width="25.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.3" y="510.0">t..</text>
</g>
<g>
<title>ip_queue_xmit (8 samples, 1.94%)</title><rect x="967.1" y="483.0" width="22.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.1" y="494.0">i..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="967.1" y="467.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.1" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="967.1" y="451.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="970.1" y="462.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 1.69%)</title><rect x="970.0" y="467.0" width="20.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.0" y="478.0"></text>
</g>
<g>
<title>ip_output (7 samples, 1.69%)</title><rect x="970.0" y="451.0" width="20.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="973.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (7 samples, 1.69%)</title><rect x="970.0" y="435.0" width="20.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="973.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 1.69%)</title><rect x="970.0" y="419.0" width="20.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="973.0" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 1.69%)</title><rect x="970.0" y="403.0" width="20.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="973.0" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.17 (7 samples, 1.69%)</title><rect x="970.0" y="387.0" width="20.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.0" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 1.69%)</title><rect x="970.0" y="371.0" width="20.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.0" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 1.69%)</title><rect x="970.0" y="355.0" width="20.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 1.45%)</title><rect x="970.0" y="339.0" width="17.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="973.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 1.45%)</title><rect x="970.0" y="323.0" width="17.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="973.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.97%)</title><rect x="975.7" y="307.0" width="11.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="978.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.97%)</title><rect x="975.7" y="291.0" width="11.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.97%)</title><rect x="975.7" y="275.0" width="11.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="978.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.97%)</title><rect x="975.7" y="259.0" width="11.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="978.7" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.97%)</title><rect x="975.7" y="243.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="978.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.97%)</title><rect x="975.7" y="227.0" width="11.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="978.7" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.24%)</title><rect x="975.7" y="211.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="978.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.73%)</title><rect x="978.6" y="211.0" width="8.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.73%)</title><rect x="978.6" y="195.0" width="8.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="981.6" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.73%)</title><rect x="978.6" y="179.0" width="8.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.6" y="190.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="981.4" y="163.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="984.4" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.24%)</title><rect x="981.4" y="147.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="984.4" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="981.4" y="131.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="984.4" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="981.4" y="115.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="984.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.24%)</title><rect x="981.4" y="99.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="984.4" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.24%)</title><rect x="981.4" y="83.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="984.4" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.24%)</title><rect x="981.4" y="67.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="984.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.24%)</title><rect x="981.4" y="51.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="984.4" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.61 (1 samples, 0.24%)</title><rect x="981.4" y="35.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.4" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="984.3" y="163.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.24%)</title><rect x="984.3" y="147.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="987.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.24%)</title><rect x="984.3" y="131.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.24%)</title><rect x="984.3" y="115.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="987.3" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="984.3" y="99.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.3" y="110.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.24%)</title><rect x="987.1" y="339.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="990.1" y="350.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="990.0" y="547.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="993.0" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.24%)</title><rect x="990.0" y="531.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="993.0" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.24%)</title><rect x="992.9" y="595.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="995.9" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.24%)</title><rect x="992.9" y="579.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="995.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.24%)</title><rect x="992.9" y="563.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="995.9" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.24%)</title><rect x="992.9" y="547.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="995.9" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.24%)</title><rect x="992.9" y="531.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="995.9" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="995.7" y="611.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.7" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="995.7" y="595.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="995.7" y="579.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="998.7" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="995.7" y="563.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="998.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.48%)</title><rect x="998.6" y="835.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1001.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.48%)</title><rect x="998.6" y="819.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.48%)</title><rect x="998.6" y="803.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.48%)</title><rect x="998.6" y="787.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="1004.3" y="867.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1004.3" y="851.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1004.3" y="835.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="1007.1" y="867.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="1007.1" y="851.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="1007.1" y="835.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.24%)</title><rect x="1007.1" y="819.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.24%)</title><rect x="1007.1" y="803.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.1" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.24%)</title><rect x="1007.1" y="787.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.45%)</title><rect x="1010.0" y="883.0" width="17.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.45%)</title><rect x="1010.0" y="867.0" width="17.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.0" y="878.0"></text>
</g>
<g>
<title>__GI___recv (6 samples, 1.45%)</title><rect x="1010.0" y="851.0" width="17.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1013.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.45%)</title><rect x="1010.0" y="835.0" width="17.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1013.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.45%)</title><rect x="1010.0" y="819.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1013.0" y="830.0"></text>
</g>
<g>
<title>sys_recvfrom (5 samples, 1.21%)</title><rect x="1012.9" y="803.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1015.9" y="814.0"></text>
</g>
<g>
<title>SYSC_recvfrom (5 samples, 1.21%)</title><rect x="1012.9" y="787.0" width="14.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1015.9" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.97%)</title><rect x="1015.7" y="771.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.7" y="782.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.73%)</title><rect x="1015.7" y="755.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.73%)</title><rect x="1015.7" y="739.0" width="8.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1018.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.24%)</title><rect x="1015.7" y="723.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1018.7" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="1018.6" y="723.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1021.6" y="734.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.24%)</title><rect x="1018.6" y="707.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.6" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="1021.4" y="723.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1024.4" y="734.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.24%)</title><rect x="1021.4" y="707.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1024.4" y="718.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.24%)</title><rect x="1021.4" y="691.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1024.4" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.24%)</title><rect x="1024.3" y="755.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.24%)</title><rect x="1027.1" y="915.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1030.1" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.24%)</title><rect x="1027.1" y="899.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.1" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="1027.1" y="883.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.1" y="894.0"></text>
</g>
<g>
<title>[tid=2602] (1 samples, 0.24%)</title><rect x="1030.0" y="947.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1033.0" y="958.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.24%)</title><rect x="1030.0" y="931.0" width="2.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1033.0" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.24%)</title><rect x="1030.0" y="915.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1033.0" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.24%)</title><rect x="1030.0" y="899.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1033.0" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.24%)</title><rect x="1030.0" y="883.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1033.0" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.24%)</title><rect x="1030.0" y="867.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1033.0" y="878.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.24%)</title><rect x="1030.0" y="851.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1033.0" y="862.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.24%)</title><rect x="1030.0" y="835.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1033.0" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.24%)</title><rect x="1030.0" y="819.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1033.0" y="830.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.24%)</title><rect x="1030.0" y="803.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1033.0" y="814.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.24%)</title><rect x="1030.0" y="787.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1033.0" y="798.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.24%)</title><rect x="1030.0" y="771.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1033.0" y="782.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.24%)</title><rect x="1030.0" y="755.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1033.0" y="766.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.24%)</title><rect x="1030.0" y="739.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.0" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (1 samples, 0.24%)</title><rect x="1030.0" y="723.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1033.0" y="734.0"></text>
</g>
<g>
<title>[tid=2606] (1 samples, 0.24%)</title><rect x="1032.9" y="947.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1035.9" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.24%)</title><rect x="1032.9" y="931.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1035.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="1032.9" y="915.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1032.9" y="899.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.9" y="910.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="1032.9" y="883.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1035.9" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="1032.9" y="867.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1035.9" y="878.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.24%)</title><rect x="1032.9" y="851.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1035.9" y="862.0"></text>
</g>
<g>
<title>[tid=2607] (1 samples, 0.24%)</title><rect x="1035.7" y="947.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1038.7" y="958.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.24%)</title><rect x="1035.7" y="931.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1038.7" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.24%)</title><rect x="1035.7" y="915.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1038.7" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.24%)</title><rect x="1035.7" y="899.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1038.7" y="910.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.24%)</title><rect x="1035.7" y="883.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1038.7" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.24%)</title><rect x="1035.7" y="867.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1038.7" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.24%)</title><rect x="1035.7" y="851.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1038.7" y="862.0"></text>
</g>
<g>
<title>RuntimeService::record_safepoint_begin() (1 samples, 0.24%)</title><rect x="1035.7" y="835.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.7" y="846.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.24%)</title><rect x="1035.7" y="819.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1038.7" y="830.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.24%)</title><rect x="1035.7" y="803.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1038.7" y="814.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="1035.7" y="787.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1038.7" y="798.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.24%)</title><rect x="1035.7" y="771.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1038.7" y="782.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.24%)</title><rect x="1035.7" y="755.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1038.7" y="766.0"></text>
</g>
<g>
<title>handle_pte_fault (1 samples, 0.24%)</title><rect x="1035.7" y="739.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1038.7" y="750.0"></text>
</g>
<g>
<title>do_wp_page (1 samples, 0.24%)</title><rect x="1035.7" y="723.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1038.7" y="734.0"></text>
</g>
<g>
<title>do_page_mkwrite (1 samples, 0.24%)</title><rect x="1035.7" y="707.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.7" y="718.0"></text>
</g>
<g>
<title>ext4_page_mkwrite (1 samples, 0.24%)</title><rect x="1035.7" y="691.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1038.7" y="702.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.24%)</title><rect x="1035.7" y="675.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.7" y="686.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.24%)</title><rect x="1035.7" y="659.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1038.7" y="670.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="1035.7" y="643.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1038.7" y="654.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.24%)</title><rect x="1035.7" y="627.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1038.7" y="638.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.24%)</title><rect x="1035.7" y="611.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1038.7" y="622.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.24%)</title><rect x="1035.7" y="595.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1038.7" y="606.0"></text>
</g>
<g>
<title>[tid=2611] (40 samples, 9.69%)</title><rect x="1038.6" y="947.0" width="114.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1041.6" y="958.0">[tid=2611]</text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="1038.6" y="931.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1041.6" y="942.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.24%)</title><rect x="1038.6" y="915.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1041.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="1038.6" y="899.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1041.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1038.6" y="883.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.6" y="894.0"></text>
</g>
<g>
<title>sys_openat (1 samples, 0.24%)</title><rect x="1038.6" y="867.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1041.6" y="878.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.24%)</title><rect x="1038.6" y="851.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.6" y="862.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.24%)</title><rect x="1038.6" y="835.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.6" y="846.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.24%)</title><rect x="1038.6" y="819.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1041.6" y="830.0"></text>
</g>
<g>
<title>link_path_walk (1 samples, 0.24%)</title><rect x="1038.6" y="803.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1041.6" y="814.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.24%)</title><rect x="1038.6" y="787.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1041.6" y="798.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.24%)</title><rect x="1038.6" y="771.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1041.6" y="782.0"></text>
</g>
<g>
<title>__d_lookup_rcu (1 samples, 0.24%)</title><rect x="1038.6" y="755.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1041.6" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.24%)</title><rect x="1041.4" y="931.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1044.4" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="1041.4" y="915.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.4" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1041.4" y="899.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1044.4" y="910.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="1041.4" y="883.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1044.4" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="1041.4" y="867.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.4" y="878.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.24%)</title><rect x="1041.4" y="851.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1044.4" y="862.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.24%)</title><rect x="1041.4" y="835.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1044.4" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="1041.4" y="819.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1044.4" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="1041.4" y="803.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.4" y="814.0"></text>
</g>
<g>
<title>start_thread (38 samples, 9.20%)</title><rect x="1044.3" y="931.0" width="108.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1047.3" y="942.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (38 samples, 9.20%)</title><rect x="1044.3" y="915.0" width="108.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1047.3" y="926.0">thread_native..</text>
</g>
<g>
<title>Thread::call_run() (38 samples, 9.20%)</title><rect x="1044.3" y="899.0" width="108.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.3" y="910.0">Thread::call_..</text>
</g>
<g>
<title>JavaThread::run() (38 samples, 9.20%)</title><rect x="1044.3" y="883.0" width="108.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.3" y="894.0">JavaThread::r..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (38 samples, 9.20%)</title><rect x="1044.3" y="867.0" width="108.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1047.3" y="878.0">JavaThread::t..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (38 samples, 9.20%)</title><rect x="1044.3" y="851.0" width="108.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.3" y="862.0">CompileBroker..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (38 samples, 9.20%)</title><rect x="1044.3" y="835.0" width="108.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1047.3" y="846.0">CompileBroker..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (38 samples, 9.20%)</title><rect x="1044.3" y="819.0" width="108.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1047.3" y="830.0">C2Compiler::c..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (38 samples, 9.20%)</title><rect x="1044.3" y="803.0" width="108.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1047.3" y="814.0">Compile::Comp..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.24%)</title><rect x="1044.3" y="787.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1047.3" y="798.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.24%)</title><rect x="1044.3" y="771.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1047.3" y="782.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.24%)</title><rect x="1044.3" y="755.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1047.3" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.24%)</title><rect x="1044.3" y="739.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.3" y="750.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (25 samples, 6.05%)</title><rect x="1047.1" y="787.0" width="71.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.1" y="798.0">Compile:..</text>
</g>
<g>
<title>Compile::Output() (5 samples, 1.21%)</title><rect x="1047.1" y="771.0" width="14.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.1" y="782.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.48%)</title><rect x="1047.1" y="755.0" width="5.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.1" y="766.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.73%)</title><rect x="1052.9" y="755.0" width="8.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1055.9" y="766.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.73%)</title><rect x="1052.9" y="739.0" width="8.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1055.9" y="750.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (2 samples, 0.48%)</title><rect x="1052.9" y="723.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1055.9" y="734.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.24%)</title><rect x="1052.9" y="707.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1055.9" y="718.0"></text>
</g>
<g>
<title>indIndexOper::num_edges() const (1 samples, 0.24%)</title><rect x="1055.7" y="707.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.7" y="718.0"></text>
</g>
<g>
<title>compP_mem_rRegNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.24%)</title><rect x="1058.6" y="723.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.6" y="734.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.24%)</title><rect x="1061.4" y="771.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1064.4" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.24%)</title><rect x="1061.4" y="755.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1064.4" y="766.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.24%)</title><rect x="1061.4" y="739.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1064.4" y="750.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="1061.4" y="723.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1064.4" y="734.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.24%)</title><rect x="1061.4" y="707.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.4" y="718.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="1061.4" y="691.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1064.4" y="702.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.24%)</title><rect x="1061.4" y="675.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1064.4" y="686.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="1061.4" y="659.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1064.4" y="670.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.24%)</title><rect x="1061.4" y="643.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1064.4" y="654.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="1061.4" y="627.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.4" y="638.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.24%)</title><rect x="1061.4" y="611.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1064.4" y="622.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="1061.4" y="595.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1064.4" y="606.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.24%)</title><rect x="1061.4" y="579.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1064.4" y="590.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="1061.4" y="563.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1064.4" y="574.0"></text>
</g>
<g>
<title>incI_rRegNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 0.24%)</title><rect x="1061.4" y="547.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1064.4" y="558.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.97%)</title><rect x="1064.3" y="771.0" width="11.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1067.3" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (1 samples, 0.24%)</title><rect x="1064.3" y="755.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1067.3" y="766.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.24%)</title><rect x="1064.3" y="739.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.3" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.73%)</title><rect x="1067.1" y="755.0" width="8.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1070.1" y="766.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.24%)</title><rect x="1067.1" y="739.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1070.1" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.24%)</title><rect x="1070.0" y="739.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1073.0" y="750.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.24%)</title><rect x="1072.9" y="739.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1075.9" y="750.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.24%)</title><rect x="1072.9" y="723.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1075.9" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (15 samples, 3.63%)</title><rect x="1075.7" y="771.0" width="42.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1078.7" y="782.0">Phas..</text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.24%)</title><rect x="1075.7" y="755.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1078.7" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.48%)</title><rect x="1078.6" y="755.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1081.6" y="766.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.24%)</title><rect x="1081.4" y="739.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.4" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.24%)</title><rect x="1084.3" y="755.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.3" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.24%)</title><rect x="1087.1" y="755.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1090.1" y="766.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.24%)</title><rect x="1087.1" y="739.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1090.1" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.24%)</title><rect x="1090.0" y="755.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1093.0" y="766.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.24%)</title><rect x="1090.0" y="739.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.0" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.48%)</title><rect x="1092.9" y="755.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1095.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.48%)</title><rect x="1092.9" y="739.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1095.9" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.24%)</title><rect x="1098.6" y="755.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1101.6" y="766.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.24%)</title><rect x="1101.4" y="755.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1104.4" y="766.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.24%)</title><rect x="1104.3" y="755.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.3" y="766.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.97%)</title><rect x="1107.1" y="755.0" width="11.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1110.1" y="766.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.48%)</title><rect x="1112.9" y="739.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1115.9" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (10 samples, 2.42%)</title><rect x="1118.6" y="787.0" width="28.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.6" y="798.0">Co..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (9 samples, 2.18%)</title><rect x="1118.6" y="771.0" width="25.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.6" y="782.0">P..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.73%)</title><rect x="1118.6" y="755.0" width="8.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.6" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.24%)</title><rect x="1124.3" y="739.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.3" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.24%)</title><rect x="1124.3" y="723.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.3" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.73%)</title><rect x="1127.1" y="755.0" width="8.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.1" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.73%)</title><rect x="1127.1" y="739.0" width="8.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.1" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.48%)</title><rect x="1130.0" y="723.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.0" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.48%)</title><rect x="1130.0" y="707.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.0" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.24%)</title><rect x="1132.9" y="691.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.9" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.24%)</title><rect x="1135.7" y="755.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.24%)</title><rect x="1135.7" y="739.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.7" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.24%)</title><rect x="1135.7" y="723.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.7" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.24%)</title><rect x="1138.6" y="755.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.6" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.24%)</title><rect x="1141.4" y="755.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.4" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.24%)</title><rect x="1141.4" y="739.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.4" y="750.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.24%)</title><rect x="1141.4" y="723.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.4" y="734.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.24%)</title><rect x="1141.4" y="707.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.4" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.24%)</title><rect x="1144.3" y="771.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.3" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.24%)</title><rect x="1144.3" y="755.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.3" y="766.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.24%)</title><rect x="1144.3" y="739.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.3" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.24%)</title><rect x="1144.3" y="723.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.3" y="734.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.24%)</title><rect x="1144.3" y="707.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.3" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.48%)</title><rect x="1147.1" y="787.0" width="5.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.1" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.48%)</title><rect x="1147.1" y="771.0" width="5.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.48%)</title><rect x="1147.1" y="755.0" width="5.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1150.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.48%)</title><rect x="1147.1" y="739.0" width="5.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.48%)</title><rect x="1147.1" y="723.0" width="5.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.48%)</title><rect x="1147.1" y="707.0" width="5.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.1" y="718.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.24%)</title><rect x="1147.1" y="691.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.1" y="702.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.24%)</title><rect x="1147.1" y="675.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.1" y="686.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.24%)</title><rect x="1147.1" y="659.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.1" y="670.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.24%)</title><rect x="1147.1" y="643.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.1" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.24%)</title><rect x="1147.1" y="627.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.1" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.24%)</title><rect x="1147.1" y="611.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.1" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.24%)</title><rect x="1147.1" y="595.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.1" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.24%)</title><rect x="1147.1" y="579.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.1" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.24%)</title><rect x="1147.1" y="563.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.1" y="574.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.24%)</title><rect x="1147.1" y="547.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.1" y="558.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1147.1" y="531.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.1" y="542.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1147.1" y="515.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.1" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.24%)</title><rect x="1147.1" y="499.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.1" y="510.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.24%)</title><rect x="1147.1" y="483.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.1" y="494.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.24%)</title><rect x="1147.1" y="467.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1150.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="1147.1" y="451.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1150.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1147.1" y="435.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1150.1" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.24%)</title><rect x="1150.0" y="691.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.24%)</title><rect x="1150.0" y="675.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.24%)</title><rect x="1150.0" y="659.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.24%)</title><rect x="1150.0" y="643.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.24%)</title><rect x="1150.0" y="627.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.24%)</title><rect x="1150.0" y="611.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.0" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.24%)</title><rect x="1150.0" y="595.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.0" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.24%)</title><rect x="1150.0" y="579.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.24%)</title><rect x="1150.0" y="563.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.24%)</title><rect x="1150.0" y="547.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.24%)</title><rect x="1150.0" y="531.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.24%)</title><rect x="1150.0" y="515.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.0" y="526.0"></text>
</g>
<g>
<title>Compile::find_intrinsic(ciMethod*, bool) (1 samples, 0.24%)</title><rect x="1150.0" y="499.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.0" y="510.0"></text>
</g>
<g>
<title>[tid=2612] (8 samples, 1.94%)</title><rect x="1152.9" y="947.0" width="22.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1155.9" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.48%)</title><rect x="1152.9" y="931.0" width="5.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1155.9" y="942.0"></text>
</g>
<g>
<title>__close_nocancel (2 samples, 0.48%)</title><rect x="1152.9" y="915.0" width="5.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1155.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.48%)</title><rect x="1152.9" y="899.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1155.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.48%)</title><rect x="1152.9" y="883.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.9" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.24%)</title><rect x="1155.7" y="867.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.7" y="878.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.24%)</title><rect x="1155.7" y="851.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.7" y="862.0"></text>
</g>
<g>
<title>____fput (1 samples, 0.24%)</title><rect x="1155.7" y="835.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1158.7" y="846.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.24%)</title><rect x="1155.7" y="819.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.7" y="830.0"></text>
</g>
<g>
<title>locks_remove_file (1 samples, 0.24%)</title><rect x="1155.7" y="803.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.7" y="814.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.24%)</title><rect x="1158.6" y="931.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1161.6" y="942.0"></text>
</g>
<g>
<title>start_thread (5 samples, 1.21%)</title><rect x="1161.4" y="931.0" width="14.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1164.4" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 1.21%)</title><rect x="1161.4" y="915.0" width="14.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1164.4" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 1.21%)</title><rect x="1161.4" y="899.0" width="14.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.4" y="910.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 1.21%)</title><rect x="1161.4" y="883.0" width="14.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.4" y="894.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 1.21%)</title><rect x="1161.4" y="867.0" width="14.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.4" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 1.21%)</title><rect x="1161.4" y="851.0" width="14.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.4" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 1.21%)</title><rect x="1161.4" y="835.0" width="14.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.4" y="846.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 1.21%)</title><rect x="1161.4" y="819.0" width="14.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.4" y="830.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (5 samples, 1.21%)</title><rect x="1161.4" y="803.0" width="14.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.4" y="814.0"></text>
</g>
<g>
<title>Compilation::compile_method() (5 samples, 1.21%)</title><rect x="1161.4" y="787.0" width="14.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.4" y="798.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (5 samples, 1.21%)</title><rect x="1161.4" y="771.0" width="14.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.4" y="782.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.48%)</title><rect x="1161.4" y="755.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.4" y="766.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 0.24%)</title><rect x="1161.4" y="739.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.4" y="750.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 0.24%)</title><rect x="1161.4" y="723.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.4" y="734.0"></text>
</g>
<g>
<title>ArithmeticOp::can_trap() const (1 samples, 0.24%)</title><rect x="1161.4" y="707.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.4" y="718.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.24%)</title><rect x="1164.3" y="739.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.3" y="750.0"></text>
</g>
<g>
<title>BlockBegin::insert_block_between(BlockBegin*) (1 samples, 0.24%)</title><rect x="1164.3" y="723.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.3" y="734.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.24%)</title><rect x="1164.3" y="707.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.3" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="1164.3" y="691.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1167.3" y="702.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.73%)</title><rect x="1167.1" y="755.0" width="8.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.1" y="766.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.73%)</title><rect x="1167.1" y="739.0" width="8.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.1" y="750.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.24%)</title><rect x="1167.1" y="723.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.1" y="734.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.24%)</title><rect x="1167.1" y="707.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.1" y="718.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (1 samples, 0.24%)</title><rect x="1167.1" y="691.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.1" y="702.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.24%)</title><rect x="1170.0" y="723.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.0" y="734.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.24%)</title><rect x="1170.0" y="707.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.0" y="718.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.24%)</title><rect x="1170.0" y="691.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.0" y="702.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.24%)</title><rect x="1170.0" y="675.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.0" y="686.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.24%)</title><rect x="1170.0" y="659.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.0" y="670.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.24%)</title><rect x="1170.0" y="643.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.0" y="654.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.24%)</title><rect x="1172.9" y="723.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.9" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="1172.9" y="707.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1175.9" y="718.0"></text>
</g>
<g>
<title>[tid=2615] (5 samples, 1.21%)</title><rect x="1175.7" y="947.0" width="14.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1178.7" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.73%)</title><rect x="1175.7" y="931.0" width="8.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1178.7" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.73%)</title><rect x="1175.7" y="915.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.73%)</title><rect x="1175.7" y="899.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1178.7" y="910.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.73%)</title><rect x="1175.7" y="883.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1178.7" y="894.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.73%)</title><rect x="1175.7" y="867.0" width="8.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.7" y="878.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.73%)</title><rect x="1175.7" y="851.0" width="8.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1178.7" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.73%)</title><rect x="1175.7" y="835.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1178.7" y="846.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.73%)</title><rect x="1175.7" y="819.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1178.7" y="830.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.73%)</title><rect x="1175.7" y="803.0" width="8.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1178.7" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.73%)</title><rect x="1175.7" y="787.0" width="8.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1178.7" y="798.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.48%)</title><rect x="1184.3" y="931.0" width="5.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1187.3" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.48%)</title><rect x="1184.3" y="915.0" width="5.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1187.3" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.48%)</title><rect x="1184.3" y="899.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.3" y="910.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.48%)</title><rect x="1184.3" y="883.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.3" y="894.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.48%)</title><rect x="1184.3" y="867.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.48%)</title><rect x="1184.3" y="851.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.48%)</title><rect x="1184.3" y="835.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.3" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.48%)</title><rect x="1184.3" y="819.0" width="5.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
</g>
</svg>

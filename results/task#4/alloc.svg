<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="357"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="357"> </text>
<g id="frames">
<g>
<title>all (7,482 samples, 100.00%)</title><rect x="10.0" y="323.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="334.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (4,434 samples, 59.26%)</title><rect x="10.2" y="307.0" width="699.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.2" y="318.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,434 samples, 59.26%)</title><rect x="10.2" y="291.0" width="699.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.2" y="302.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,434 samples, 59.26%)</title><rect x="10.2" y="275.0" width="699.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="286.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (172 samples, 2.30%)</title><rect x="10.2" y="259.0" width="27.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.2" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (172 samples, 2.30%)</title><rect x="10.2" y="243.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.2" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (172 samples, 2.30%)</title><rect x="10.2" y="227.0" width="27.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.2" y="238.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (172 samples, 2.30%)</title><rect x="10.2" y="211.0" width="27.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.2" y="222.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (172 samples, 2.30%)</title><rect x="10.2" y="195.0" width="27.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.2" y="206.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$63/1545301835.run (4,262 samples, 56.96%)</title><rect x="37.3" y="259.0" width="672.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.3" y="270.0">ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$63/1545301835.run</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$responseSend$4 (4,262 samples, 56.96%)</title><rect x="37.3" y="243.0" width="672.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.3" y="254.0">ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$responseSend$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (757 samples, 10.12%)</title><rect x="37.3" y="227.0" width="119.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.3" y="238.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (757 samples, 10.12%)</title><rect x="37.3" y="211.0" width="119.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.3" y="222.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (536 samples, 7.16%)</title><rect x="37.3" y="195.0" width="84.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.3" y="206.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (536 samples, 7.16%)</title><rect x="37.3" y="179.0" width="84.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.3" y="190.0">one/nio/ut..</text>
</g>
<g>
<title>byte[] (536 samples, 7.16%)</title><rect x="37.3" y="163.0" width="84.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="40.3" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (221 samples, 2.95%)</title><rect x="121.8" y="195.0" width="34.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.8" y="206.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (221 samples, 2.95%)</title><rect x="121.8" y="179.0" width="34.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="124.8" y="190.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$61/2130608126.response (1,849 samples, 24.71%)</title><rect x="156.7" y="227.0" width="291.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.7" y="238.0">ru/mail/polis/service/luckydaemon/Servi..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$entity$3 (1,849 samples, 24.71%)</title><rect x="156.7" y="211.0" width="291.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.7" y="222.0">ru/mail/polis/service/luckydaemon/Servi..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.sendForward (1,849 samples, 24.71%)</title><rect x="156.7" y="195.0" width="291.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.7" y="206.0">ru/mail/polis/service/luckydaemon/Servi..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,849 samples, 24.71%)</title><rect x="156.7" y="179.0" width="291.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.7" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,849 samples, 24.71%)</title><rect x="156.7" y="163.0" width="291.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.7" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (7 samples, 0.09%)</title><rect x="156.7" y="147.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="159.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1,680 samples, 22.45%)</title><rect x="157.8" y="147.0" width="264.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.8" y="158.0">one/nio/http/HttpClient$ResponseRea..</text>
</g>
<g>
<title>byte[] (998 samples, 13.34%)</title><rect x="157.8" y="131.0" width="157.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="160.8" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (682 samples, 9.12%)</title><rect x="315.2" y="131.0" width="107.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="318.2" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (136 samples, 1.82%)</title><rect x="422.7" y="147.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.7" y="158.0">o..</text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="422.7" y="131.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="425.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="423.0" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="423.0" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="423.0" y="99.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="426.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="423.4" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.4" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="423.4" y="83.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="426.4" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.07%)</title><rect x="423.7" y="131.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="426.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (112 samples, 1.50%)</title><rect x="424.5" y="131.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 1.50%)</title><rect x="424.5" y="115.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (112 samples, 1.50%)</title><rect x="424.5" y="99.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.5" y="110.0"></text>
</g>
<g>
<title>char[] (93 samples, 1.24%)</title><rect x="424.5" y="83.0" width="14.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="427.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.09%)</title><rect x="439.1" y="83.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="442.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.16%)</title><rect x="440.2" y="83.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.16%)</title><rect x="440.2" y="67.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.2" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.16%)</title><rect x="440.2" y="51.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.2" y="62.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.16%)</title><rect x="440.2" y="35.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="443.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.09%)</title><rect x="442.1" y="131.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.09%)</title><rect x="442.1" y="115.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="445.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.08%)</title><rect x="443.2" y="131.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="443.2" y="115.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="443.2" y="99.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="443.2" y="83.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="446.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="443.9" y="83.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.9" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="443.9" y="67.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="446.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (16 samples, 0.21%)</title><rect x="444.2" y="147.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.21%)</title><rect x="444.2" y="131.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.2" y="142.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.21%)</title><rect x="444.2" y="115.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="447.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.08%)</title><rect x="446.7" y="147.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.08%)</title><rect x="446.7" y="131.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="446.7" y="115.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="446.7" y="99.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="449.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="447.2" y="99.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.2" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="447.2" y="83.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="450.2" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.05%)</title><rect x="447.7" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.7" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (4 samples, 0.05%)</title><rect x="447.7" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.7" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (4 samples, 0.05%)</title><rect x="447.7" y="115.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.7" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.05%)</title><rect x="447.7" y="99.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="450.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$62/1850370333.response (1,656 samples, 22.13%)</title><rect x="448.3" y="227.0" width="261.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.3" y="238.0">ru/mail/polis/service/luckydaemon/S..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$entity$0 (1,656 samples, 22.13%)</title><rect x="448.3" y="211.0" width="261.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.3" y="222.0">ru/mail/polis/service/luckydaemon/S..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.get (1,656 samples, 22.13%)</title><rect x="448.3" y="195.0" width="261.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.3" y="206.0">ru/mail/polis/service/luckydaemon/S..</text>
</g>
<g>
<title>byte[] (143 samples, 1.91%)</title><rect x="448.3" y="179.0" width="22.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="451.3" y="190.0">b..</text>
</g>
<g>
<title>one.nio.http.Response (146 samples, 1.95%)</title><rect x="470.8" y="179.0" width="23.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="473.8" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (548 samples, 7.32%)</title><rect x="493.9" y="179.0" width="86.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.9" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>byte[] (232 samples, 3.10%)</title><rect x="493.9" y="163.0" width="36.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="496.9" y="174.0">byt..</text>
</g>
<g>
<title>java.lang.String[] (194 samples, 2.59%)</title><rect x="530.4" y="163.0" width="30.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="533.4" y="174.0">ja..</text>
</g>
<g>
<title>java.lang.String (122 samples, 1.63%)</title><rect x="561.0" y="163.0" width="19.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="564.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (819 samples, 10.95%)</title><rect x="580.3" y="179.0" width="129.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.3" y="190.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (300 samples, 4.01%)</title><rect x="580.3" y="163.0" width="47.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.3" y="174.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (300 samples, 4.01%)</title><rect x="580.3" y="147.0" width="47.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.3" y="158.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (300 samples, 4.01%)</title><rect x="580.3" y="131.0" width="47.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="583.3" y="142.0">java..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (118 samples, 1.58%)</title><rect x="627.6" y="163.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.6" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (118 samples, 1.58%)</title><rect x="627.6" y="147.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.6" y="158.0"></text>
</g>
<g>
<title>byte[] (118 samples, 1.58%)</title><rect x="627.6" y="131.0" width="18.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="630.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (401 samples, 5.36%)</title><rect x="646.2" y="163.0" width="63.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.2" y="174.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (401 samples, 5.36%)</title><rect x="646.2" y="147.0" width="63.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.2" y="158.0">ru/mail..</text>
</g>
<g>
<title>byte[] (138 samples, 1.84%)</title><rect x="646.2" y="131.0" width="21.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="649.2" y="142.0">b..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (263 samples, 3.52%)</title><rect x="668.0" y="131.0" width="41.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.0" y="142.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (263 samples, 3.52%)</title><rect x="668.0" y="115.0" width="41.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="671.0" y="126.0">jav..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,047 samples, 40.72%)</title><rect x="709.5" y="307.0" width="480.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.5" y="318.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (141 samples, 1.88%)</title><rect x="709.5" y="291.0" width="22.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.5" y="302.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (141 samples, 1.88%)</title><rect x="709.5" y="275.0" width="22.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="712.5" y="286.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,906 samples, 38.84%)</title><rect x="731.7" y="291.0" width="458.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.7" y="302.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,906 samples, 38.84%)</title><rect x="731.7" y="275.0" width="458.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.7" y="286.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,902 samples, 38.79%)</title><rect x="731.7" y="259.0" width="457.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.7" y="270.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,150 samples, 15.37%)</title><rect x="731.7" y="243.0" width="181.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.7" y="254.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,150 samples, 15.37%)</title><rect x="731.7" y="227.0" width="181.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="734.7" y="238.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (878 samples, 11.73%)</title><rect x="731.7" y="211.0" width="138.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.7" y="222.0">RequestHandler1_e..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (209 samples, 2.79%)</title><rect x="731.7" y="195.0" width="33.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.7" y="206.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (209 samples, 2.79%)</title><rect x="731.7" y="179.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.7" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (209 samples, 2.79%)</title><rect x="731.7" y="163.0" width="33.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.7" y="174.0">ja..</text>
</g>
<g>
<title>java.lang.String (127 samples, 1.70%)</title><rect x="731.7" y="147.0" width="20.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="734.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (82 samples, 1.10%)</title><rect x="751.7" y="147.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.7" y="158.0"></text>
</g>
<g>
<title>byte[] (82 samples, 1.10%)</title><rect x="751.7" y="131.0" width="13.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="754.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (669 samples, 8.94%)</title><rect x="764.7" y="195.0" width="105.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.7" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (118 samples, 1.58%)</title><rect x="764.7" y="179.0" width="18.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (118 samples, 1.58%)</title><rect x="764.7" y="163.0" width="18.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (118 samples, 1.58%)</title><rect x="764.7" y="147.0" width="18.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (118 samples, 1.58%)</title><rect x="764.7" y="131.0" width="18.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.7" y="142.0"></text>
</g>
<g>
<title>byte[] (118 samples, 1.58%)</title><rect x="764.7" y="115.0" width="18.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="767.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (102 samples, 1.36%)</title><rect x="783.3" y="179.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (102 samples, 1.36%)</title><rect x="783.3" y="163.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$61/2130608126.get$Lambda (34 samples, 0.45%)</title><rect x="783.3" y="147.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.luckydaemon.ServiceImpl$$Lambda$61 (34 samples, 0.45%)</title><rect x="783.3" y="131.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="786.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$62/1850370333.get$Lambda (68 samples, 0.91%)</title><rect x="788.6" y="147.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.luckydaemon.ServiceImpl$$Lambda$62 (68 samples, 0.91%)</title><rect x="788.6" y="131.0" width="10.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="791.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (213 samples, 2.85%)</title><rect x="799.3" y="179.0" width="33.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.3" y="190.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (213 samples, 2.85%)</title><rect x="799.3" y="163.0" width="33.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.3" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (213 samples, 2.85%)</title><rect x="799.3" y="147.0" width="33.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="802.3" y="158.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.responseSend (236 samples, 3.15%)</title><rect x="832.9" y="179.0" width="37.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.9" y="190.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 1.28%)</title><rect x="832.9" y="163.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 1.28%)</title><rect x="832.9" y="147.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$63/1545301835.get$Lambda (96 samples, 1.28%)</title><rect x="832.9" y="131.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.9" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.luckydaemon.ServiceImpl$$Lambda$63 (96 samples, 1.28%)</title><rect x="832.9" y="115.0" width="15.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="835.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (140 samples, 1.87%)</title><rect x="848.1" y="163.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.1" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (140 samples, 1.87%)</title><rect x="848.1" y="147.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.1" y="158.0">j..</text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (140 samples, 1.87%)</title><rect x="848.1" y="131.0" width="22.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="851.1" y="142.0">j..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (272 samples, 3.64%)</title><rect x="870.2" y="211.0" width="42.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.2" y="222.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (272 samples, 3.64%)</title><rect x="870.2" y="195.0" width="42.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.2" y="206.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (272 samples, 3.64%)</title><rect x="870.2" y="179.0" width="42.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.2" y="190.0">java..</text>
</g>
<g>
<title>java.lang.String (138 samples, 1.84%)</title><rect x="870.2" y="163.0" width="21.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="873.2" y="174.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (134 samples, 1.79%)</title><rect x="891.9" y="163.0" width="21.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.9" y="174.0">j..</text>
</g>
<g>
<title>byte[] (134 samples, 1.79%)</title><rect x="891.9" y="147.0" width="21.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="894.9" y="158.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,251 samples, 16.72%)</title><rect x="913.1" y="243.0" width="197.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.1" y="254.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one.nio.http.Request (290 samples, 3.88%)</title><rect x="913.1" y="227.0" width="45.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="916.1" y="238.0">one...</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (357 samples, 4.77%)</title><rect x="958.8" y="227.0" width="56.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.8" y="238.0">one/ni..</text>
</g>
<g>
<title>java.lang.String[] (357 samples, 4.77%)</title><rect x="958.8" y="211.0" width="56.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="961.8" y="222.0">java.l..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (604 samples, 8.07%)</title><rect x="1015.1" y="227.0" width="95.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.1" y="238.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (604 samples, 8.07%)</title><rect x="1015.1" y="211.0" width="95.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.1" y="222.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (293 samples, 3.92%)</title><rect x="1015.1" y="195.0" width="46.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1018.1" y="206.0">char[]</text>
</g>
<g>
<title>java.lang.String (106 samples, 1.42%)</title><rect x="1061.3" y="195.0" width="16.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1064.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (205 samples, 2.74%)</title><rect x="1078.0" y="195.0" width="32.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.0" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (205 samples, 2.74%)</title><rect x="1078.0" y="179.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.0" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (205 samples, 2.74%)</title><rect x="1078.0" y="163.0" width="32.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.0" y="174.0">ja..</text>
</g>
<g>
<title>byte[] (205 samples, 2.74%)</title><rect x="1078.0" y="147.0" width="32.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1081.0" y="158.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (501 samples, 6.70%)</title><rect x="1110.4" y="243.0" width="79.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.4" y="254.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (501 samples, 6.70%)</title><rect x="1110.4" y="227.0" width="79.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.4" y="238.0">one/nio/u..</text>
</g>
<g>
<title>char[] (226 samples, 3.02%)</title><rect x="1110.4" y="211.0" width="35.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1113.4" y="222.0">cha..</text>
</g>
<g>
<title>java.lang.String (116 samples, 1.55%)</title><rect x="1146.0" y="211.0" width="18.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1149.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (159 samples, 2.13%)</title><rect x="1164.3" y="211.0" width="25.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.3" y="222.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (159 samples, 2.13%)</title><rect x="1164.3" y="195.0" width="25.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.3" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (159 samples, 2.13%)</title><rect x="1164.3" y="179.0" width="25.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.3" y="190.0">j..</text>
</g>
<g>
<title>byte[] (159 samples, 2.13%)</title><rect x="1164.3" y="163.0" width="25.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1167.3" y="174.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.05%)</title><rect x="1189.4" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.05%)</title><rect x="1189.4" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1189.5" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.5" y="238.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1189.5" y="211.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.5" y="222.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1189.5" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.5" y="206.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1189.5" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.5" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1189.5" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.5" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="1189.5" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.5" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="1189.5" y="131.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.5" y="142.0"></text>
</g>
<g>
<title>long[] (2 samples, 0.03%)</title><rect x="1189.7" y="115.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1192.7" y="126.0"></text>
</g>
</g>
</svg>

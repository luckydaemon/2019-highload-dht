<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (644 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.16%)</title><rect x="10.0" y="851.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="11.8" y="851.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.8" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.16%)</title><rect x="11.8" y="835.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.8" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.16%)</title><rect x="11.8" y="819.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.8" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.16%)</title><rect x="11.8" y="803.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.8" y="814.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.16%)</title><rect x="11.8" y="787.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.16%)</title><rect x="11.8" y="771.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.8" y="782.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.16%)</title><rect x="11.8" y="755.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.8" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.16%)</title><rect x="11.8" y="739.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.8" y="750.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.16%)</title><rect x="11.8" y="723.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.8" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="13.7" y="851.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.7" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.16%)</title><rect x="13.7" y="835.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.7" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.16%)</title><rect x="13.7" y="819.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.7" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.16%)</title><rect x="13.7" y="803.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.7" y="814.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.16%)</title><rect x="13.7" y="787.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.7" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.16%)</title><rect x="13.7" y="771.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="13.7" y="755.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="13.7" y="739.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="13.7" y="723.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.7" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.16%)</title><rect x="15.5" y="851.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.5" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.16%)</title><rect x="15.5" y="835.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.5" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.16%)</title><rect x="15.5" y="819.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.5" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.16%)</title><rect x="15.5" y="803.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.5" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="15.5" y="787.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="15.5" y="771.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="18.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="15.5" y="755.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.5" y="766.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.16%)</title><rect x="17.3" y="851.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="20.3" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="17.3" y="835.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.3" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.16%)</title><rect x="17.3" y="819.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="20.3" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.16%)</title><rect x="17.3" y="803.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.3" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.16%)</title><rect x="17.3" y="787.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.3" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.16%)</title><rect x="19.2" y="851.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="22.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="19.2" y="835.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.2" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="19.2" y="819.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.2" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="19.2" y="803.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="19.2" y="787.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="22.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="19.2" y="771.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (465 samples, 72.20%)</title><rect x="21.0" y="851.0" width="852.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (465 samples, 72.20%)</title><rect x="21.0" y="835.0" width="852.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (465 samples, 72.20%)</title><rect x="21.0" y="819.0" width="852.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (82 samples, 12.73%)</title><rect x="21.0" y="803.0" width="150.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.0" y="814.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (82 samples, 12.73%)</title><rect x="21.0" y="787.0" width="150.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.0" y="798.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (61 samples, 9.47%)</title><rect x="22.8" y="771.0" width="111.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.8" y="782.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.47%)</title><rect x="22.8" y="755.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.47%)</title><rect x="22.8" y="739.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.31%)</title><rect x="24.7" y="723.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.31%)</title><rect x="24.7" y="707.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.31%)</title><rect x="24.7" y="691.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.7" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.16%)</title><rect x="24.7" y="675.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="27.7" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="24.7" y="659.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.7" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.16%)</title><rect x="26.5" y="675.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="29.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="26.5" y="659.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="29.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.16%)</title><rect x="26.5" y="643.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.5" y="654.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.16%)</title><rect x="26.5" y="627.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.5" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.16%)</title><rect x="26.5" y="611.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.5" y="622.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.16%)</title><rect x="26.5" y="595.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.5" y="606.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.16%)</title><rect x="26.5" y="579.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="29.5" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.16%)</title><rect x="26.5" y="563.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.16%)</title><rect x="26.5" y="547.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (58 samples, 9.01%)</title><rect x="28.3" y="755.0" width="106.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.3" y="766.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (57 samples, 8.85%)</title><rect x="30.2" y="739.0" width="104.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.2" y="750.0">jdk/internal..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.16%)</title><rect x="32.0" y="723.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="35.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="32.0" y="707.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="32.0" y="691.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="35.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="32.0" y="675.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="35.0" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 2.48%)</title><rect x="33.8" y="723.0" width="29.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="36.8" y="734.0">Un..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.16%)</title><rect x="35.7" y="707.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="35.7" y="691.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="38.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="35.7" y="675.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="38.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="35.7" y="659.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="38.7" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 1.09%)</title><rect x="37.5" y="707.0" width="12.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.5" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.31%)</title><rect x="43.0" y="691.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="46.0" y="702.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.16%)</title><rect x="43.0" y="675.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="46.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="44.8" y="675.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="44.8" y="659.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="47.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="44.8" y="643.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="47.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.31%)</title><rect x="46.6" y="691.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="49.6" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.31%)</title><rect x="46.6" y="675.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="49.6" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.31%)</title><rect x="46.6" y="659.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="49.6" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.47%)</title><rect x="50.3" y="707.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="53.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.47%)</title><rect x="50.3" y="691.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="53.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.47%)</title><rect x="50.3" y="675.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="53.3" y="686.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.31%)</title><rect x="52.1" y="659.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="55.1" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.16%)</title><rect x="54.0" y="643.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="57.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.16%)</title><rect x="54.0" y="627.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="57.0" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.16%)</title><rect x="54.0" y="611.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="57.0" y="622.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.13 (1 samples, 0.16%)</title><rect x="54.0" y="595.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.0" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.16%)</title><rect x="55.8" y="707.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="58.8" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="57.6" y="707.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="60.6" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.31%)</title><rect x="59.5" y="707.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.31%)</title><rect x="59.5" y="691.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.31%)</title><rect x="59.5" y="675.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="62.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 5.75%)</title><rect x="63.1" y="723.0" width="67.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="66.1" y="734.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_wait (36 samples, 5.59%)</title><rect x="63.1" y="707.0" width="66.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="66.1" y="718.0">__pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 5.12%)</title><rect x="66.8" y="691.0" width="60.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.8" y="702.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (32 samples, 4.97%)</title><rect x="66.8" y="675.0" width="58.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="69.8" y="686.0">do_sys..</text>
</g>
<g>
<title>sys_futex (30 samples, 4.66%)</title><rect x="70.5" y="659.0" width="54.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="73.5" y="670.0">sys_f..</text>
</g>
<g>
<title>do_futex (30 samples, 4.66%)</title><rect x="70.5" y="643.0" width="54.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="73.5" y="654.0">do_fu..</text>
</g>
<g>
<title>futex_wait (30 samples, 4.66%)</title><rect x="70.5" y="627.0" width="54.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="73.5" y="638.0">futex..</text>
</g>
<g>
<title>futex_wait_queue_me (28 samples, 4.35%)</title><rect x="74.1" y="611.0" width="51.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="77.1" y="622.0">futex..</text>
</g>
<g>
<title>schedule (28 samples, 4.35%)</title><rect x="74.1" y="595.0" width="51.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="77.1" y="606.0">sched..</text>
</g>
<g>
<title>__schedule (28 samples, 4.35%)</title><rect x="74.1" y="579.0" width="51.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="77.1" y="590.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (27 samples, 4.19%)</title><rect x="76.0" y="563.0" width="49.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.0" y="574.0">finis..</text>
</g>
<g>
<title>sys_futex (1 samples, 0.16%)</title><rect x="125.4" y="675.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="128.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="127.3" y="691.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="130.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="127.3" y="675.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="130.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="127.3" y="659.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="130.3" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.16%)</title><rect x="129.1" y="707.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="132.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.31%)</title><rect x="130.9" y="723.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="133.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.31%)</title><rect x="130.9" y="707.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="133.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.31%)</title><rect x="130.9" y="691.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="133.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.16%)</title><rect x="134.6" y="771.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.16%)</title><rect x="134.6" y="755.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.16%)</title><rect x="134.6" y="739.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.16%)</title><rect x="134.6" y="723.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 2.95%)</title><rect x="136.4" y="771.0" width="34.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.4" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 2.95%)</title><rect x="136.4" y="755.0" width="34.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.4" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 2.95%)</title><rect x="136.4" y="739.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.4" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 2.95%)</title><rect x="136.4" y="723.0" width="34.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.4" y="734.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 2.64%)</title><rect x="138.3" y="707.0" width="31.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.3" y="718.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.31%)</title><rect x="138.3" y="691.0" width="3.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="141.3" y="702.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.16%)</title><rect x="138.3" y="675.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="141.3" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.16%)</title><rect x="140.1" y="675.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="143.1" y="686.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (15 samples, 2.33%)</title><rect x="141.9" y="691.0" width="27.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="144.9" y="702.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 2.33%)</title><rect x="141.9" y="675.0" width="27.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.9" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (15 samples, 2.33%)</title><rect x="141.9" y="659.0" width="27.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.9" y="670.0">d..</text>
</g>
<g>
<title>sys_futex (15 samples, 2.33%)</title><rect x="141.9" y="643.0" width="27.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.9" y="654.0">s..</text>
</g>
<g>
<title>do_futex (15 samples, 2.33%)</title><rect x="141.9" y="627.0" width="27.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.9" y="638.0">d..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.16%)</title><rect x="141.9" y="611.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.9" y="622.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 2.17%)</title><rect x="143.8" y="611.0" width="25.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.8" y="622.0">f..</text>
</g>
<g>
<title>wake_up_q (13 samples, 2.02%)</title><rect x="145.6" y="595.0" width="23.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="148.6" y="606.0">w..</text>
</g>
<g>
<title>try_to_wake_up (13 samples, 2.02%)</title><rect x="145.6" y="579.0" width="23.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="148.6" y="590.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 2.02%)</title><rect x="145.6" y="563.0" width="23.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="148.6" y="574.0">_..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="169.4" y="707.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="169.4" y="691.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="172.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="169.4" y="675.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.4" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="169.4" y="659.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="172.4" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.16%)</title><rect x="169.4" y="643.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.4" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.16%)</title><rect x="169.4" y="627.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="172.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$63/1545301835.run (382 samples, 59.32%)</title><rect x="171.2" y="803.0" width="700.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.2" y="814.0">ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$63/1545301835.run</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$responseSend$4 (382 samples, 59.32%)</title><rect x="171.2" y="787.0" width="700.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.2" y="798.0">ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$responseSend$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (201 samples, 31.21%)</title><rect x="171.2" y="771.0" width="368.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (193 samples, 29.97%)</title><rect x="176.7" y="755.0" width="353.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.7" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.78%)</title><rect x="176.7" y="739.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.47%)</title><rect x="178.6" y="723.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.47%)</title><rect x="178.6" y="707.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.47%)</title><rect x="178.6" y="691.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.47%)</title><rect x="178.6" y="675.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.6" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="182.2" y="659.0" width="1.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="185.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="182.2" y="643.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="182.2" y="627.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="182.2" y="611.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="185.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="184.1" y="723.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="187.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="184.1" y="707.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="184.1" y="691.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (188 samples, 29.19%)</title><rect x="185.9" y="739.0" width="344.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.9" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (188 samples, 29.19%)</title><rect x="185.9" y="723.0" width="344.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.9" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.16%)</title><rect x="185.9" y="707.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (187 samples, 29.04%)</title><rect x="187.7" y="707.0" width="342.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.7" y="718.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (186 samples, 28.88%)</title><rect x="189.6" y="691.0" width="340.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.6" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (3 samples, 0.47%)</title><rect x="193.2" y="675.0" width="5.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="196.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.47%)</title><rect x="193.2" y="659.0" width="5.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="196.2" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.31%)</title><rect x="193.2" y="643.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="196.2" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.16%)</title><rect x="195.1" y="627.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="198.1" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.16%)</title><rect x="195.1" y="611.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="198.1" y="622.0"></text>
</g>
<g>
<title>__send (1 samples, 0.16%)</title><rect x="196.9" y="643.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="199.9" y="654.0"></text>
</g>
<g>
<title>__send (181 samples, 28.11%)</title><rect x="198.7" y="675.0" width="331.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="201.7" y="686.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (180 samples, 27.95%)</title><rect x="200.6" y="659.0" width="329.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="203.6" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (180 samples, 27.95%)</title><rect x="200.6" y="643.0" width="329.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="203.6" y="654.0">do_syscall_64</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="207.9" y="627.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="210.9" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="207.9" y="611.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.9" y="622.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.16%)</title><rect x="207.9" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="210.9" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.16%)</title><rect x="207.9" y="579.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="210.9" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="209.7" y="627.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.7" y="638.0"></text>
</g>
<g>
<title>sys_sendto (174 samples, 27.02%)</title><rect x="211.6" y="627.0" width="318.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.6" y="638.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (174 samples, 27.02%)</title><rect x="211.6" y="611.0" width="318.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.6" y="622.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (169 samples, 26.24%)</title><rect x="215.2" y="595.0" width="309.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="218.2" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (162 samples, 25.16%)</title><rect x="218.9" y="579.0" width="296.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="221.9" y="590.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (162 samples, 25.16%)</title><rect x="218.9" y="563.0" width="296.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.9" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.16%)</title><rect x="218.9" y="547.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="221.9" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="220.7" y="547.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.7" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.16%)</title><rect x="222.5" y="547.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="225.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="222.5" y="531.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.5" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.16%)</title><rect x="224.4" y="547.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="227.4" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.31%)</title><rect x="226.2" y="547.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="229.2" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (156 samples, 24.22%)</title><rect x="229.9" y="547.0" width="285.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.9" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.16%)</title><rect x="239.0" y="531.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.0" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="239.0" y="515.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.0" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.16%)</title><rect x="240.9" y="531.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="243.9" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.31%)</title><rect x="242.7" y="531.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.7" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.31%)</title><rect x="242.7" y="515.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="245.7" y="526.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.31%)</title><rect x="246.4" y="531.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="249.4" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 1.24%)</title><rect x="250.0" y="531.0" width="14.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.93%)</title><rect x="251.9" y="515.0" width="11.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="254.9" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.31%)</title><rect x="259.2" y="499.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="262.2" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.31%)</title><rect x="259.2" y="483.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.2" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.16%)</title><rect x="261.0" y="467.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.0" y="478.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.16%)</title><rect x="262.9" y="515.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.9" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.16%)</title><rect x="264.7" y="531.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="267.7" y="542.0"></text>
</g>
<g>
<title>tcp_push (131 samples, 20.34%)</title><rect x="266.5" y="531.0" width="240.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="269.5" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (131 samples, 20.34%)</title><rect x="266.5" y="515.0" width="240.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="269.5" y="526.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (1 samples, 0.16%)</title><rect x="266.5" y="499.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.5" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (130 samples, 20.19%)</title><rect x="268.4" y="499.0" width="238.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="271.4" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="268.4" y="483.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="271.4" y="494.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.16%)</title><rect x="268.4" y="467.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="271.4" y="478.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.16%)</title><rect x="268.4" y="451.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="271.4" y="462.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.16%)</title><rect x="268.4" y="435.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="271.4" y="446.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.16%)</title><rect x="270.2" y="483.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.2" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.16%)</title><rect x="272.0" y="483.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.0" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.16%)</title><rect x="272.0" y="467.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.0" y="478.0"></text>
</g>
<g>
<title>tcp_transmit_skb (125 samples, 19.41%)</title><rect x="273.9" y="483.0" width="229.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.9" y="494.0">tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (121 samples, 18.79%)</title><rect x="279.3" y="467.0" width="221.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="282.3" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.16%)</title><rect x="279.3" y="451.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="282.3" y="462.0"></text>
</g>
<g>
<title>ip_local_out (119 samples, 18.48%)</title><rect x="281.2" y="451.0" width="218.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="284.2" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (119 samples, 18.48%)</title><rect x="281.2" y="435.0" width="218.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="284.2" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (119 samples, 18.48%)</title><rect x="281.2" y="419.0" width="218.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="284.2" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.31%)</title><rect x="281.2" y="403.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.2" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.16%)</title><rect x="284.8" y="403.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="287.8" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (116 samples, 18.01%)</title><rect x="286.7" y="403.0" width="212.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="289.7" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.16%)</title><rect x="286.7" y="387.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.7" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (105 samples, 16.30%)</title><rect x="288.5" y="387.0" width="192.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="291.5" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.17 (105 samples, 16.30%)</title><rect x="288.5" y="371.0" width="192.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.5" y="382.0">do_softirq.part.17</text>
</g>
<g>
<title>do_softirq_own_stack (105 samples, 16.30%)</title><rect x="288.5" y="355.0" width="192.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="291.5" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (104 samples, 16.15%)</title><rect x="288.5" y="339.0" width="190.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="291.5" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.16%)</title><rect x="292.2" y="323.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.2" y="334.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.16%)</title><rect x="294.0" y="323.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="297.0" y="334.0"></text>
</g>
<g>
<title>net_rx_action (100 samples, 15.53%)</title><rect x="295.8" y="323.0" width="183.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="298.8" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (99 samples, 15.37%)</title><rect x="297.7" y="307.0" width="181.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.7" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (98 samples, 15.22%)</title><rect x="299.5" y="291.0" width="179.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="302.5" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (98 samples, 15.22%)</title><rect x="299.5" y="275.0" width="179.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.5" y="286.0">__netif_receive_skb_core</text>
</g>
<g>
<title>ip_rcv (97 samples, 15.06%)</title><rect x="301.3" y="259.0" width="177.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="304.3" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (95 samples, 14.75%)</title><rect x="305.0" y="243.0" width="174.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.0" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (95 samples, 14.75%)</title><rect x="305.0" y="227.0" width="174.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="308.0" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (94 samples, 14.60%)</title><rect x="305.0" y="211.0" width="172.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.0" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>tcp_v4_rcv (94 samples, 14.60%)</title><rect x="305.0" y="195.0" width="172.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="308.0" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.78%)</title><rect x="305.0" y="179.0" width="9.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.0" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.16%)</title><rect x="312.3" y="163.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="315.3" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.16%)</title><rect x="314.2" y="179.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="317.2" y="190.0"></text>
</g>
<g>
<title>tcp_filter (4 samples, 0.62%)</title><rect x="316.0" y="179.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="319.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.62%)</title><rect x="316.0" y="163.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="319.0" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="316.0" y="147.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="319.0" y="158.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.16%)</title><rect x="317.8" y="147.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="320.8" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.31%)</title><rect x="319.7" y="147.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.7" y="158.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.16%)</title><rect x="323.3" y="179.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="326.3" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.16%)</title><rect x="325.2" y="179.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (82 samples, 12.73%)</title><rect x="327.0" y="179.0" width="150.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.0" y="190.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (81 samples, 12.58%)</title><rect x="327.0" y="163.0" width="148.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.0" y="174.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.62%)</title><rect x="330.7" y="147.0" width="7.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="333.7" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.62%)</title><rect x="330.7" y="131.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="333.7" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.62%)</title><rect x="330.7" y="115.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="333.7" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.62%)</title><rect x="330.7" y="99.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.62%)</title><rect x="330.7" y="83.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="333.7" y="94.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.16%)</title><rect x="338.0" y="147.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 2.48%)</title><rect x="339.8" y="147.0" width="29.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="342.8" y="158.0">tc..</text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.16%)</title><rect x="341.6" y="131.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="344.6" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.16%)</title><rect x="343.5" y="131.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="346.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 1.71%)</title><rect x="345.3" y="131.0" width="20.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="348.3" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 1.09%)</title><rect x="347.1" y="115.0" width="12.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="350.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.16%)</title><rect x="347.1" y="99.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.16%)</title><rect x="347.1" y="83.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.1" y="94.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.93%)</title><rect x="349.0" y="99.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="352.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.78%)</title><rect x="350.8" y="83.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="353.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.47%)</title><rect x="354.5" y="67.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="357.5" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.47%)</title><rect x="354.5" y="51.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="357.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.16%)</title><rect x="358.1" y="35.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.1" y="46.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.16%)</title><rect x="360.0" y="115.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="363.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.33 (2 samples, 0.31%)</title><rect x="361.8" y="115.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.8" y="126.0"></text>
</g>
<g>
<title>minmax_running_min (2 samples, 0.31%)</title><rect x="361.8" y="99.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="364.8" y="110.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.16%)</title><rect x="365.5" y="131.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.5" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.16%)</title><rect x="367.3" y="131.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="370.3" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (56 samples, 8.70%)</title><rect x="369.1" y="147.0" width="102.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="372.1" y="158.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (51 samples, 7.92%)</title><rect x="374.6" y="131.0" width="93.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="377.6" y="142.0">sock_def_re..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.16%)</title><rect x="376.5" y="115.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="379.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (49 samples, 7.61%)</title><rect x="378.3" y="115.0" width="89.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.3" y="126.0">__wake_up_..</text>
</g>
<g>
<title>__wake_up_common_lock (49 samples, 7.61%)</title><rect x="378.3" y="99.0" width="89.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.3" y="110.0">__wake_up_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (49 samples, 7.61%)</title><rect x="378.3" y="83.0" width="89.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="381.3" y="94.0">_raw_spin_..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.16%)</title><rect x="468.1" y="131.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.1" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.16%)</title><rect x="469.9" y="131.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="472.9" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.16%)</title><rect x="471.7" y="147.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="474.7" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.16%)</title><rect x="473.6" y="147.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="476.6" y="158.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.16%)</title><rect x="475.4" y="163.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="478.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.16%)</title><rect x="477.2" y="211.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="480.2" y="222.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.16%)</title><rect x="479.1" y="339.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.1" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 1.55%)</title><rect x="480.9" y="387.0" width="18.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 1.55%)</title><rect x="480.9" y="371.0" width="18.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.93%)</title><rect x="482.7" y="355.0" width="11.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.16%)</title><rect x="484.6" y="339.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.6" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.47%)</title><rect x="486.4" y="339.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="489.4" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.16%)</title><rect x="488.2" y="323.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.16%)</title><rect x="488.2" y="307.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.2" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.16%)</title><rect x="488.2" y="291.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.2" y="302.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.16%)</title><rect x="490.1" y="323.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="493.1" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.16%)</title><rect x="491.9" y="339.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="494.9" y="350.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.16%)</title><rect x="493.7" y="355.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="496.7" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.16%)</title><rect x="495.6" y="355.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="498.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.16%)</title><rect x="497.4" y="355.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="500.4" y="366.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.16%)</title><rect x="499.2" y="451.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="502.2" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.16%)</title><rect x="501.1" y="467.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="504.1" y="478.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.16%)</title><rect x="501.1" y="451.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.1" y="462.0"></text>
</g>
<g>
<title>tcp_tso_segs (2 samples, 0.31%)</title><rect x="502.9" y="483.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="505.9" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.62%)</title><rect x="506.6" y="531.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.6" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.62%)</title><rect x="506.6" y="515.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.6" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.31%)</title><rect x="508.4" y="499.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.16%)</title><rect x="512.0" y="499.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="515.0" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.16%)</title><rect x="513.9" y="531.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="516.9" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.47%)</title><rect x="515.7" y="579.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.7" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.31%)</title><rect x="517.5" y="563.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="520.5" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.31%)</title><rect x="517.5" y="547.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="520.5" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.31%)</title><rect x="517.5" y="531.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="520.5" y="542.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.16%)</title><rect x="519.4" y="515.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="522.4" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.31%)</title><rect x="521.2" y="579.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="524.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.47%)</title><rect x="524.9" y="595.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="527.9" y="606.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.47%)</title><rect x="524.9" y="579.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="527.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.47%)</title><rect x="524.9" y="563.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="527.9" y="574.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.31%)</title><rect x="526.7" y="547.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="529.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.78%)</title><rect x="530.4" y="755.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.78%)</title><rect x="530.4" y="739.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.78%)</title><rect x="530.4" y="723.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.4" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.31%)</title><rect x="534.0" y="707.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="537.0" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="537.7" y="707.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="540.7" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="537.7" y="691.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="540.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$61/2130608126.response (113 samples, 17.55%)</title><rect x="539.5" y="771.0" width="207.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.5" y="782.0">ru/mail/polis/service/lucky..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$entity$3 (113 samples, 17.55%)</title><rect x="539.5" y="755.0" width="207.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.5" y="766.0">ru/mail/polis/service/lucky..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.sendForward (113 samples, 17.55%)</title><rect x="539.5" y="739.0" width="207.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.5" y="750.0">ru/mail/polis/service/lucky..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (113 samples, 17.55%)</title><rect x="539.5" y="723.0" width="207.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.5" y="734.0">one/nio/http/HttpClient.inv..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (113 samples, 17.55%)</title><rect x="539.5" y="707.0" width="207.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.5" y="718.0">one/nio/http/HttpClient.inv..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.16%)</title><rect x="539.5" y="691.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="539.5" y="675.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="539.5" y="659.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.16%)</title><rect x="539.5" y="643.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.16%)</title><rect x="539.5" y="627.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.5" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.16%)</title><rect x="539.5" y="611.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="539.5" y="595.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="542.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="539.5" y="579.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="542.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="539.5" y="563.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (18 samples, 2.80%)</title><rect x="541.4" y="691.0" width="32.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.4" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 2.48%)</title><rect x="543.2" y="675.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.2" y="686.0">on..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.31%)</title><rect x="543.2" y="659.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="546.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.31%)</title><rect x="543.2" y="643.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="546.2" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.31%)</title><rect x="543.2" y="627.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="546.2" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="543.2" y="611.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="546.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="545.0" y="611.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="548.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="545.0" y="595.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="548.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="545.0" y="579.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.0" y="590.0"></text>
</g>
<g>
<title>recv (14 samples, 2.17%)</title><rect x="546.9" y="659.0" width="25.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="549.9" y="670.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 2.02%)</title><rect x="548.7" y="643.0" width="23.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="551.7" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (13 samples, 2.02%)</title><rect x="548.7" y="627.0" width="23.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="551.7" y="638.0">d..</text>
</g>
<g>
<title>sys_recvfrom (12 samples, 1.86%)</title><rect x="550.5" y="611.0" width="22.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="553.5" y="622.0">s..</text>
</g>
<g>
<title>SYSC_recvfrom (12 samples, 1.86%)</title><rect x="550.5" y="595.0" width="22.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.5" y="606.0">S..</text>
</g>
<g>
<title>sock_recvmsg (11 samples, 1.71%)</title><rect x="552.4" y="579.0" width="20.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.4" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (11 samples, 1.71%)</title><rect x="552.4" y="563.0" width="20.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="555.4" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 1.71%)</title><rect x="552.4" y="547.0" width="20.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.4" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.16%)</title><rect x="554.2" y="531.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="557.2" y="542.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.16%)</title><rect x="554.2" y="515.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="557.2" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.16%)</title><rect x="554.2" y="499.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.2" y="510.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.16%)</title><rect x="554.2" y="483.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="557.2" y="494.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.16%)</title><rect x="556.0" y="531.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="559.0" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="556.0" y="515.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="559.0" y="526.0"></text>
</g>
<g>
<title>sk_wait_data (6 samples, 0.93%)</title><rect x="557.9" y="531.0" width="11.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="560.9" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.16%)</title><rect x="557.9" y="515.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.9" y="526.0"></text>
</g>
<g>
<title>wait_woken (5 samples, 0.78%)</title><rect x="559.7" y="515.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.7" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (5 samples, 0.78%)</title><rect x="559.7" y="499.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="562.7" y="510.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.78%)</title><rect x="559.7" y="483.0" width="9.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="562.7" y="494.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.78%)</title><rect x="559.7" y="467.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="562.7" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.78%)</title><rect x="559.7" y="451.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.7" y="462.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.31%)</title><rect x="568.9" y="531.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.9" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.16%)</title><rect x="568.9" y="515.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.9" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.16%)</title><rect x="568.9" y="499.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="571.9" y="510.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.16%)</title><rect x="570.7" y="515.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="573.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="572.5" y="675.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="575.5" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="572.5" y="659.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="575.5" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="572.5" y="643.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.31%)</title><rect x="574.3" y="691.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="577.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.31%)</title><rect x="574.3" y="675.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.31%)</title><rect x="574.3" y="659.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.31%)</title><rect x="574.3" y="643.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.3" y="654.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.31%)</title><rect x="574.3" y="627.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="577.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.47%)</title><rect x="578.0" y="691.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.16%)</title><rect x="578.0" y="675.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.16%)</title><rect x="578.0" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.0" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.31%)</title><rect x="579.8" y="675.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="582.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.31%)</title><rect x="579.8" y="659.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="582.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.31%)</title><rect x="579.8" y="643.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="582.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (5 samples, 0.78%)</title><rect x="583.5" y="691.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.5" y="702.0"></text>
</g>
<g>
<title>__GI___setsockopt (5 samples, 0.78%)</title><rect x="583.5" y="675.0" width="9.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="586.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.78%)</title><rect x="583.5" y="659.0" width="9.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.78%)</title><rect x="583.5" y="643.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="586.5" y="654.0"></text>
</g>
<g>
<title>sys_setsockopt (4 samples, 0.62%)</title><rect x="585.3" y="627.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="588.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.16%)</title><rect x="585.3" y="611.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.3" y="622.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.16%)</title><rect x="587.2" y="611.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.2" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.16%)</title><rect x="589.0" y="611.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="592.0" y="622.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.16%)</title><rect x="589.0" y="595.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="592.0" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="590.8" y="611.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.8" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.16%)</title><rect x="590.8" y="595.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="593.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="590.8" y="579.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="593.8" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.16%)</title><rect x="590.8" y="563.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (83 samples, 12.89%)</title><rect x="592.7" y="691.0" width="152.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.7" y="702.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.47%)</title><rect x="592.7" y="675.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="595.7" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.31%)</title><rect x="592.7" y="659.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="595.7" y="670.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.31%)</title><rect x="592.7" y="643.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="595.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="596.3" y="659.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="599.3" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="596.3" y="643.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="599.3" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="596.3" y="627.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="599.3" y="638.0"></text>
</g>
<g>
<title>__send (79 samples, 12.27%)</title><rect x="598.2" y="675.0" width="144.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="601.2" y="686.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 12.27%)</title><rect x="598.2" y="659.0" width="144.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="601.2" y="670.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>do_syscall_64 (79 samples, 12.27%)</title><rect x="598.2" y="643.0" width="144.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="601.2" y="654.0">do_syscall_64</text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.16%)</title><rect x="598.2" y="627.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.31%)</title><rect x="600.0" y="627.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.31%)</title><rect x="600.0" y="611.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.0" y="622.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.31%)</title><rect x="600.0" y="595.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="603.0" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.31%)</title><rect x="600.0" y="579.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.0" y="590.0"></text>
</g>
<g>
<title>sys_sendto (76 samples, 11.80%)</title><rect x="603.7" y="627.0" width="139.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="606.7" y="638.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (76 samples, 11.80%)</title><rect x="603.7" y="611.0" width="139.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.7" y="622.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (76 samples, 11.80%)</title><rect x="603.7" y="595.0" width="139.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="606.7" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (75 samples, 11.65%)</title><rect x="603.7" y="579.0" width="137.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="606.7" y="590.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (75 samples, 11.65%)</title><rect x="603.7" y="563.0" width="137.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="606.7" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.16%)</title><rect x="603.7" y="547.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="606.7" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (73 samples, 11.34%)</title><rect x="605.5" y="547.0" width="133.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="608.5" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.16%)</title><rect x="611.0" y="531.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="614.0" y="542.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.16%)</title><rect x="611.0" y="515.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="614.0" y="526.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.31%)</title><rect x="612.8" y="531.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="615.8" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.93%)</title><rect x="616.5" y="531.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="619.5" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.62%)</title><rect x="620.2" y="515.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.2" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.16%)</title><rect x="623.8" y="499.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="626.8" y="510.0"></text>
</g>
<g>
<title>prefetch_freepointer (1 samples, 0.16%)</title><rect x="625.7" y="499.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="628.7" y="510.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.16%)</title><rect x="627.5" y="531.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="630.5" y="542.0"></text>
</g>
<g>
<title>tcp_push (59 samples, 9.16%)</title><rect x="629.3" y="531.0" width="108.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="632.3" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (59 samples, 9.16%)</title><rect x="629.3" y="515.0" width="108.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.3" y="526.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (59 samples, 9.16%)</title><rect x="629.3" y="499.0" width="108.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="632.3" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.16%)</title><rect x="629.3" y="483.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="632.3" y="494.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="631.1" y="483.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="634.1" y="494.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.16%)</title><rect x="631.1" y="467.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="634.1" y="478.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.16%)</title><rect x="631.1" y="451.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="634.1" y="462.0"></text>
</g>
<g>
<title>tcp_transmit_skb (57 samples, 8.85%)</title><rect x="633.0" y="483.0" width="104.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="636.0" y="494.0">tcp_transmit..</text>
</g>
<g>
<title>ip_queue_xmit (55 samples, 8.54%)</title><rect x="633.0" y="467.0" width="100.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.0" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (55 samples, 8.54%)</title><rect x="633.0" y="451.0" width="100.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="636.0" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (55 samples, 8.54%)</title><rect x="633.0" y="435.0" width="100.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="636.0" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (53 samples, 8.23%)</title><rect x="634.8" y="419.0" width="97.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="637.8" y="430.0">ip_finish_o..</text>
</g>
<g>
<title>ip_finish_output2 (53 samples, 8.23%)</title><rect x="634.8" y="403.0" width="97.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="637.8" y="414.0">ip_finish_o..</text>
</g>
<g>
<title>__local_bh_enable_ip (48 samples, 7.45%)</title><rect x="636.6" y="387.0" width="88.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="639.6" y="398.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.17 (48 samples, 7.45%)</title><rect x="636.6" y="371.0" width="88.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.6" y="382.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (47 samples, 7.30%)</title><rect x="638.5" y="355.0" width="86.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.5" y="366.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (47 samples, 7.30%)</title><rect x="638.5" y="339.0" width="86.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.5" y="350.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (47 samples, 7.30%)</title><rect x="638.5" y="323.0" width="86.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="641.5" y="334.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (46 samples, 7.14%)</title><rect x="640.3" y="307.0" width="84.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.3" y="318.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (45 samples, 6.99%)</title><rect x="642.1" y="291.0" width="82.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="645.1" y="302.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (45 samples, 6.99%)</title><rect x="642.1" y="275.0" width="82.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.1" y="286.0">__netif_r..</text>
</g>
<g>
<title>ip_rcv (45 samples, 6.99%)</title><rect x="642.1" y="259.0" width="82.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="645.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 6.99%)</title><rect x="642.1" y="243.0" width="82.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.1" y="254.0">ip_rcv_fi..</text>
</g>
<g>
<title>ip_local_deliver (45 samples, 6.99%)</title><rect x="642.1" y="227.0" width="82.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="645.1" y="238.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 6.99%)</title><rect x="642.1" y="211.0" width="82.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.1" y="222.0">ip_local_..</text>
</g>
<g>
<title>tcp_v4_rcv (45 samples, 6.99%)</title><rect x="642.1" y="195.0" width="82.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.1" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.16%)</title><rect x="642.1" y="179.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.16%)</title><rect x="644.0" y="179.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="647.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 6.52%)</title><rect x="645.8" y="179.0" width="77.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="648.8" y="190.0">tcp_v4_d..</text>
</g>
<g>
<title>tcp_rcv_established (42 samples, 6.52%)</title><rect x="645.8" y="163.0" width="77.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.8" y="174.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.31%)</title><rect x="645.8" y="147.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="648.8" y="158.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.16%)</title><rect x="645.8" y="131.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.8" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.16%)</title><rect x="647.6" y="131.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="650.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.16%)</title><rect x="647.6" y="115.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.16%)</title><rect x="647.6" y="99.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="650.6" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.16%)</title><rect x="647.6" y="83.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.6" y="94.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 1.40%)</title><rect x="649.5" y="147.0" width="16.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.5" y="158.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.16%)</title><rect x="651.3" y="131.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.33 (1 samples, 0.16%)</title><rect x="653.1" y="131.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="656.1" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.93%)</title><rect x="655.0" y="131.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="658.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.62%)</title><rect x="658.6" y="115.0" width="7.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="661.6" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.47%)</title><rect x="658.6" y="99.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.6" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.47%)</title><rect x="658.6" y="83.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.6" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.16%)</title><rect x="662.3" y="67.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="665.3" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.16%)</title><rect x="664.1" y="99.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="667.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.16%)</title><rect x="664.1" y="83.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="667.1" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.16%)</title><rect x="666.0" y="147.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="669.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (29 samples, 4.50%)</title><rect x="667.8" y="147.0" width="53.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="670.8" y="158.0">tcp_d..</text>
</g>
<g>
<title>sock_def_readable (29 samples, 4.50%)</title><rect x="667.8" y="131.0" width="53.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="670.8" y="142.0">sock_..</text>
</g>
<g>
<title>__wake_up_sync_key (29 samples, 4.50%)</title><rect x="667.8" y="115.0" width="53.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.8" y="126.0">__wak..</text>
</g>
<g>
<title>__wake_up_common_lock (29 samples, 4.50%)</title><rect x="667.8" y="99.0" width="53.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.8" y="110.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 4.50%)</title><rect x="667.8" y="83.0" width="53.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.8" y="94.0">_raw_..</text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.16%)</title><rect x="720.9" y="147.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="723.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.16%)</title><rect x="722.8" y="179.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="725.8" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.62%)</title><rect x="724.6" y="387.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="727.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.62%)</title><rect x="724.6" y="371.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.47%)</title><rect x="726.4" y="355.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.4" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.16%)</title><rect x="726.4" y="339.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.4" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.31%)</title><rect x="728.3" y="339.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="731.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.31%)</title><rect x="728.3" y="323.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="731.3" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.31%)</title><rect x="728.3" y="307.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.3" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.31%)</title><rect x="728.3" y="291.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.3" y="302.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.16%)</title><rect x="731.9" y="419.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="734.9" y="430.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.16%)</title><rect x="733.8" y="467.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.8" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.16%)</title><rect x="733.8" y="451.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.8" y="462.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.16%)</title><rect x="735.6" y="467.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="738.6" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.16%)</title><rect x="737.4" y="531.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="740.4" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.16%)</title><rect x="737.4" y="515.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="740.4" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.16%)</title><rect x="737.4" y="499.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.4" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.16%)</title><rect x="739.3" y="547.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.3" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.16%)</title><rect x="741.1" y="579.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="744.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="742.9" y="675.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="745.9" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="742.9" y="659.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="745.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="742.9" y="643.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="744.8" y="691.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="747.8" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="744.8" y="675.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="747.8" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="744.8" y="659.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="747.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl$$Lambda$62/1850370333.response (68 samples, 10.56%)</title><rect x="746.6" y="771.0" width="124.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.6" y="782.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.lambda$entity$0 (67 samples, 10.40%)</title><rect x="748.4" y="755.0" width="122.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.4" y="766.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.get (67 samples, 10.40%)</title><rect x="748.4" y="739.0" width="122.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.4" y="750.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.get (67 samples, 10.40%)</title><rect x="748.4" y="723.0" width="122.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.4" y="734.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="748.4" y="707.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="748.4" y="691.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="748.4" y="675.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="748.4" y="659.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.16%)</title><rect x="748.4" y="643.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.16%)</title><rect x="748.4" y="627.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.16%)</title><rect x="748.4" y="611.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.16%)</title><rect x="748.4" y="595.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.4" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 9.78%)</title><rect x="750.2" y="707.0" width="115.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.2" y="718.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 9.78%)</title><rect x="750.2" y="691.0" width="115.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.2" y="702.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (57 samples, 8.85%)</title><rect x="752.1" y="675.0" width="104.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="755.1" y="686.0">Java_org_roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni15427121489093311800.so (2 samples, 0.31%)</title><rect x="753.9" y="659.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="756.9" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.16%)</title><rect x="757.6" y="659.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="760.6" y="670.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.16%)</title><rect x="759.4" y="659.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="762.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="759.4" y="643.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="762.4" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="759.4" y="627.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.4" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="759.4" y="611.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.4" y="622.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.16%)</title><rect x="761.2" y="659.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="764.2" y="670.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.47%)</title><rect x="763.1" y="659.0" width="5.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="766.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.16%)</title><rect x="768.6" y="659.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="768.6" y="643.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="771.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="768.6" y="627.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="771.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="768.6" y="611.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="771.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.16%)</title><rect x="770.4" y="659.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="773.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="770.4" y="643.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.4" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="770.4" y="627.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="773.4" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="770.4" y="611.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="773.4" y="622.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (45 samples, 6.99%)</title><rect x="772.2" y="659.0" width="82.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="775.2" y="670.0">rocksdb_g..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="774.1" y="643.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="777.1" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.16%)</title><rect x="775.9" y="643.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="778.9" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.31%)</title><rect x="777.7" y="643.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="780.7" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.16%)</title><rect x="777.7" y="627.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="780.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="777.7" y="611.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="777.7" y="595.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="777.7" y="579.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="780.7" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="779.6" y="627.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="782.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (31 samples, 4.81%)</title><rect x="781.4" y="643.0" width="56.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="784.4" y="654.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.16%)</title><rect x="781.4" y="627.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="784.4" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="781.4" y="611.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="784.4" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="781.4" y="595.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="784.4" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="781.4" y="579.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="784.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (30 samples, 4.66%)</title><rect x="783.2" y="627.0" width="55.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="786.2" y="638.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (30 samples, 4.66%)</title><rect x="783.2" y="611.0" width="55.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="786.2" y="622.0">rocks..</text>
</g>
<g>
<title>_init (1 samples, 0.16%)</title><rect x="783.2" y="595.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="786.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.31%)</title><rect x="785.1" y="595.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="788.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.16%)</title><rect x="788.7" y="595.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="791.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (26 samples, 4.04%)</title><rect x="790.6" y="595.0" width="47.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="793.6" y="606.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.31%)</title><rect x="794.2" y="579.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="797.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="797.9" y="579.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="800.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.62%)</title><rect x="799.7" y="579.0" width="7.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="802.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.16%)</title><rect x="801.6" y="563.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="804.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="801.6" y="547.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="804.6" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="801.6" y="531.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="804.6" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="801.6" y="515.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="804.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.16%)</title><rect x="803.4" y="563.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="806.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.16%)</title><rect x="805.2" y="563.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="808.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.16%)</title><rect x="805.2" y="547.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="808.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (15 samples, 2.33%)</title><rect x="807.0" y="579.0" width="27.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="810.0" y="590.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni15427121489093311800.so (11 samples, 1.71%)</title><rect x="810.7" y="563.0" width="20.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="813.7" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15427121489093311800.so (1 samples, 0.16%)</title><rect x="812.5" y="547.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="815.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 0.93%)</title><rect x="814.4" y="547.0" width="11.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="817.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.62%)</title><rect x="818.0" y="531.0" width="7.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="821.0" y="542.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.47%)</title><rect x="818.0" y="515.0" width="5.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="821.0" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="821.7" y="499.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="824.7" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="821.7" y="483.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="824.7" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="821.7" y="467.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.7" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="823.5" y="515.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="826.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.16%)</title><rect x="825.4" y="547.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="828.4" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="825.4" y="531.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="828.4" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="825.4" y="515.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="828.4" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="825.4" y="499.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.4" y="510.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.31%)</title><rect x="827.2" y="547.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="830.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="829.0" y="531.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="832.0" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="829.0" y="515.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.0" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="829.0" y="499.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.0" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="830.9" y="563.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="833.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.16%)</title><rect x="832.7" y="563.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="835.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.16%)</title><rect x="834.5" y="579.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="837.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="836.4" y="579.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="839.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="836.4" y="563.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="839.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="836.4" y="547.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="839.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (9 samples, 1.40%)</title><rect x="838.2" y="643.0" width="16.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="841.2" y="654.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.16%)</title><rect x="841.9" y="627.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="844.9" y="638.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.16%)</title><rect x="843.7" y="627.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="846.7" y="638.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.16%)</title><rect x="843.7" y="611.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="846.7" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.78%)</title><rect x="845.5" y="627.0" width="9.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="848.5" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.16%)</title><rect x="847.4" y="611.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="850.4" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.16%)</title><rect x="849.2" y="611.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="852.2" y="622.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.16%)</title><rect x="851.0" y="611.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="854.0" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.16%)</title><rect x="852.9" y="611.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="855.9" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.16%)</title><rect x="852.9" y="595.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="855.9" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.16%)</title><rect x="852.9" y="579.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="855.9" y="590.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned (1 samples, 0.16%)</title><rect x="852.9" y="563.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="855.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="854.7" y="659.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="857.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="854.7" y="643.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="857.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="854.7" y="627.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="856.5" y="675.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="859.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="856.5" y="659.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="859.5" y="670.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.16%)</title><rect x="856.5" y="643.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="859.5" y="654.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.16%)</title><rect x="858.4" y="675.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="861.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="858.4" y="659.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="861.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="858.4" y="643.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="861.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="858.4" y="627.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.4" y="638.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.16%)</title><rect x="860.2" y="675.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="863.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="860.2" y="659.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="863.2" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="860.2" y="643.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.2" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="860.2" y="627.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.16%)</title><rect x="862.0" y="675.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="865.0" y="686.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.16%)</title><rect x="863.9" y="675.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="866.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (3 samples, 0.47%)</title><rect x="865.7" y="707.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.16%)</title><rect x="865.7" y="691.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (2 samples, 0.31%)</title><rect x="867.5" y="691.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.31%)</title><rect x="867.5" y="675.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.5" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="867.5" y="659.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="867.5" y="643.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="867.5" y="627.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.16%)</title><rect x="867.5" y="611.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.16%)</title><rect x="869.3" y="611.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.3" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="871.2" y="803.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="874.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="871.2" y="787.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="874.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="871.2" y="771.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="874.2" y="782.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (168 samples, 26.09%)</title><rect x="873.0" y="851.0" width="307.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.0" y="862.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="873.0" y="835.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="876.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.16%)</title><rect x="874.8" y="835.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.16%)</title><rect x="874.8" y="819.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.16%)</title><rect x="874.8" y="803.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 6.52%)</title><rect x="876.7" y="835.0" width="76.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.7" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (42 samples, 6.52%)</title><rect x="876.7" y="819.0" width="76.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.7" y="830.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.16%)</title><rect x="878.5" y="803.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="881.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 6.21%)</title><rect x="880.3" y="803.0" width="73.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="883.3" y="814.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.16%)</title><rect x="880.3" y="787.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="883.3" y="798.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 6.06%)</title><rect x="882.2" y="787.0" width="71.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="885.2" y="798.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 5.90%)</title><rect x="884.0" y="771.0" width="69.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="887.0" y="782.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (38 samples, 5.90%)</title><rect x="884.0" y="755.0" width="69.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="887.0" y="766.0">do_sysc..</text>
</g>
<g>
<title>sys_epoll_wait (37 samples, 5.75%)</title><rect x="885.8" y="739.0" width="67.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="888.8" y="750.0">sys_epo..</text>
</g>
<g>
<title>__fdget (1 samples, 0.16%)</title><rect x="887.7" y="723.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="890.7" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="887.7" y="707.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="890.7" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.16%)</title><rect x="887.7" y="691.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.7" y="702.0"></text>
</g>
<g>
<title>ep_poll (35 samples, 5.43%)</title><rect x="889.5" y="723.0" width="64.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.5" y="734.0">ep_poll</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.31%)</title><rect x="889.5" y="707.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="892.5" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (8 samples, 1.24%)</title><rect x="893.2" y="707.0" width="14.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="896.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.16%)</title><rect x="893.2" y="691.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="896.2" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.78%)</title><rect x="895.0" y="691.0" width="9.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.0" y="702.0"></text>
</g>
<g>
<title>ep_item_poll.isra.10 (4 samples, 0.62%)</title><rect x="895.0" y="675.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="898.0" y="686.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.47%)</title><rect x="896.8" y="659.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="899.8" y="670.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.47%)</title><rect x="896.8" y="643.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="899.8" y="654.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.16%)</title><rect x="902.3" y="675.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="905.3" y="686.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.31%)</title><rect x="904.2" y="691.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="907.2" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.31%)</title><rect x="904.2" y="675.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="907.2" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (25 samples, 3.88%)</title><rect x="907.8" y="707.0" width="45.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="910.8" y="718.0">sche..</text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="907.8" y="691.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.8" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 3.73%)</title><rect x="909.7" y="691.0" width="43.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.7" y="702.0">sche..</text>
</g>
<g>
<title>schedule (23 samples, 3.57%)</title><rect x="911.5" y="675.0" width="42.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.5" y="686.0">sche..</text>
</g>
<g>
<title>__schedule (23 samples, 3.57%)</title><rect x="911.5" y="659.0" width="42.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="914.5" y="670.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (21 samples, 3.26%)</title><rect x="915.2" y="643.0" width="38.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.2" y="654.0">fin..</text>
</g>
<g>
<title>one/nio/net/Session.process (124 samples, 19.25%)</title><rect x="953.6" y="835.0" width="227.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.6" y="846.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (124 samples, 19.25%)</title><rect x="953.6" y="819.0" width="227.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.6" y="830.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.16%)</title><rect x="953.6" y="803.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.16%)</title><rect x="953.6" y="787.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="956.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.16%)</title><rect x="953.6" y="771.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="956.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.16%)</title><rect x="953.6" y="755.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.6" y="766.0"></text>
</g>
<g>
<title>close (1 samples, 0.16%)</title><rect x="953.6" y="739.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="956.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="953.6" y="723.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="956.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.16%)</title><rect x="953.6" y="707.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.6" y="718.0"></text>
</g>
<g>
<title>sys_close (1 samples, 0.16%)</title><rect x="953.6" y="691.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="956.6" y="702.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.16%)</title><rect x="953.6" y="675.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.6" y="686.0"></text>
</g>
<g>
<title>filp_close (1 samples, 0.16%)</title><rect x="953.6" y="659.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="956.6" y="670.0"></text>
</g>
<g>
<title>locks_remove_posix (1 samples, 0.16%)</title><rect x="953.6" y="643.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="956.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (84 samples, 13.04%)</title><rect x="955.5" y="803.0" width="153.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.5" y="814.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.16%)</title><rect x="955.5" y="787.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (70 samples, 10.87%)</title><rect x="957.3" y="787.0" width="128.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.3" y="798.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (70 samples, 10.87%)</title><rect x="957.3" y="771.0" width="128.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.3" y="782.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (61 samples, 9.47%)</title><rect x="957.3" y="755.0" width="111.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.3" y="766.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.78%)</title><rect x="957.3" y="739.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="957.3" y="723.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.16%)</title><rect x="957.3" y="707.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.31%)</title><rect x="959.1" y="723.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.31%)</title><rect x="959.1" y="707.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.31%)</title><rect x="959.1" y="691.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="962.1" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.31%)</title><rect x="962.8" y="723.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.31%)</title><rect x="962.8" y="707.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.31%)</title><rect x="962.8" y="691.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.31%)</title><rect x="962.8" y="675.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (56 samples, 8.70%)</title><rect x="966.5" y="739.0" width="102.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.5" y="750.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="968.3" y="723.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.16%)</title><rect x="968.3" y="707.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ClustersNodes.keyCheck (1 samples, 0.16%)</title><rect x="970.1" y="723.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.16%)</title><rect x="970.1" y="707.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="970.1" y="691.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="970.1" y="675.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="973.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="970.1" y="659.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.responseSend (53 samples, 8.23%)</title><rect x="972.0" y="723.0" width="97.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.0" y="734.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (53 samples, 8.23%)</title><rect x="972.0" y="707.0" width="97.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.0" y="718.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (53 samples, 8.23%)</title><rect x="972.0" y="691.0" width="97.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.0" y="702.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (51 samples, 7.92%)</title><rect x="972.0" y="675.0" width="93.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.0" y="686.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (51 samples, 7.92%)</title><rect x="972.0" y="659.0" width="93.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="975.0" y="670.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (51 samples, 7.92%)</title><rect x="972.0" y="643.0" width="93.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.0" y="654.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (51 samples, 7.92%)</title><rect x="972.0" y="627.0" width="93.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.0" y="638.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (51 samples, 7.92%)</title><rect x="972.0" y="611.0" width="93.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.0" y="622.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 7.45%)</title><rect x="973.8" y="595.0" width="87.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.8" y="606.0">jdk/intern..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.16%)</title><rect x="973.8" y="579.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="976.8" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.16%)</title><rect x="975.6" y="579.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="978.6" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.62%)</title><rect x="977.5" y="579.0" width="7.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="980.5" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.16%)</title><rect x="977.5" y="563.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="980.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="977.5" y="547.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="980.5" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="977.5" y="531.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.5" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="977.5" y="515.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.5" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.31%)</title><rect x="979.3" y="563.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="982.3" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.16%)</title><rect x="983.0" y="563.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="986.0" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="984.8" y="579.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="987.8" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.16%)</title><rect x="986.6" y="579.0" width="1.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="989.6" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (40 samples, 6.21%)</title><rect x="988.4" y="579.0" width="73.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="991.4" y="590.0">pthread_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 6.21%)</title><rect x="988.4" y="563.0" width="73.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="991.4" y="574.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (40 samples, 6.21%)</title><rect x="988.4" y="547.0" width="73.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.4" y="558.0">do_sysca..</text>
</g>
<g>
<title>sys_futex (39 samples, 6.06%)</title><rect x="990.3" y="531.0" width="71.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="993.3" y="542.0">sys_futex</text>
</g>
<g>
<title>do_futex (39 samples, 6.06%)</title><rect x="990.3" y="515.0" width="71.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.3" y="526.0">do_futex</text>
</g>
<g>
<title>futex_wake (39 samples, 6.06%)</title><rect x="990.3" y="499.0" width="71.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="993.3" y="510.0">futex_wake</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.16%)</title><rect x="992.1" y="483.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="995.1" y="494.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.13 (1 samples, 0.16%)</title><rect x="992.1" y="467.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.1" y="478.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.16%)</title><rect x="993.9" y="483.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="996.9" y="494.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.16%)</title><rect x="993.9" y="467.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.9" y="478.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.16%)</title><rect x="993.9" y="451.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="996.9" y="462.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 5.59%)</title><rect x="995.8" y="483.0" width="65.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="998.8" y="494.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (36 samples, 5.59%)</title><rect x="995.8" y="467.0" width="65.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.8" y="478.0">try_to_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 5.59%)</title><rect x="995.8" y="451.0" width="65.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="998.8" y="462.0">_raw_sp..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.31%)</title><rect x="1061.7" y="595.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1064.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.31%)</title><rect x="1061.7" y="579.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1064.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.31%)</title><rect x="1061.7" y="563.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.7" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="1063.6" y="547.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1066.6" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.16%)</title><rect x="1063.6" y="531.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.6" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.16%)</title><rect x="1063.6" y="515.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1066.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.31%)</title><rect x="1065.4" y="675.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.31%)</title><rect x="1065.4" y="659.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1068.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.31%)</title><rect x="1065.4" y="643.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.31%)</title><rect x="1065.4" y="627.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1068.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 1.24%)</title><rect x="1069.1" y="755.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 1.24%)</title><rect x="1069.1" y="739.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.31%)</title><rect x="1069.1" y="723.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.93%)</title><rect x="1072.7" y="723.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.93%)</title><rect x="1072.7" y="707.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (6 samples, 0.93%)</title><rect x="1072.7" y="691.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.7" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.31%)</title><rect x="1074.6" y="675.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1077.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.47%)</title><rect x="1078.2" y="675.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1081.2" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.47%)</title><rect x="1078.2" y="659.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1081.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.47%)</title><rect x="1078.2" y="643.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1081.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.16%)</title><rect x="1083.7" y="755.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="1083.7" y="739.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="1083.7" y="723.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.7" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.16%)</title><rect x="1083.7" y="707.0" width="1.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1086.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="1083.7" y="691.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="1083.7" y="675.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="1083.7" y="659.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.47%)</title><rect x="1085.6" y="787.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1085.6" y="771.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1085.6" y="755.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.16%)</title><rect x="1089.2" y="771.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 1.24%)</title><rect x="1091.1" y="787.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 1.24%)</title><rect x="1091.1" y="771.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 1.24%)</title><rect x="1091.1" y="755.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="1103.9" y="739.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1106.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="1103.9" y="723.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1106.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="1103.9" y="707.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1106.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1105.7" y="787.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (39 samples, 6.06%)</title><rect x="1109.4" y="803.0" width="71.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1112.4" y="814.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (34 samples, 5.28%)</title><rect x="1109.4" y="787.0" width="62.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1112.4" y="798.0">one/ni..</text>
</g>
<g>
<title>[unknown] (7 samples, 1.09%)</title><rect x="1111.2" y="771.0" width="12.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1114.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.09%)</title><rect x="1111.2" y="755.0" width="12.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1114.2" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 1.09%)</title><rect x="1111.2" y="739.0" width="12.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1114.2" y="750.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.16%)</title><rect x="1111.2" y="723.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1114.2" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.93%)</title><rect x="1113.0" y="723.0" width="11.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1116.0" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.16%)</title><rect x="1114.9" y="707.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.9" y="718.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.16%)</title><rect x="1116.7" y="707.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1119.7" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.16%)</title><rect x="1118.5" y="707.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.5" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.31%)</title><rect x="1120.4" y="707.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1123.4" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.16%)</title><rect x="1122.2" y="691.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.16%)</title><rect x="1122.2" y="675.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.16%)</title><rect x="1122.2" y="659.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.2" y="670.0"></text>
</g>
<g>
<title>recv (26 samples, 4.04%)</title><rect x="1124.0" y="771.0" width="47.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1127.0" y="782.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 3.88%)</title><rect x="1125.9" y="755.0" width="45.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1128.9" y="766.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (25 samples, 3.88%)</title><rect x="1125.9" y="739.0" width="45.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1128.9" y="750.0">do_s..</text>
</g>
<g>
<title>sys_recvfrom (21 samples, 3.26%)</title><rect x="1133.2" y="723.0" width="38.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1136.2" y="734.0">sys..</text>
</g>
<g>
<title>SYSC_recvfrom (21 samples, 3.26%)</title><rect x="1133.2" y="707.0" width="38.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1136.2" y="718.0">SYS..</text>
</g>
<g>
<title>__fdget (1 samples, 0.16%)</title><rect x="1133.2" y="691.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1136.2" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.16%)</title><rect x="1135.0" y="691.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1138.0" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 2.80%)</title><rect x="1136.9" y="691.0" width="32.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1139.9" y="702.0">so..</text>
</g>
<g>
<title>inet_recvmsg (15 samples, 2.33%)</title><rect x="1136.9" y="675.0" width="27.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.9" y="686.0">i..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.16%)</title><rect x="1138.7" y="659.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.7" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.16%)</title><rect x="1140.5" y="659.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1143.5" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 1.86%)</title><rect x="1142.4" y="659.0" width="21.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1145.4" y="670.0">t..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.31%)</title><rect x="1147.9" y="643.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.9" y="654.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.31%)</title><rect x="1147.9" y="627.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.9" y="638.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.16%)</title><rect x="1147.9" y="611.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.9" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.16%)</title><rect x="1149.7" y="611.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1152.7" y="622.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.16%)</title><rect x="1149.7" y="595.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1152.7" y="606.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.16%)</title><rect x="1151.5" y="643.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.5" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.62%)</title><rect x="1153.4" y="643.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.4" y="654.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.47%)</title><rect x="1153.4" y="627.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.4" y="638.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.16%)</title><rect x="1155.2" y="611.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1158.2" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="1157.0" y="611.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.0" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.16%)</title><rect x="1158.9" y="627.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.9" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.16%)</title><rect x="1160.7" y="643.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.7" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.16%)</title><rect x="1162.5" y="643.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.5" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.47%)</title><rect x="1164.3" y="675.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1167.3" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.47%)</title><rect x="1164.3" y="659.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1167.3" y="670.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.47%)</title><rect x="1164.3" y="643.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1167.3" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.47%)</title><rect x="1164.3" y="627.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1167.3" y="638.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.31%)</title><rect x="1166.2" y="611.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.2" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="1169.8" y="691.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1172.8" y="702.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.16%)</title><rect x="1169.8" y="675.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1172.8" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="1169.8" y="659.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1172.8" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.16%)</title><rect x="1169.8" y="643.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.78%)</title><rect x="1171.7" y="787.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.7" y="798.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.78%)</title><rect x="1180.8" y="851.0" width="9.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1183.8" y="862.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.78%)</title><rect x="1180.8" y="835.0" width="9.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1183.8" y="846.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.78%)</title><rect x="1180.8" y="819.0" width="9.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>JavaThread::run() (4 samples, 0.62%)</title><rect x="1180.8" y="803.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (4 samples, 0.62%)</title><rect x="1180.8" y="787.0" width="7.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="798.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 0.62%)</title><rect x="1180.8" y="771.0" width="7.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.8" y="782.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 0.62%)</title><rect x="1180.8" y="755.0" width="7.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.8" y="766.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.62%)</title><rect x="1180.8" y="739.0" width="7.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.8" y="750.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.62%)</title><rect x="1180.8" y="723.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.8" y="734.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.47%)</title><rect x="1180.8" y="707.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.47%)</title><rect x="1180.8" y="691.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.8" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.16%)</title><rect x="1180.8" y="675.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.16%)</title><rect x="1180.8" y="659.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.8" y="670.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (1 samples, 0.16%)</title><rect x="1180.8" y="643.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.8" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.16%)</title><rect x="1182.7" y="675.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.7" y="686.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.16%)</title><rect x="1184.5" y="675.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.5" y="686.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.16%)</title><rect x="1184.5" y="659.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.5" y="670.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.16%)</title><rect x="1186.3" y="707.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.3" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (1 samples, 0.16%)</title><rect x="1186.3" y="691.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.16%)</title><rect x="1186.3" y="675.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.3" y="686.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.16%)</title><rect x="1188.2" y="803.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="814.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.16%)</title><rect x="1188.2" y="787.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.16%)</title><rect x="1188.2" y="771.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.16%)</title><rect x="1188.2" y="755.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.16%)</title><rect x="1188.2" y="739.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="1188.2" y="723.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.16%)</title><rect x="1188.2" y="707.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.2" y="718.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.16%)</title><rect x="1188.2" y="691.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1191.2" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.16%)</title><rect x="1188.2" y="675.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1191.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.16%)</title><rect x="1188.2" y="659.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.2" y="670.0"></text>
</g>
</g>
</svg>

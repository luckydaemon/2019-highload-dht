<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (65,629 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (40,872 samples, 62.28%)</title><rect x="10.0" y="691.0" width="734.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (40,872 samples, 62.28%)</title><rect x="10.0" y="675.0" width="734.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (40,872 samples, 62.28%)</title><rect x="10.0" y="659.0" width="734.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (23,185 samples, 35.33%)</title><rect x="10.0" y="643.0" width="416.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23,185 samples, 35.33%)</title><rect x="10.0" y="627.0" width="416.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (23,185 samples, 35.33%)</title><rect x="10.0" y="611.0" width="416.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurrent/CompletableFuture$UniCompose.tryFire</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (115 samples, 0.18%)</title><rect x="10.0" y="595.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1775918720.apply (23,057 samples, 35.13%)</title><rect x="12.1" y="595.0" width="414.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.1" y="606.0">jdk/internal/net/http/MultiExchange$$Lambda$126/177591872..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (23,057 samples, 35.13%)</title><rect x="12.1" y="579.0" width="414.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.1" y="590.0">jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (23,057 samples, 35.13%)</title><rect x="12.1" y="563.0" width="414.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.1" y="574.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (178 samples, 0.27%)</title><rect x="12.1" y="547.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (178 samples, 0.27%)</title><rect x="12.1" y="531.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1654089402.get$Lambda (122 samples, 0.19%)</title><rect x="12.1" y="515.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$238 (122 samples, 0.19%)</title><rect x="12.1" y="499.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="15.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$240/1605198082.get$Lambda (56 samples, 0.09%)</title><rect x="14.3" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$240 (56 samples, 0.09%)</title><rect x="14.3" y="499.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (244 samples, 0.37%)</title><rect x="15.3" y="547.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (244 samples, 0.37%)</title><rect x="15.3" y="531.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (138 samples, 0.21%)</title><rect x="15.3" y="515.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="18.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.16%)</title><rect x="17.8" y="515.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.16%)</title><rect x="17.8" y="499.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.16%)</title><rect x="17.8" y="483.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="20.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (488 samples, 0.74%)</title><rect x="19.7" y="547.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (488 samples, 0.74%)</title><rect x="19.7" y="531.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (278 samples, 0.42%)</title><rect x="19.7" y="515.0" width="5.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (210 samples, 0.32%)</title><rect x="24.7" y="515.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (210 samples, 0.32%)</title><rect x="24.7" y="499.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (210 samples, 0.32%)</title><rect x="24.7" y="483.0" width="3.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="27.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (21,636 samples, 32.97%)</title><rect x="28.4" y="547.0" width="389.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.4" y="558.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (21,636 samples, 32.97%)</title><rect x="28.4" y="531.0" width="389.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.4" y="542.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (21,636 samples, 32.97%)</title><rect x="28.4" y="515.0" width="389.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.4" y="526.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (245 samples, 0.37%)</title><rect x="28.4" y="499.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (245 samples, 0.37%)</title><rect x="28.4" y="483.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/1450507688.get$Lambda (71 samples, 0.11%)</title><rect x="28.4" y="467.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$135 (71 samples, 0.11%)</title><rect x="28.4" y="451.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="31.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1069917486.get$Lambda (82 samples, 0.12%)</title><rect x="29.7" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$136 (82 samples, 0.12%)</title><rect x="29.7" y="451.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="32.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/387510293.get$Lambda (92 samples, 0.14%)</title><rect x="31.2" y="467.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$200 (92 samples, 0.14%)</title><rect x="31.2" y="451.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="34.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (13,625 samples, 20.76%)</title><rect x="32.9" y="499.0" width="244.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.9" y="510.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (13,625 samples, 20.76%)</title><rect x="32.9" y="483.0" width="244.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.9" y="494.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13,521 samples, 20.60%)</title><rect x="32.9" y="467.0" width="243.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.9" y="478.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/387510293.apply (13,521 samples, 20.60%)</title><rect x="32.9" y="451.0" width="243.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.9" y="462.0">jdk/internal/net/http/Exchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (13,521 samples, 20.60%)</title><rect x="32.9" y="435.0" width="243.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.9" y="446.0">jdk/internal/net/http/Exchange.l..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (13,521 samples, 20.60%)</title><rect x="32.9" y="419.0" width="243.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.9" y="430.0">jdk/internal/net/http/Exchange.c..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1069917486.apply (13,521 samples, 20.60%)</title><rect x="32.9" y="403.0" width="243.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.9" y="414.0">jdk/internal/net/http/Exchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (13,521 samples, 20.60%)</title><rect x="32.9" y="387.0" width="243.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.9" y="398.0">jdk/internal/net/http/Exchange.l..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (94 samples, 0.14%)</title><rect x="32.9" y="371.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (94 samples, 0.14%)</title><rect x="32.9" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$236/945859830.get$Lambda (94 samples, 0.14%)</title><rect x="32.9" y="339.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$236 (94 samples, 0.14%)</title><rect x="32.9" y="323.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="35.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (288 samples, 0.44%)</title><rect x="34.5" y="371.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (288 samples, 0.44%)</title><rect x="34.5" y="355.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (139 samples, 0.21%)</title><rect x="34.5" y="339.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="37.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (30 samples, 0.05%)</title><rect x="37.0" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$236/945859830.apply (30 samples, 0.05%)</title><rect x="37.0" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (30 samples, 0.05%)</title><rect x="37.0" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (30 samples, 0.05%)</title><rect x="37.0" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/1450507688.apply (30 samples, 0.05%)</title><rect x="37.0" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (30 samples, 0.05%)</title><rect x="37.0" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (16 samples, 0.02%)</title><rect x="37.3" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.18%)</title><rect x="37.6" y="339.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.18%)</title><rect x="37.6" y="323.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (119 samples, 0.18%)</title><rect x="37.6" y="307.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="40.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (267 samples, 0.41%)</title><rect x="39.7" y="371.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (267 samples, 0.41%)</title><rect x="39.7" y="355.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (152 samples, 0.23%)</title><rect x="39.7" y="339.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="42.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (111 samples, 0.17%)</title><rect x="42.5" y="339.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (111 samples, 0.17%)</title><rect x="42.5" y="323.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (111 samples, 0.17%)</title><rect x="42.5" y="307.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="45.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (12,872 samples, 19.61%)</title><rect x="44.5" y="371.0" width="231.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.5" y="382.0">jdk/internal/net/http/Http1Exch..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.16%)</title><rect x="44.5" y="355.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.16%)</title><rect x="44.5" y="339.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/505961626.get$Lambda (50 samples, 0.08%)</title><rect x="44.5" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$231 (50 samples, 0.08%)</title><rect x="44.5" y="307.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="47.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$233/1351997233.get$Lambda (58 samples, 0.09%)</title><rect x="45.4" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$233 (58 samples, 0.09%)</title><rect x="45.4" y="307.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="48.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11,063 samples, 16.86%)</title><rect x="46.5" y="355.0" width="198.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.5" y="366.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11,063 samples, 16.86%)</title><rect x="46.5" y="339.0" width="198.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.5" y="350.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (118 samples, 0.18%)</title><rect x="46.5" y="323.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/505961626.apply (10,727 samples, 16.34%)</title><rect x="48.6" y="323.0" width="192.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.6" y="334.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (10,727 samples, 16.34%)</title><rect x="48.6" y="307.0" width="192.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.6" y="318.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.07%)</title><rect x="48.6" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.07%)</title><rect x="48.6" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$252/290859692.get$Lambda (49 samples, 0.07%)</title><rect x="48.6" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$252 (49 samples, 0.07%)</title><rect x="48.6" y="243.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="51.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (253 samples, 0.39%)</title><rect x="49.5" y="291.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (253 samples, 0.39%)</title><rect x="49.5" y="275.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (139 samples, 0.21%)</title><rect x="49.5" y="259.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="52.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.17%)</title><rect x="52.0" y="259.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.17%)</title><rect x="52.0" y="243.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.17%)</title><rect x="52.0" y="227.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="55.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (105 samples, 0.16%)</title><rect x="54.0" y="291.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="57.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (207 samples, 0.32%)</title><rect x="55.9" y="291.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (103 samples, 0.16%)</title><rect x="55.9" y="275.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (104 samples, 0.16%)</title><rect x="57.8" y="275.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (91 samples, 0.14%)</title><rect x="57.8" y="259.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (91 samples, 0.14%)</title><rect x="57.8" y="243.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (91 samples, 0.14%)</title><rect x="57.8" y="227.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (91 samples, 0.14%)</title><rect x="57.8" y="211.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (91 samples, 0.14%)</title><rect x="57.8" y="195.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="60.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (313 samples, 0.48%)</title><rect x="59.6" y="291.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (313 samples, 0.48%)</title><rect x="59.6" y="275.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (79 samples, 0.12%)</title><rect x="59.6" y="259.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (79 samples, 0.12%)</title><rect x="59.6" y="243.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (79 samples, 0.12%)</title><rect x="59.6" y="227.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (79 samples, 0.12%)</title><rect x="59.6" y="211.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="62.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (234 samples, 0.36%)</title><rect x="61.0" y="259.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (234 samples, 0.36%)</title><rect x="61.0" y="243.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (134 samples, 0.20%)</title><rect x="61.0" y="227.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="64.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (54 samples, 0.08%)</title><rect x="63.5" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (54 samples, 0.08%)</title><rect x="63.5" y="211.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="66.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (46 samples, 0.07%)</title><rect x="64.4" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (46 samples, 0.07%)</title><rect x="64.4" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (46 samples, 0.07%)</title><rect x="64.4" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (46 samples, 0.07%)</title><rect x="64.4" y="179.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/254749889.linkToTargetMethod (35 samples, 0.05%)</title><rect x="64.4" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (35 samples, 0.05%)</title><rect x="64.4" y="147.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.05%)</title><rect x="64.4" y="131.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (35 samples, 0.05%)</title><rect x="64.4" y="115.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (35 samples, 0.05%)</title><rect x="64.4" y="99.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.4" y="110.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.05%)</title><rect x="64.4" y="83.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="67.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (9,800 samples, 14.93%)</title><rect x="65.3" y="291.0" width="176.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.3" y="302.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>java.lang.StringBuilder (88 samples, 0.13%)</title><rect x="65.3" y="275.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="68.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (940 samples, 1.43%)</title><rect x="66.8" y="275.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (940 samples, 1.43%)</title><rect x="66.8" y="259.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (940 samples, 1.43%)</title><rect x="66.8" y="243.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.8" y="254.0"></text>
</g>
<g>
<title>byte[] (883 samples, 1.35%)</title><rect x="66.8" y="227.0" width="15.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="69.8" y="238.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.09%)</title><rect x="82.7" y="227.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (296 samples, 0.45%)</title><rect x="83.7" y="275.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (296 samples, 0.45%)</title><rect x="83.7" y="259.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.7" y="270.0"></text>
</g>
<g>
<title>byte[] (296 samples, 0.45%)</title><rect x="83.7" y="243.0" width="5.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="86.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,003 samples, 1.53%)</title><rect x="89.1" y="275.0" width="18.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,003 samples, 1.53%)</title><rect x="89.1" y="259.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.12%)</title><rect x="89.1" y="243.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="92.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (922 samples, 1.40%)</title><rect x="90.5" y="243.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.5" y="254.0"></text>
</g>
<g>
<title>byte[] (892 samples, 1.36%)</title><rect x="90.5" y="227.0" width="16.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="93.5" y="238.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.05%)</title><rect x="106.6" y="227.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (160 samples, 0.24%)</title><rect x="107.1" y="275.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (160 samples, 0.24%)</title><rect x="107.1" y="259.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.1" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (160 samples, 0.24%)</title><rect x="107.1" y="243.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="110.1" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (87 samples, 0.13%)</title><rect x="110.0" y="275.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.0" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (87 samples, 0.13%)</title><rect x="110.0" y="259.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="113.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (6,139 samples, 9.35%)</title><rect x="111.5" y="275.0" width="110.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.5" y="286.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (86 samples, 0.13%)</title><rect x="111.5" y="259.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.13%)</title><rect x="111.5" y="243.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.13%)</title><rect x="111.5" y="227.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.5" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/209309242.get$Lambda (86 samples, 0.13%)</title><rect x="111.5" y="211.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.5" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$255 (86 samples, 0.13%)</title><rect x="111.5" y="195.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="114.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2,918 samples, 4.45%)</title><rect x="113.1" y="259.0" width="52.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.1" y="270.0">jdk/i..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,492 samples, 2.27%)</title><rect x="113.1" y="243.0" width="26.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.1" y="254.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,492 samples, 2.27%)</title><rect x="113.1" y="227.0" width="26.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.1" y="238.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,492 samples, 2.27%)</title><rect x="113.1" y="211.0" width="26.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.1" y="222.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,492 samples, 2.27%)</title><rect x="113.1" y="195.0" width="26.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.1" y="206.0">j..</text>
</g>
<g>
<title>byte[] (1,439 samples, 2.19%)</title><rect x="113.1" y="179.0" width="25.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="116.1" y="190.0">b..</text>
</g>
<g>
<title>byte[] (53 samples, 0.08%)</title><rect x="139.0" y="179.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.0" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (242 samples, 0.37%)</title><rect x="139.9" y="243.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (242 samples, 0.37%)</title><rect x="139.9" y="227.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (242 samples, 0.37%)</title><rect x="139.9" y="211.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (242 samples, 0.37%)</title><rect x="139.9" y="195.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="142.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (214 samples, 0.33%)</title><rect x="144.3" y="243.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.3" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (114 samples, 0.17%)</title><rect x="144.3" y="227.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="147.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (100 samples, 0.15%)</title><rect x="146.3" y="227.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (100 samples, 0.15%)</title><rect x="146.3" y="211.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="149.3" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/209309242.test (970 samples, 1.48%)</title><rect x="148.1" y="243.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (970 samples, 1.48%)</title><rect x="148.1" y="227.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$41/1282287470.test (970 samples, 1.48%)</title><rect x="148.1" y="211.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (970 samples, 1.48%)</title><rect x="148.1" y="195.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.1" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$30/1151755506.test (970 samples, 1.48%)</title><rect x="148.1" y="179.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.1" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (970 samples, 1.48%)</title><rect x="148.1" y="163.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$29/439928219.test (970 samples, 1.48%)</title><rect x="148.1" y="147.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (970 samples, 1.48%)</title><rect x="148.1" y="131.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (970 samples, 1.48%)</title><rect x="148.1" y="115.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (970 samples, 1.48%)</title><rect x="148.1" y="99.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (472 samples, 0.72%)</title><rect x="148.1" y="83.0" width="8.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="151.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (498 samples, 0.76%)</title><rect x="156.6" y="83.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.6" y="94.0"></text>
</g>
<g>
<title>byte[] (498 samples, 0.76%)</title><rect x="156.6" y="67.0" width="8.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="159.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3,135 samples, 4.78%)</title><rect x="165.5" y="259.0" width="56.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.5" y="270.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,135 samples, 4.78%)</title><rect x="165.5" y="243.0" width="56.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.5" y="254.0">java/n..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,135 samples, 4.78%)</title><rect x="165.5" y="227.0" width="56.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.5" y="238.0">java/n..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (59 samples, 0.09%)</title><rect x="165.5" y="211.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="168.5" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (85 samples, 0.13%)</title><rect x="166.6" y="211.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="169.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (170 samples, 0.26%)</title><rect x="168.1" y="211.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="171.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (49 samples, 0.07%)</title><rect x="171.2" y="211.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="174.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.15%)</title><rect x="172.1" y="211.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.15%)</title><rect x="172.1" y="195.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.1" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.get$Lambda (101 samples, 0.15%)</title><rect x="172.1" y="179.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.1" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (101 samples, 0.15%)</title><rect x="172.1" y="163.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="175.1" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (103 samples, 0.16%)</title><rect x="173.9" y="211.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.9" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (103 samples, 0.16%)</title><rect x="173.9" y="195.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="176.9" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,418 samples, 3.68%)</title><rect x="175.7" y="211.0" width="43.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.7" y="222.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (2,418 samples, 3.68%)</title><rect x="175.7" y="195.0" width="43.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.7" y="206.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,418 samples, 3.68%)</title><rect x="175.7" y="179.0" width="43.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.7" y="190.0">java..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (481 samples, 0.73%)</title><rect x="175.7" y="163.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (481 samples, 0.73%)</title><rect x="175.7" y="147.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.get$Lambda (481 samples, 0.73%)</title><rect x="175.7" y="131.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.7" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (481 samples, 0.73%)</title><rect x="175.7" y="115.0" width="8.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="178.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (197 samples, 0.30%)</title><rect x="184.4" y="163.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (197 samples, 0.30%)</title><rect x="184.4" y="147.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (197 samples, 0.30%)</title><rect x="184.4" y="131.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (197 samples, 0.30%)</title><rect x="184.4" y="115.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (197 samples, 0.30%)</title><rect x="184.4" y="99.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (197 samples, 0.30%)</title><rect x="184.4" y="83.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (197 samples, 0.30%)</title><rect x="184.4" y="67.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (197 samples, 0.30%)</title><rect x="184.4" y="51.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (197 samples, 0.30%)</title><rect x="184.4" y="35.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="187.4" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (956 samples, 1.46%)</title><rect x="187.9" y="163.0" width="17.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (956 samples, 1.46%)</title><rect x="187.9" y="147.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (468 samples, 0.71%)</title><rect x="187.9" y="131.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (468 samples, 0.71%)</title><rect x="187.9" y="115.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (468 samples, 0.71%)</title><rect x="187.9" y="99.0" width="8.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="190.9" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (488 samples, 0.74%)</title><rect x="196.3" y="131.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.3" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (488 samples, 0.74%)</title><rect x="196.3" y="115.0" width="8.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (784 samples, 1.19%)</title><rect x="205.1" y="163.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.1" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (784 samples, 1.19%)</title><rect x="205.1" y="147.0" width="14.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="208.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (150 samples, 0.23%)</title><rect x="219.2" y="211.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (150 samples, 0.23%)</title><rect x="219.2" y="195.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="222.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (266 samples, 0.41%)</title><rect x="221.9" y="275.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (66 samples, 0.10%)</title><rect x="221.9" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.9" y="270.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.10%)</title><rect x="221.9" y="243.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="224.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (200 samples, 0.30%)</title><rect x="223.1" y="259.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (200 samples, 0.30%)</title><rect x="223.1" y="243.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/27084827.invoke (200 samples, 0.30%)</title><rect x="223.1" y="227.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (200 samples, 0.30%)</title><rect x="223.1" y="211.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (76 samples, 0.12%)</title><rect x="223.1" y="195.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.12%)</title><rect x="223.1" y="179.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="226.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (124 samples, 0.19%)</title><rect x="224.5" y="195.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (124 samples, 0.19%)</title><rect x="224.5" y="179.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.5" y="190.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.19%)</title><rect x="224.5" y="163.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="227.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (224 samples, 0.34%)</title><rect x="226.7" y="275.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (224 samples, 0.34%)</title><rect x="226.7" y="259.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (224 samples, 0.34%)</title><rect x="226.7" y="243.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (224 samples, 0.34%)</title><rect x="226.7" y="227.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/27084827.invoke (224 samples, 0.34%)</title><rect x="226.7" y="211.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (224 samples, 0.34%)</title><rect x="226.7" y="195.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (84 samples, 0.13%)</title><rect x="226.7" y="179.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.13%)</title><rect x="226.7" y="163.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="229.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (140 samples, 0.21%)</title><rect x="228.2" y="179.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (140 samples, 0.21%)</title><rect x="228.2" y="163.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.2" y="174.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.21%)</title><rect x="228.2" y="147.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="231.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (597 samples, 0.91%)</title><rect x="230.7" y="275.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (159 samples, 0.24%)</title><rect x="230.7" y="259.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="233.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (186 samples, 0.28%)</title><rect x="233.6" y="259.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (186 samples, 0.28%)</title><rect x="233.6" y="243.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="236.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (252 samples, 0.38%)</title><rect x="236.9" y="259.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.9" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (252 samples, 0.38%)</title><rect x="236.9" y="243.0" width="4.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="239.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (218 samples, 0.33%)</title><rect x="241.5" y="323.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (218 samples, 0.33%)</title><rect x="241.5" y="307.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (218 samples, 0.33%)</title><rect x="241.5" y="291.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="244.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (295 samples, 0.45%)</title><rect x="245.4" y="355.0" width="5.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="248.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (112 samples, 0.17%)</title><rect x="250.7" y="355.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="253.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,294 samples, 1.97%)</title><rect x="252.7" y="355.0" width="23.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.7" y="366.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.15%)</title><rect x="252.7" y="339.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.15%)</title><rect x="252.7" y="323.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$207/1907672630.get$Lambda (47 samples, 0.07%)</title><rect x="252.7" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$207 (47 samples, 0.07%)</title><rect x="252.7" y="291.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="255.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$209/869825055.get$Lambda (54 samples, 0.08%)</title><rect x="253.5" y="307.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$209 (54 samples, 0.08%)</title><rect x="253.5" y="291.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="256.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (146 samples, 0.22%)</title><rect x="254.5" y="339.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="257.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (108 samples, 0.16%)</title><rect x="257.1" y="339.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="260.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (122 samples, 0.19%)</title><rect x="259.1" y="339.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="262.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (380 samples, 0.58%)</title><rect x="261.3" y="339.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (380 samples, 0.58%)</title><rect x="261.3" y="323.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (380 samples, 0.58%)</title><rect x="261.3" y="307.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (380 samples, 0.58%)</title><rect x="261.3" y="291.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (380 samples, 0.58%)</title><rect x="261.3" y="275.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (380 samples, 0.58%)</title><rect x="261.3" y="259.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (380 samples, 0.58%)</title><rect x="261.3" y="243.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (380 samples, 0.58%)</title><rect x="261.3" y="227.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (380 samples, 0.58%)</title><rect x="261.3" y="211.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (124 samples, 0.19%)</title><rect x="261.3" y="195.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (124 samples, 0.19%)</title><rect x="261.3" y="179.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$214/1819373480.get$Lambda (53 samples, 0.08%)</title><rect x="261.3" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$214 (53 samples, 0.08%)</title><rect x="261.3" y="147.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="264.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$217/248060802.get$Lambda (71 samples, 0.11%)</title><rect x="262.2" y="163.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$217 (71 samples, 0.11%)</title><rect x="262.2" y="147.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="265.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (121 samples, 0.18%)</title><rect x="263.5" y="195.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="266.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (135 samples, 0.21%)</title><rect x="265.7" y="195.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (135 samples, 0.21%)</title><rect x="265.7" y="179.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (51 samples, 0.08%)</title><rect x="265.7" y="163.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="268.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (84 samples, 0.13%)</title><rect x="266.6" y="163.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (84 samples, 0.13%)</title><rect x="266.6" y="147.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="269.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (327 samples, 0.50%)</title><rect x="268.1" y="339.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.1" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (76 samples, 0.12%)</title><rect x="268.1" y="323.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="271.1" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (145 samples, 0.22%)</title><rect x="269.5" y="323.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="272.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (106 samples, 0.16%)</title><rect x="272.1" y="323.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.1" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (106 samples, 0.16%)</title><rect x="272.1" y="307.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.1" y="318.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.16%)</title><rect x="272.1" y="291.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="275.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (110 samples, 0.17%)</title><rect x="274.0" y="339.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.17%)</title><rect x="274.0" y="323.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="277.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.16%)</title><rect x="276.0" y="467.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.16%)</title><rect x="276.0" y="451.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.16%)</title><rect x="276.0" y="435.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="279.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (223 samples, 0.34%)</title><rect x="277.8" y="499.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (223 samples, 0.34%)</title><rect x="277.8" y="483.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (111 samples, 0.17%)</title><rect x="277.8" y="467.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="280.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (112 samples, 0.17%)</title><rect x="279.8" y="467.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (112 samples, 0.17%)</title><rect x="279.8" y="451.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (112 samples, 0.17%)</title><rect x="279.8" y="435.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="282.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (7,543 samples, 11.49%)</title><rect x="281.8" y="499.0" width="135.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.8" y="510.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (132 samples, 0.20%)</title><rect x="281.8" y="483.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (132 samples, 0.20%)</title><rect x="281.8" y="467.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/1182424724.get$Lambda (67 samples, 0.10%)</title><rect x="281.8" y="451.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$194 (67 samples, 0.10%)</title><rect x="281.8" y="435.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="284.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/2007766795.get$Lambda (65 samples, 0.10%)</title><rect x="283.0" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$197 (65 samples, 0.10%)</title><rect x="283.0" y="435.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="286.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (228 samples, 0.35%)</title><rect x="284.2" y="483.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (228 samples, 0.35%)</title><rect x="284.2" y="467.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="287.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/2007766795.apply (110 samples, 0.17%)</title><rect x="284.2" y="451.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (110 samples, 0.17%)</title><rect x="284.2" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (110 samples, 0.17%)</title><rect x="284.2" y="419.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.17%)</title><rect x="284.2" y="403.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="287.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (118 samples, 0.18%)</title><rect x="286.2" y="451.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (118 samples, 0.18%)</title><rect x="286.2" y="435.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (118 samples, 0.18%)</title><rect x="286.2" y="419.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="289.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (102 samples, 0.16%)</title><rect x="288.3" y="483.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (102 samples, 0.16%)</title><rect x="288.3" y="467.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.16%)</title><rect x="288.3" y="451.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.16%)</title><rect x="288.3" y="435.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="291.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (102 samples, 0.16%)</title><rect x="288.3" y="419.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="291.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (7,081 samples, 10.79%)</title><rect x="290.1" y="483.0" width="127.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.1" y="494.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.12%)</title><rect x="290.1" y="467.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.12%)</title><rect x="290.1" y="451.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$139/120399569.get$Lambda (76 samples, 0.12%)</title><rect x="290.1" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$139 (76 samples, 0.12%)</title><rect x="290.1" y="419.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="293.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6,585 samples, 10.03%)</title><rect x="291.5" y="467.0" width="118.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.5" y="478.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6,585 samples, 10.03%)</title><rect x="291.5" y="451.0" width="118.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.5" y="462.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,464 samples, 9.85%)</title><rect x="291.5" y="435.0" width="116.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.5" y="446.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$139/120399569.apply (6,464 samples, 9.85%)</title><rect x="291.5" y="419.0" width="116.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.5" y="430.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (6,464 samples, 9.85%)</title><rect x="291.5" y="403.0" width="116.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.5" y="414.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (6,464 samples, 9.85%)</title><rect x="291.5" y="387.0" width="116.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.5" y="398.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.05%)</title><rect x="291.5" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.05%)</title><rect x="291.5" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/183712916.get$Lambda (36 samples, 0.05%)</title><rect x="291.5" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$189 (36 samples, 0.05%)</title><rect x="291.5" y="323.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="294.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2,728 samples, 4.16%)</title><rect x="292.2" y="371.0" width="49.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.2" y="382.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2,728 samples, 4.16%)</title><rect x="292.2" y="355.0" width="49.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.2" y="366.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2,728 samples, 4.16%)</title><rect x="292.2" y="339.0" width="49.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.2" y="350.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/183712916.apply (2,614 samples, 3.98%)</title><rect x="292.2" y="323.0" width="47.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.2" y="334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2,614 samples, 3.98%)</title><rect x="292.2" y="307.0" width="47.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.2" y="318.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2,614 samples, 3.98%)</title><rect x="292.2" y="291.0" width="47.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.2" y="302.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2,614 samples, 3.98%)</title><rect x="292.2" y="275.0" width="47.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.2" y="286.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1,668 samples, 2.54%)</title><rect x="292.2" y="259.0" width="29.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.2" y="270.0">jd..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (477 samples, 0.73%)</title><rect x="292.2" y="243.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.12%)</title><rect x="292.2" y="227.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="295.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (193 samples, 0.29%)</title><rect x="293.6" y="227.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (193 samples, 0.29%)</title><rect x="293.6" y="211.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.6" y="222.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.29%)</title><rect x="293.6" y="195.0" width="3.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="296.6" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (206 samples, 0.31%)</title><rect x="297.0" y="227.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.0" y="238.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.31%)</title><rect x="297.0" y="211.0" width="3.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="300.0" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (84 samples, 0.13%)</title><rect x="300.7" y="243.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.7" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (84 samples, 0.13%)</title><rect x="300.7" y="227.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="303.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (759 samples, 1.16%)</title><rect x="302.2" y="243.0" width="13.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (74 samples, 0.11%)</title><rect x="302.2" y="227.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="305.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (534 samples, 0.81%)</title><rect x="303.6" y="227.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (534 samples, 0.81%)</title><rect x="303.6" y="211.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1447499999.linkToTargetMethod (383 samples, 0.58%)</title><rect x="303.6" y="195.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (383 samples, 0.58%)</title><rect x="303.6" y="179.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$25/413601558.get$Lambda (383 samples, 0.58%)</title><rect x="303.6" y="163.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$25 (383 samples, 0.58%)</title><rect x="303.6" y="147.0" width="6.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="306.6" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (151 samples, 0.23%)</title><rect x="310.5" y="195.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$25/413601558.run (151 samples, 0.23%)</title><rect x="310.5" y="179.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (151 samples, 0.23%)</title><rect x="310.5" y="163.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.5" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (151 samples, 0.23%)</title><rect x="310.5" y="147.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.5" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (151 samples, 0.23%)</title><rect x="310.5" y="131.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.5" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (151 samples, 0.23%)</title><rect x="310.5" y="115.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="313.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (151 samples, 0.23%)</title><rect x="313.2" y="227.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (151 samples, 0.23%)</title><rect x="313.2" y="211.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.2" y="222.0"></text>
</g>
<g>
<title>int[] (151 samples, 0.23%)</title><rect x="313.2" y="195.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="316.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (348 samples, 0.53%)</title><rect x="315.9" y="243.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.9" y="254.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.25%)</title><rect x="315.9" y="227.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="318.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (186 samples, 0.28%)</title><rect x="318.8" y="227.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (186 samples, 0.28%)</title><rect x="318.8" y="211.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (186 samples, 0.28%)</title><rect x="318.8" y="195.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="321.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (946 samples, 1.44%)</title><rect x="322.1" y="259.0" width="17.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.1" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (238 samples, 0.36%)</title><rect x="322.1" y="243.0" width="4.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="325.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (280 samples, 0.43%)</title><rect x="326.4" y="243.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (280 samples, 0.43%)</title><rect x="326.4" y="227.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="329.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (428 samples, 0.65%)</title><rect x="331.5" y="243.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.5" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (428 samples, 0.65%)</title><rect x="331.5" y="227.0" width="7.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="334.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.17%)</title><rect x="339.2" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.17%)</title><rect x="339.2" y="307.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.17%)</title><rect x="339.2" y="291.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="342.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3,700 samples, 5.64%)</title><rect x="341.2" y="371.0" width="66.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.2" y="382.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (272 samples, 0.41%)</title><rect x="341.2" y="355.0" width="4.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="344.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,321 samples, 5.06%)</title><rect x="346.1" y="355.0" width="59.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.1" y="366.0">jdk/in..</text>
</g>
<g>
<title>java.lang.Object (57 samples, 0.09%)</title><rect x="346.1" y="339.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="349.1" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (126 samples, 0.19%)</title><rect x="347.1" y="339.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="350.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (93 samples, 0.14%)</title><rect x="349.4" y="339.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="352.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (180 samples, 0.27%)</title><rect x="351.1" y="339.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (180 samples, 0.27%)</title><rect x="351.1" y="323.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.1" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (180 samples, 0.27%)</title><rect x="351.1" y="307.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="354.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (90 samples, 0.14%)</title><rect x="354.3" y="339.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (90 samples, 0.14%)</title><rect x="354.3" y="323.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="357.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (242 samples, 0.37%)</title><rect x="355.9" y="339.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="358.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (154 samples, 0.23%)</title><rect x="360.3" y="339.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="363.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (184 samples, 0.28%)</title><rect x="363.1" y="339.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="366.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (219 samples, 0.33%)</title><rect x="366.4" y="339.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="369.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (954 samples, 1.45%)</title><rect x="370.3" y="339.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (91 samples, 0.14%)</title><rect x="370.3" y="323.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="373.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (55 samples, 0.08%)</title><rect x="371.9" y="323.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="374.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (71 samples, 0.11%)</title><rect x="372.9" y="323.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="375.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (46 samples, 0.07%)</title><rect x="374.2" y="323.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="377.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.08%)</title><rect x="375.0" y="323.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.08%)</title><rect x="375.0" y="307.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.get$Lambda (54 samples, 0.08%)</title><rect x="375.0" y="291.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$185 (54 samples, 0.08%)</title><rect x="375.0" y="275.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="378.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (64 samples, 0.10%)</title><rect x="376.0" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (64 samples, 0.10%)</title><rect x="376.0" y="307.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="379.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (78 samples, 0.12%)</title><rect x="377.1" y="323.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="380.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (102 samples, 0.16%)</title><rect x="378.6" y="323.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="381.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (393 samples, 0.60%)</title><rect x="380.4" y="323.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (61 samples, 0.09%)</title><rect x="380.4" y="307.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="383.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (105 samples, 0.16%)</title><rect x="381.5" y="307.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="384.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (47 samples, 0.07%)</title><rect x="383.4" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (47 samples, 0.07%)</title><rect x="383.4" y="291.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="386.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (180 samples, 0.27%)</title><rect x="384.2" y="307.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (61 samples, 0.09%)</title><rect x="384.2" y="291.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="387.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (58 samples, 0.09%)</title><rect x="385.3" y="291.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="388.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (61 samples, 0.09%)</title><rect x="386.4" y="291.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="389.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (612 samples, 0.93%)</title><rect x="387.5" y="339.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (51 samples, 0.08%)</title><rect x="387.5" y="323.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="390.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (54 samples, 0.08%)</title><rect x="388.4" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="391.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (46 samples, 0.07%)</title><rect x="389.3" y="323.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="392.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (74 samples, 0.11%)</title><rect x="390.2" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (74 samples, 0.11%)</title><rect x="390.2" y="307.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="393.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (387 samples, 0.59%)</title><rect x="391.5" y="323.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (75 samples, 0.11%)</title><rect x="391.5" y="307.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="394.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (106 samples, 0.16%)</title><rect x="392.8" y="307.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="395.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (50 samples, 0.08%)</title><rect x="394.8" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (50 samples, 0.08%)</title><rect x="394.8" y="291.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="397.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (156 samples, 0.24%)</title><rect x="395.6" y="307.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (60 samples, 0.09%)</title><rect x="395.6" y="291.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="398.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (42 samples, 0.06%)</title><rect x="396.7" y="291.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="399.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (54 samples, 0.08%)</title><rect x="397.5" y="291.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="400.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (77 samples, 0.12%)</title><rect x="398.5" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (77 samples, 0.12%)</title><rect x="398.5" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (77 samples, 0.12%)</title><rect x="398.5" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.5" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (77 samples, 0.12%)</title><rect x="398.5" y="291.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.5" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (77 samples, 0.12%)</title><rect x="398.5" y="275.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (77 samples, 0.12%)</title><rect x="398.5" y="259.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (77 samples, 0.12%)</title><rect x="398.5" y="243.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="401.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (333 samples, 0.51%)</title><rect x="399.8" y="339.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1447499999.linkToTargetMethod (99 samples, 0.15%)</title><rect x="399.8" y="323.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.15%)</title><rect x="399.8" y="307.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/395225001.get$Lambda (99 samples, 0.15%)</title><rect x="399.8" y="291.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$142 (99 samples, 0.15%)</title><rect x="399.8" y="275.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="402.8" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (234 samples, 0.36%)</title><rect x="401.6" y="323.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/395225001.run (234 samples, 0.36%)</title><rect x="401.6" y="307.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (234 samples, 0.36%)</title><rect x="401.6" y="291.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.6" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (57 samples, 0.09%)</title><rect x="401.6" y="275.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="404.6" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (177 samples, 0.27%)</title><rect x="402.6" y="275.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.6" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (101 samples, 0.15%)</title><rect x="402.6" y="259.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="405.6" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (76 samples, 0.12%)</title><rect x="404.5" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.5" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (76 samples, 0.12%)</title><rect x="404.5" y="243.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.5" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (76 samples, 0.12%)</title><rect x="404.5" y="227.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.5" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (76 samples, 0.12%)</title><rect x="404.5" y="211.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.5" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (76 samples, 0.12%)</title><rect x="404.5" y="195.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="407.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (106 samples, 0.16%)</title><rect x="405.8" y="355.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.16%)</title><rect x="405.8" y="339.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="408.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.18%)</title><rect x="407.7" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.18%)</title><rect x="407.7" y="419.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (121 samples, 0.18%)</title><rect x="407.7" y="403.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="410.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (107 samples, 0.16%)</title><rect x="409.9" y="467.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (107 samples, 0.16%)</title><rect x="409.9" y="451.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.16%)</title><rect x="409.9" y="435.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.16%)</title><rect x="409.9" y="419.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.16%)</title><rect x="409.9" y="403.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="412.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (313 samples, 0.48%)</title><rect x="411.8" y="467.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (225 samples, 0.34%)</title><rect x="411.8" y="451.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (225 samples, 0.34%)</title><rect x="411.8" y="435.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1087893713.linkToTargetMethod (225 samples, 0.34%)</title><rect x="411.8" y="419.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/320641391.invoke (225 samples, 0.34%)</title><rect x="411.8" y="403.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1857750160.invoke (225 samples, 0.34%)</title><rect x="411.8" y="387.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (225 samples, 0.34%)</title><rect x="411.8" y="371.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (82 samples, 0.12%)</title><rect x="411.8" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.12%)</title><rect x="411.8" y="339.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="414.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (143 samples, 0.22%)</title><rect x="413.3" y="355.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (143 samples, 0.22%)</title><rect x="413.3" y="339.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.3" y="350.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.22%)</title><rect x="413.3" y="323.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="416.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (88 samples, 0.13%)</title><rect x="415.9" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.13%)</title><rect x="415.9" y="435.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="418.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (147 samples, 0.22%)</title><rect x="417.5" y="547.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (147 samples, 0.22%)</title><rect x="417.5" y="531.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (147 samples, 0.22%)</title><rect x="417.5" y="515.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (147 samples, 0.22%)</title><rect x="417.5" y="499.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="420.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (364 samples, 0.55%)</title><rect x="420.1" y="547.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (210 samples, 0.32%)</title><rect x="420.1" y="531.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="423.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (154 samples, 0.23%)</title><rect x="423.9" y="531.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (154 samples, 0.23%)</title><rect x="423.9" y="515.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (84 samples, 0.13%)</title><rect x="423.9" y="499.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.9" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (84 samples, 0.13%)</title><rect x="423.9" y="483.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (84 samples, 0.13%)</title><rect x="423.9" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (84 samples, 0.13%)</title><rect x="423.9" y="451.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.9" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (84 samples, 0.13%)</title><rect x="423.9" y="435.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="426.9" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (70 samples, 0.11%)</title><rect x="425.4" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.4" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (70 samples, 0.11%)</title><rect x="425.4" y="483.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.4" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (70 samples, 0.11%)</title><rect x="425.4" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.4" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (70 samples, 0.11%)</title><rect x="425.4" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.4" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (70 samples, 0.11%)</title><rect x="425.4" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.4" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (70 samples, 0.11%)</title><rect x="425.4" y="419.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.4" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (70 samples, 0.11%)</title><rect x="425.4" y="403.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.4" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (70 samples, 0.11%)</title><rect x="425.4" y="387.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.4" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (70 samples, 0.11%)</title><rect x="425.4" y="371.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="428.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (790 samples, 1.20%)</title><rect x="426.9" y="643.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (790 samples, 1.20%)</title><rect x="426.9" y="627.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (790 samples, 1.20%)</title><rect x="426.9" y="611.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (790 samples, 1.20%)</title><rect x="426.9" y="595.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (790 samples, 1.20%)</title><rect x="426.9" y="579.0" width="14.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="429.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$258/656676728.run (2,324 samples, 3.54%)</title><rect x="441.1" y="643.0" width="41.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.1" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2,324 samples, 3.54%)</title><rect x="441.1" y="627.0" width="41.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.1" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2,324 samples, 3.54%)</title><rect x="441.1" y="611.0" width="41.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.1" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2,324 samples, 3.54%)</title><rect x="441.1" y="595.0" width="41.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.1" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,324 samples, 3.54%)</title><rect x="441.1" y="579.0" width="41.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.1" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,324 samples, 3.54%)</title><rect x="441.1" y="563.0" width="41.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.1" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,324 samples, 3.54%)</title><rect x="441.1" y="547.0" width="41.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.1" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,324 samples, 3.54%)</title><rect x="441.1" y="531.0" width="41.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.1" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,324 samples, 3.54%)</title><rect x="441.1" y="515.0" width="41.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.1" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,324 samples, 3.54%)</title><rect x="441.1" y="499.0" width="41.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.1" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2,324 samples, 3.54%)</title><rect x="441.1" y="483.0" width="41.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.1" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2,106 samples, 3.21%)</title><rect x="441.1" y="467.0" width="37.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.1" y="478.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (304 samples, 0.46%)</title><rect x="441.1" y="451.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (304 samples, 0.46%)</title><rect x="441.1" y="435.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/596643520.get$Lambda (242 samples, 0.37%)</title><rect x="441.1" y="419.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$260 (242 samples, 0.37%)</title><rect x="441.1" y="403.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="444.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$264/53283254.get$Lambda (62 samples, 0.09%)</title><rect x="445.4" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$264 (62 samples, 0.09%)</title><rect x="445.4" y="403.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="448.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,802 samples, 2.75%)</title><rect x="446.5" y="451.0" width="32.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.5" y="462.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (163 samples, 0.25%)</title><rect x="446.5" y="435.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="449.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,639 samples, 2.50%)</title><rect x="449.5" y="435.0" width="29.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.5" y="446.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,639 samples, 2.50%)</title><rect x="449.5" y="419.0" width="29.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.5" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,639 samples, 2.50%)</title><rect x="449.5" y="403.0" width="29.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.5" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (676 samples, 1.03%)</title><rect x="449.5" y="387.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (224 samples, 0.34%)</title><rect x="449.5" y="371.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="452.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$261/1184412742.apply (402 samples, 0.61%)</title><rect x="453.5" y="371.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (402 samples, 0.61%)</title><rect x="453.5" y="355.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (402 samples, 0.61%)</title><rect x="453.5" y="339.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (93 samples, 0.14%)</title><rect x="453.5" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.5" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (93 samples, 0.14%)</title><rect x="453.5" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.5" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (93 samples, 0.14%)</title><rect x="453.5" y="291.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="456.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (309 samples, 0.47%)</title><rect x="455.2" y="323.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.08%)</title><rect x="455.2" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.08%)</title><rect x="455.2" y="291.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1742875943.get$Lambda (53 samples, 0.08%)</title><rect x="455.2" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$265 (53 samples, 0.08%)</title><rect x="455.2" y="259.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="458.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (256 samples, 0.39%)</title><rect x="456.1" y="307.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (256 samples, 0.39%)</title><rect x="456.1" y="291.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (132 samples, 0.20%)</title><rect x="456.1" y="275.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="459.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (120 samples, 0.18%)</title><rect x="458.6" y="275.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (120 samples, 0.18%)</title><rect x="458.6" y="259.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (120 samples, 0.18%)</title><rect x="458.6" y="243.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="461.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/973729991.apply (48 samples, 0.07%)</title><rect x="460.7" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (48 samples, 0.07%)</title><rect x="460.7" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (47 samples, 0.07%)</title><rect x="460.8" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (46 samples, 0.07%)</title><rect x="460.8" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (44 samples, 0.07%)</title><rect x="460.8" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (39 samples, 0.06%)</title><rect x="460.9" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/1855941268.run (39 samples, 0.06%)</title><rect x="460.9" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (39 samples, 0.06%)</title><rect x="460.9" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (23 samples, 0.04%)</title><rect x="461.2" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (23 samples, 0.04%)</title><rect x="461.2" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (23 samples, 0.04%)</title><rect x="461.2" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (23 samples, 0.04%)</title><rect x="461.2" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (23 samples, 0.04%)</title><rect x="461.2" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.04%)</title><rect x="461.2" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (23 samples, 0.04%)</title><rect x="461.2" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (23 samples, 0.04%)</title><rect x="461.2" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (22 samples, 0.03%)</title><rect x="461.2" y="115.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.2" y="126.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (22 samples, 0.03%)</title><rect x="461.2" y="99.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.2" y="110.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (22 samples, 0.03%)</title><rect x="461.2" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.2" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (22 samples, 0.03%)</title><rect x="461.2" y="67.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.2" y="78.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (22 samples, 0.03%)</title><rect x="461.2" y="51.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.2" y="62.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (22 samples, 0.03%)</title><rect x="461.2" y="35.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.2" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (963 samples, 1.47%)</title><rect x="461.6" y="387.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (963 samples, 1.47%)</title><rect x="461.6" y="371.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$236/945859830.apply (963 samples, 1.47%)</title><rect x="461.6" y="355.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (963 samples, 1.47%)</title><rect x="461.6" y="339.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (963 samples, 1.47%)</title><rect x="461.6" y="323.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/1450507688.apply (963 samples, 1.47%)</title><rect x="461.6" y="307.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (963 samples, 1.47%)</title><rect x="461.6" y="291.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.08%)</title><rect x="461.6" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.08%)</title><rect x="461.6" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="464.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$261/1184412742.get$Lambda (51 samples, 0.08%)</title><rect x="461.6" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$261 (51 samples, 0.08%)</title><rect x="461.6" y="227.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="464.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (229 samples, 0.35%)</title><rect x="462.5" y="275.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (229 samples, 0.35%)</title><rect x="462.5" y="259.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (136 samples, 0.21%)</title><rect x="462.5" y="243.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="465.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.14%)</title><rect x="465.0" y="243.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.14%)</title><rect x="465.0" y="227.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.14%)</title><rect x="465.0" y="211.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="468.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (290 samples, 0.44%)</title><rect x="466.7" y="275.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.07%)</title><rect x="466.7" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.07%)</title><rect x="466.7" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/1709003867.get$Lambda (45 samples, 0.07%)</title><rect x="466.7" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$262 (45 samples, 0.07%)</title><rect x="466.7" y="211.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="469.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (245 samples, 0.37%)</title><rect x="467.5" y="259.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (245 samples, 0.37%)</title><rect x="467.5" y="243.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (130 samples, 0.20%)</title><rect x="467.5" y="227.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="470.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (115 samples, 0.18%)</title><rect x="469.8" y="227.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (115 samples, 0.18%)</title><rect x="469.8" y="211.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (115 samples, 0.18%)</title><rect x="469.8" y="195.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="472.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (393 samples, 0.60%)</title><rect x="471.9" y="275.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (226 samples, 0.34%)</title><rect x="471.9" y="259.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (111 samples, 0.17%)</title><rect x="471.9" y="243.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="474.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (115 samples, 0.18%)</title><rect x="473.9" y="243.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (115 samples, 0.18%)</title><rect x="473.9" y="227.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (115 samples, 0.18%)</title><rect x="473.9" y="211.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="476.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (167 samples, 0.25%)</title><rect x="475.9" y="259.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (71 samples, 0.11%)</title><rect x="475.9" y="243.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="478.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (96 samples, 0.15%)</title><rect x="477.2" y="243.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (96 samples, 0.15%)</title><rect x="477.2" y="227.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (96 samples, 0.15%)</title><rect x="477.2" y="211.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (96 samples, 0.15%)</title><rect x="477.2" y="195.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (96 samples, 0.15%)</title><rect x="477.2" y="179.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (96 samples, 0.15%)</title><rect x="477.2" y="163.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="480.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (218 samples, 0.33%)</title><rect x="478.9" y="467.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (218 samples, 0.33%)</title><rect x="478.9" y="451.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (218 samples, 0.33%)</title><rect x="478.9" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (218 samples, 0.33%)</title><rect x="478.9" y="419.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (218 samples, 0.33%)</title><rect x="478.9" y="403.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.9" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (215 samples, 0.33%)</title><rect x="479.0" y="387.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (93 samples, 0.14%)</title><rect x="479.0" y="371.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.0" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (93 samples, 0.14%)</title><rect x="479.0" y="355.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="482.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (122 samples, 0.19%)</title><rect x="480.7" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.7" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (122 samples, 0.19%)</title><rect x="480.7" y="355.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="483.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14,573 samples, 22.21%)</title><rect x="482.9" y="643.0" width="262.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.9" y="654.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14,573 samples, 22.21%)</title><rect x="482.9" y="627.0" width="262.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.9" y="638.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11,602 samples, 17.68%)</title><rect x="482.9" y="611.0" width="208.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.9" y="622.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (11,602 samples, 17.68%)</title><rect x="482.9" y="595.0" width="208.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.9" y="606.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (11,602 samples, 17.68%)</title><rect x="482.9" y="579.0" width="208.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.9" y="590.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (264 samples, 0.40%)</title><rect x="482.9" y="563.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (264 samples, 0.40%)</title><rect x="482.9" y="547.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (264 samples, 0.40%)</title><rect x="482.9" y="531.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (264 samples, 0.40%)</title><rect x="482.9" y="515.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/254749889.linkToTargetMethod (139 samples, 0.21%)</title><rect x="482.9" y="499.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (139 samples, 0.21%)</title><rect x="482.9" y="483.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.21%)</title><rect x="482.9" y="467.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (139 samples, 0.21%)</title><rect x="482.9" y="451.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (139 samples, 0.21%)</title><rect x="482.9" y="435.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.9" y="446.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.21%)</title><rect x="482.9" y="419.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="485.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (125 samples, 0.19%)</title><rect x="485.4" y="499.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (125 samples, 0.19%)</title><rect x="485.4" y="483.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (125 samples, 0.19%)</title><rect x="485.4" y="467.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/1843538067.get$Lambda (125 samples, 0.19%)</title><rect x="485.4" y="451.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (125 samples, 0.19%)</title><rect x="485.4" y="435.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="488.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (11,336 samples, 17.27%)</title><rect x="487.6" y="563.0" width="203.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.6" y="574.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (11,336 samples, 17.27%)</title><rect x="487.6" y="547.0" width="203.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.6" y="558.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (11,336 samples, 17.27%)</title><rect x="487.6" y="531.0" width="203.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.6" y="542.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (11,336 samples, 17.27%)</title><rect x="487.6" y="515.0" width="203.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.6" y="526.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5,422 samples, 8.26%)</title><rect x="487.6" y="499.0" width="97.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.6" y="510.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,422 samples, 8.26%)</title><rect x="487.6" y="483.0" width="97.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.6" y="494.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5,422 samples, 8.26%)</title><rect x="487.6" y="467.0" width="97.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.6" y="478.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5,422 samples, 8.26%)</title><rect x="487.6" y="451.0" width="97.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.6" y="462.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,422 samples, 8.26%)</title><rect x="487.6" y="435.0" width="97.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.6" y="446.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5,422 samples, 8.26%)</title><rect x="487.6" y="419.0" width="97.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.6" y="430.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5,422 samples, 8.26%)</title><rect x="487.6" y="403.0" width="97.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.6" y="414.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5,254 samples, 8.01%)</title><rect x="487.6" y="387.0" width="94.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.6" y="398.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,254 samples, 8.01%)</title><rect x="487.6" y="371.0" width="94.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.6" y="382.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5,141 samples, 7.83%)</title><rect x="487.6" y="355.0" width="92.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.6" y="366.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (94 samples, 0.14%)</title><rect x="487.6" y="339.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="490.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/1709003867.apply (114 samples, 0.17%)</title><rect x="489.3" y="339.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (114 samples, 0.17%)</title><rect x="489.3" y="323.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (114 samples, 0.17%)</title><rect x="489.3" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (114 samples, 0.17%)</title><rect x="489.3" y="291.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.17%)</title><rect x="489.3" y="275.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="492.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/973729991.apply (4,691 samples, 7.15%)</title><rect x="491.4" y="339.0" width="84.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.4" y="350.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4,691 samples, 7.15%)</title><rect x="491.4" y="323.0" width="84.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.4" y="334.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.12%)</title><rect x="491.4" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.12%)</title><rect x="491.4" y="291.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$298/1308862923.get$Lambda (82 samples, 0.12%)</title><rect x="491.4" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$298 (82 samples, 0.12%)</title><rect x="491.4" y="259.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="494.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (224 samples, 0.34%)</title><rect x="492.8" y="307.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (224 samples, 0.34%)</title><rect x="492.8" y="291.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (136 samples, 0.21%)</title><rect x="492.8" y="275.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="495.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.13%)</title><rect x="495.3" y="275.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (88 samples, 0.13%)</title><rect x="495.3" y="259.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (88 samples, 0.13%)</title><rect x="495.3" y="243.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="498.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4,385 samples, 6.68%)</title><rect x="496.9" y="307.0" width="78.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.9" y="318.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.09%)</title><rect x="496.9" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.09%)</title><rect x="496.9" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/73638393.get$Lambda (62 samples, 0.09%)</title><rect x="496.9" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$297 (62 samples, 0.09%)</title><rect x="496.9" y="243.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="499.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (215 samples, 0.33%)</title><rect x="498.0" y="291.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (215 samples, 0.33%)</title><rect x="498.0" y="275.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (125 samples, 0.19%)</title><rect x="498.0" y="259.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="501.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (90 samples, 0.14%)</title><rect x="500.2" y="259.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (90 samples, 0.14%)</title><rect x="500.2" y="243.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (90 samples, 0.14%)</title><rect x="500.2" y="227.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="503.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (4,108 samples, 6.26%)</title><rect x="501.9" y="291.0" width="73.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.9" y="302.0">jdk/inte..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$115/1215834959.apply (281 samples, 0.43%)</title><rect x="501.9" y="275.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.9" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (281 samples, 0.43%)</title><rect x="501.9" y="259.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (281 samples, 0.43%)</title><rect x="501.9" y="243.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (108 samples, 0.16%)</title><rect x="501.9" y="227.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="504.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (173 samples, 0.26%)</title><rect x="503.8" y="227.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.8" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (70 samples, 0.11%)</title><rect x="503.8" y="211.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="506.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.16%)</title><rect x="505.1" y="211.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="508.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3,827 samples, 5.83%)</title><rect x="506.9" y="275.0" width="68.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.9" y="286.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (114 samples, 0.17%)</title><rect x="506.9" y="259.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (114 samples, 0.17%)</title><rect x="506.9" y="243.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1210854148.get$Lambda (61 samples, 0.09%)</title><rect x="506.9" y="227.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$295 (61 samples, 0.09%)</title><rect x="506.9" y="211.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="509.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$296/1667076487.get$Lambda (53 samples, 0.08%)</title><rect x="508.0" y="227.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$296 (53 samples, 0.08%)</title><rect x="508.0" y="211.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="511.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1886204218.linkToTargetMethod (142 samples, 0.22%)</title><rect x="509.0" y="259.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1789299701.invokeStatic (142 samples, 0.22%)</title><rect x="509.0" y="243.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/1855941268.get$Lambda (142 samples, 0.22%)</title><rect x="509.0" y="227.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$276 (142 samples, 0.22%)</title><rect x="509.0" y="211.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="512.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (754 samples, 1.15%)</title><rect x="511.5" y="259.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (318 samples, 0.48%)</title><rect x="511.5" y="243.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.5" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (108 samples, 0.16%)</title><rect x="511.5" y="227.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.5" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (108 samples, 0.16%)</title><rect x="511.5" y="211.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="514.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (210 samples, 0.32%)</title><rect x="513.5" y="227.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.5" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (210 samples, 0.32%)</title><rect x="513.5" y="211.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="516.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (231 samples, 0.35%)</title><rect x="517.2" y="243.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (231 samples, 0.35%)</title><rect x="517.2" y="227.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (231 samples, 0.35%)</title><rect x="517.2" y="211.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (79 samples, 0.12%)</title><rect x="517.2" y="195.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (79 samples, 0.12%)</title><rect x="517.2" y="179.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="520.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (79 samples, 0.12%)</title><rect x="517.2" y="163.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.2" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (79 samples, 0.12%)</title><rect x="517.2" y="147.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="520.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$273/1498334880.get (82 samples, 0.12%)</title><rect x="518.7" y="195.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (82 samples, 0.12%)</title><rect x="518.7" y="179.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="521.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (70 samples, 0.11%)</title><rect x="520.1" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (70 samples, 0.11%)</title><rect x="520.1" y="179.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.1" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (70 samples, 0.11%)</title><rect x="520.1" y="163.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.1" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (70 samples, 0.11%)</title><rect x="520.1" y="147.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="523.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (205 samples, 0.31%)</title><rect x="521.4" y="243.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (205 samples, 0.31%)</title><rect x="521.4" y="227.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="524.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (508 samples, 0.77%)</title><rect x="525.1" y="259.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (270 samples, 0.41%)</title><rect x="525.1" y="243.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (155 samples, 0.24%)</title><rect x="525.1" y="227.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="528.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (115 samples, 0.18%)</title><rect x="527.9" y="227.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (115 samples, 0.18%)</title><rect x="527.9" y="211.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (115 samples, 0.18%)</title><rect x="527.9" y="195.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="530.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (238 samples, 0.36%)</title><rect x="529.9" y="243.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (238 samples, 0.36%)</title><rect x="529.9" y="227.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (137 samples, 0.21%)</title><rect x="529.9" y="211.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="532.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.15%)</title><rect x="532.4" y="211.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.15%)</title><rect x="532.4" y="195.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.4" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.15%)</title><rect x="532.4" y="179.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="535.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (81 samples, 0.12%)</title><rect x="534.2" y="259.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="537.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (123 samples, 0.19%)</title><rect x="535.7" y="259.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="538.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.17%)</title><rect x="537.9" y="259.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="540.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (43 samples, 0.07%)</title><rect x="539.8" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (43 samples, 0.07%)</title><rect x="539.8" y="243.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="542.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,952 samples, 2.97%)</title><rect x="540.6" y="259.0" width="35.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.6" y="270.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/1855941268.run (1,952 samples, 2.97%)</title><rect x="540.6" y="243.0" width="35.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.6" y="254.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,952 samples, 2.97%)</title><rect x="540.6" y="227.0" width="35.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.6" y="238.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (226 samples, 0.34%)</title><rect x="540.6" y="211.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (226 samples, 0.34%)</title><rect x="540.6" y="195.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/999614473.get$Lambda (48 samples, 0.07%)</title><rect x="540.6" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$280 (48 samples, 0.07%)</title><rect x="540.6" y="163.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="543.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/1776462818.get$Lambda (74 samples, 0.11%)</title><rect x="541.5" y="179.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$282 (74 samples, 0.11%)</title><rect x="541.5" y="163.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="544.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1230419139.get$Lambda (104 samples, 0.16%)</title><rect x="542.8" y="179.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (104 samples, 0.16%)</title><rect x="542.8" y="163.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="545.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (228 samples, 0.35%)</title><rect x="544.7" y="211.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (228 samples, 0.35%)</title><rect x="544.7" y="195.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (143 samples, 0.22%)</title><rect x="544.7" y="179.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="547.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.13%)</title><rect x="547.3" y="179.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.13%)</title><rect x="547.3" y="163.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.13%)</title><rect x="547.3" y="147.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="550.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (134 samples, 0.20%)</title><rect x="548.8" y="211.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="551.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (92 samples, 0.14%)</title><rect x="551.2" y="211.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (92 samples, 0.14%)</title><rect x="551.2" y="195.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="554.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (321 samples, 0.49%)</title><rect x="552.8" y="211.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (321 samples, 0.49%)</title><rect x="552.8" y="195.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.11%)</title><rect x="552.8" y="179.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.11%)</title><rect x="552.8" y="163.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$293/1565024915.get$Lambda (75 samples, 0.11%)</title><rect x="552.8" y="147.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$293 (75 samples, 0.11%)</title><rect x="552.8" y="131.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="555.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (245 samples, 0.37%)</title><rect x="554.2" y="179.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (245 samples, 0.37%)</title><rect x="554.2" y="163.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (245 samples, 0.37%)</title><rect x="554.2" y="147.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (129 samples, 0.20%)</title><rect x="554.2" y="131.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="557.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.18%)</title><rect x="556.5" y="131.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.18%)</title><rect x="556.5" y="115.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.5" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.18%)</title><rect x="556.5" y="99.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="559.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (332 samples, 0.51%)</title><rect x="558.6" y="211.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (332 samples, 0.51%)</title><rect x="558.6" y="195.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/879583678.invoke (332 samples, 0.51%)</title><rect x="558.6" y="179.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (332 samples, 0.51%)</title><rect x="558.6" y="163.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (86 samples, 0.13%)</title><rect x="558.6" y="147.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.13%)</title><rect x="558.6" y="131.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="561.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (246 samples, 0.37%)</title><rect x="560.2" y="147.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (246 samples, 0.37%)</title><rect x="560.2" y="131.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.2" y="142.0"></text>
</g>
<g>
<title>byte[] (246 samples, 0.37%)</title><rect x="560.2" y="115.0" width="4.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="563.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (619 samples, 0.94%)</title><rect x="564.6" y="211.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (189 samples, 0.29%)</title><rect x="564.6" y="195.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="567.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (430 samples, 0.66%)</title><rect x="568.0" y="195.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (430 samples, 0.66%)</title><rect x="568.0" y="179.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/879583678.invoke (430 samples, 0.66%)</title><rect x="568.0" y="163.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (430 samples, 0.66%)</title><rect x="568.0" y="147.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (78 samples, 0.12%)</title><rect x="568.0" y="131.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.12%)</title><rect x="568.0" y="115.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="571.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (352 samples, 0.54%)</title><rect x="569.4" y="131.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (352 samples, 0.54%)</title><rect x="569.4" y="115.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.4" y="126.0"></text>
</g>
<g>
<title>byte[] (352 samples, 0.54%)</title><rect x="569.4" y="99.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="572.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1654089402.apply (242 samples, 0.37%)</title><rect x="575.7" y="339.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (242 samples, 0.37%)</title><rect x="575.7" y="323.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (121 samples, 0.18%)</title><rect x="575.7" y="307.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.7" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (121 samples, 0.18%)</title><rect x="575.7" y="291.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (121 samples, 0.18%)</title><rect x="575.7" y="275.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.7" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (121 samples, 0.18%)</title><rect x="575.7" y="259.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="578.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (121 samples, 0.18%)</title><rect x="577.9" y="307.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (121 samples, 0.18%)</title><rect x="577.9" y="291.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="580.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (113 samples, 0.17%)</title><rect x="580.1" y="355.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (113 samples, 0.17%)</title><rect x="580.1" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$240/1605198082.apply (113 samples, 0.17%)</title><rect x="580.1" y="323.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (113 samples, 0.17%)</title><rect x="580.1" y="307.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (113 samples, 0.17%)</title><rect x="580.1" y="291.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.17%)</title><rect x="580.1" y="275.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="583.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1742875943.apply (168 samples, 0.26%)</title><rect x="582.1" y="387.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (168 samples, 0.26%)</title><rect x="582.1" y="371.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (168 samples, 0.26%)</title><rect x="582.1" y="355.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="585.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (5,914 samples, 9.01%)</title><rect x="585.1" y="499.0" width="106.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (375 samples, 0.57%)</title><rect x="585.1" y="483.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (375 samples, 0.57%)</title><rect x="585.1" y="467.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (375 samples, 0.57%)</title><rect x="585.1" y="451.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.1" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (375 samples, 0.57%)</title><rect x="585.1" y="435.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (375 samples, 0.57%)</title><rect x="585.1" y="419.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.1" y="430.0"></text>
</g>
<g>
<title>byte[] (375 samples, 0.57%)</title><rect x="585.1" y="403.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="588.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (578 samples, 0.88%)</title><rect x="591.9" y="483.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.9" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (71 samples, 0.11%)</title><rect x="591.9" y="467.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="594.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (173 samples, 0.26%)</title><rect x="593.1" y="467.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (173 samples, 0.26%)</title><rect x="593.1" y="451.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (97 samples, 0.15%)</title><rect x="593.1" y="435.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="596.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.12%)</title><rect x="594.9" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.9" y="446.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.12%)</title><rect x="594.9" y="419.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="597.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (108 samples, 0.16%)</title><rect x="596.3" y="467.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.3" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (108 samples, 0.16%)</title><rect x="596.3" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.3" y="462.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.16%)</title><rect x="596.3" y="435.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="599.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (226 samples, 0.34%)</title><rect x="598.2" y="467.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (226 samples, 0.34%)</title><rect x="598.2" y="451.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (107 samples, 0.16%)</title><rect x="598.2" y="435.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="601.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (119 samples, 0.18%)</title><rect x="600.1" y="435.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.1" y="446.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.18%)</title><rect x="600.1" y="419.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="603.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,678 samples, 2.56%)</title><rect x="602.3" y="483.0" width="30.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.3" y="494.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,678 samples, 2.56%)</title><rect x="602.3" y="467.0" width="30.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="478.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,678 samples, 2.56%)</title><rect x="602.3" y="451.0" width="30.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.3" y="462.0">ja..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (47 samples, 0.07%)</title><rect x="602.3" y="435.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="605.3" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (93 samples, 0.14%)</title><rect x="603.1" y="435.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="606.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (177 samples, 0.27%)</title><rect x="604.8" y="435.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="607.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (56 samples, 0.09%)</title><rect x="608.0" y="435.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="611.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.16%)</title><rect x="609.0" y="435.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.16%)</title><rect x="609.0" y="419.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.get$Lambda (104 samples, 0.16%)</title><rect x="609.0" y="403.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (104 samples, 0.16%)</title><rect x="609.0" y="387.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="612.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (106 samples, 0.16%)</title><rect x="610.8" y="435.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.8" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (106 samples, 0.16%)</title><rect x="610.8" y="419.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="613.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (934 samples, 1.42%)</title><rect x="612.7" y="435.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (934 samples, 1.42%)</title><rect x="612.7" y="419.0" width="16.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (934 samples, 1.42%)</title><rect x="612.7" y="403.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (160 samples, 0.24%)</title><rect x="612.7" y="387.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.24%)</title><rect x="612.7" y="371.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.get$Lambda (160 samples, 0.24%)</title><rect x="612.7" y="355.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.7" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (160 samples, 0.24%)</title><rect x="612.7" y="339.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="615.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (182 samples, 0.28%)</title><rect x="615.6" y="387.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (182 samples, 0.28%)</title><rect x="615.6" y="371.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (182 samples, 0.28%)</title><rect x="615.6" y="355.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (182 samples, 0.28%)</title><rect x="615.6" y="339.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (182 samples, 0.28%)</title><rect x="615.6" y="323.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (182 samples, 0.28%)</title><rect x="615.6" y="307.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (182 samples, 0.28%)</title><rect x="615.6" y="291.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (182 samples, 0.28%)</title><rect x="615.6" y="275.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (182 samples, 0.28%)</title><rect x="615.6" y="259.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="618.6" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (316 samples, 0.48%)</title><rect x="618.9" y="387.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (316 samples, 0.48%)</title><rect x="618.9" y="371.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (148 samples, 0.23%)</title><rect x="618.9" y="355.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (148 samples, 0.23%)</title><rect x="618.9" y="339.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (148 samples, 0.23%)</title><rect x="618.9" y="323.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="621.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (168 samples, 0.26%)</title><rect x="621.5" y="355.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.5" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (168 samples, 0.26%)</title><rect x="621.5" y="339.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="624.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (276 samples, 0.42%)</title><rect x="624.6" y="387.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (276 samples, 0.42%)</title><rect x="624.6" y="371.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="627.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (161 samples, 0.25%)</title><rect x="629.5" y="435.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (161 samples, 0.25%)</title><rect x="629.5" y="419.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="632.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (3,283 samples, 5.00%)</title><rect x="632.4" y="483.0" width="59.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.4" y="494.0">jdk/in..</text>
</g>
<g>
<title>java.lang.StringBuilder (187 samples, 0.28%)</title><rect x="632.4" y="467.0" width="3.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="635.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (233 samples, 0.36%)</title><rect x="635.8" y="467.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (233 samples, 0.36%)</title><rect x="635.8" y="451.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.8" y="462.0"></text>
</g>
<g>
<title>byte[] (233 samples, 0.36%)</title><rect x="635.8" y="435.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="638.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (474 samples, 0.72%)</title><rect x="640.0" y="467.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (474 samples, 0.72%)</title><rect x="640.0" y="451.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (178 samples, 0.27%)</title><rect x="640.0" y="435.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="643.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (296 samples, 0.45%)</title><rect x="643.2" y="435.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.2" y="446.0"></text>
</g>
<g>
<title>byte[] (296 samples, 0.45%)</title><rect x="643.2" y="419.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="646.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2,389 samples, 3.64%)</title><rect x="648.5" y="467.0" width="43.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.5" y="478.0">jdk/..</text>
</g>
<g>
<title>java/lang/String.substring (693 samples, 1.06%)</title><rect x="648.5" y="451.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (693 samples, 1.06%)</title><rect x="648.5" y="435.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (304 samples, 0.46%)</title><rect x="648.5" y="419.0" width="5.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="651.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (389 samples, 0.59%)</title><rect x="654.0" y="419.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.0" y="430.0"></text>
</g>
<g>
<title>byte[] (389 samples, 0.59%)</title><rect x="654.0" y="403.0" width="7.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="657.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (363 samples, 0.55%)</title><rect x="661.0" y="451.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (363 samples, 0.55%)</title><rect x="661.0" y="435.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.0" y="446.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.31%)</title><rect x="661.0" y="419.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="664.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (160 samples, 0.24%)</title><rect x="664.6" y="419.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="667.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (351 samples, 0.53%)</title><rect x="667.5" y="451.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (351 samples, 0.53%)</title><rect x="667.5" y="435.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (351 samples, 0.53%)</title><rect x="667.5" y="419.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (162 samples, 0.25%)</title><rect x="667.5" y="403.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="670.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (189 samples, 0.29%)</title><rect x="670.4" y="403.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.4" y="414.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.29%)</title><rect x="670.4" y="387.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="673.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (382 samples, 0.58%)</title><rect x="673.8" y="451.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (382 samples, 0.58%)</title><rect x="673.8" y="435.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (382 samples, 0.58%)</title><rect x="673.8" y="419.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (382 samples, 0.58%)</title><rect x="673.8" y="403.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (382 samples, 0.58%)</title><rect x="673.8" y="387.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (382 samples, 0.58%)</title><rect x="673.8" y="371.0" width="6.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="676.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (600 samples, 0.91%)</title><rect x="680.7" y="451.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (208 samples, 0.32%)</title><rect x="680.7" y="435.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (208 samples, 0.32%)</title><rect x="680.7" y="419.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="683.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (245 samples, 0.37%)</title><rect x="684.4" y="435.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (245 samples, 0.37%)</title><rect x="684.4" y="419.0" width="4.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="687.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/19105023.apply (147 samples, 0.22%)</title><rect x="688.8" y="435.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (147 samples, 0.22%)</title><rect x="688.8" y="419.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.8" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (147 samples, 0.22%)</title><rect x="688.8" y="403.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="691.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2,971 samples, 4.53%)</title><rect x="691.5" y="611.0" width="53.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.5" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,971 samples, 4.53%)</title><rect x="691.5" y="595.0" width="53.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.5" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,971 samples, 4.53%)</title><rect x="691.5" y="579.0" width="53.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.5" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (2,971 samples, 4.53%)</title><rect x="691.5" y="563.0" width="53.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.5" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,971 samples, 4.53%)</title><rect x="691.5" y="547.0" width="53.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.5" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (405 samples, 0.62%)</title><rect x="691.5" y="531.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (138 samples, 0.21%)</title><rect x="691.5" y="515.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (138 samples, 0.21%)</title><rect x="691.5" y="499.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$214/1819373480.get$Lambda (60 samples, 0.09%)</title><rect x="691.5" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$214 (60 samples, 0.09%)</title><rect x="691.5" y="467.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="694.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$217/248060802.get$Lambda (78 samples, 0.12%)</title><rect x="692.5" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$217 (78 samples, 0.12%)</title><rect x="692.5" y="467.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="695.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (126 samples, 0.19%)</title><rect x="693.9" y="515.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="696.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (141 samples, 0.21%)</title><rect x="696.2" y="515.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (141 samples, 0.21%)</title><rect x="696.2" y="499.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (59 samples, 0.09%)</title><rect x="696.2" y="483.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="699.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (82 samples, 0.12%)</title><rect x="697.3" y="483.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (82 samples, 0.12%)</title><rect x="697.3" y="467.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="700.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2,547 samples, 3.88%)</title><rect x="698.7" y="531.0" width="45.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.7" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,547 samples, 3.88%)</title><rect x="698.7" y="515.0" width="45.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.7" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,547 samples, 3.88%)</title><rect x="698.7" y="499.0" width="45.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.7" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,547 samples, 3.88%)</title><rect x="698.7" y="483.0" width="45.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.7" y="494.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,547 samples, 3.88%)</title><rect x="698.7" y="467.0" width="45.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.7" y="478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,547 samples, 3.88%)</title><rect x="698.7" y="451.0" width="45.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.7" y="462.0">jdk/..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (173 samples, 0.26%)</title><rect x="698.7" y="435.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="701.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (173 samples, 0.26%)</title><rect x="698.7" y="419.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (173 samples, 0.26%)</title><rect x="698.7" y="403.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="701.7" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (68 samples, 0.10%)</title><rect x="701.8" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.8" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (68 samples, 0.10%)</title><rect x="701.8" y="419.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="704.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/999614473.run (1,482 samples, 2.26%)</title><rect x="703.1" y="435.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.1" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,482 samples, 2.26%)</title><rect x="703.1" y="419.0" width="26.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.1" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,482 samples, 2.26%)</title><rect x="703.1" y="403.0" width="26.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.1" y="414.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (396 samples, 0.60%)</title><rect x="703.1" y="387.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.1" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (282 samples, 0.43%)</title><rect x="703.1" y="371.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (93 samples, 0.14%)</title><rect x="703.1" y="355.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.1" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (93 samples, 0.14%)</title><rect x="703.1" y="339.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="706.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (189 samples, 0.29%)</title><rect x="704.7" y="355.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (189 samples, 0.29%)</title><rect x="704.7" y="339.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="707.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (114 samples, 0.17%)</title><rect x="708.1" y="371.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (114 samples, 0.17%)</title><rect x="708.1" y="355.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (114 samples, 0.17%)</title><rect x="708.1" y="339.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$98/71706941.get (71 samples, 0.11%)</title><rect x="708.1" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (71 samples, 0.11%)</title><rect x="708.1" y="307.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="711.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (43 samples, 0.07%)</title><rect x="709.4" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (43 samples, 0.07%)</title><rect x="709.4" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.4" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (43 samples, 0.07%)</title><rect x="709.4" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.4" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (43 samples, 0.07%)</title><rect x="709.4" y="275.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="712.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,086 samples, 1.65%)</title><rect x="710.2" y="387.0" width="19.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.2" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (85 samples, 0.13%)</title><rect x="710.2" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.2" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (85 samples, 0.13%)</title><rect x="710.2" y="355.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.2" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (85 samples, 0.13%)</title><rect x="710.2" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (85 samples, 0.13%)</title><rect x="710.2" y="323.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.2" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (85 samples, 0.13%)</title><rect x="710.2" y="307.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="713.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,001 samples, 1.53%)</title><rect x="711.7" y="371.0" width="18.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (409 samples, 0.62%)</title><rect x="711.7" y="355.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.7" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.12%)</title><rect x="711.7" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (76 samples, 0.12%)</title><rect x="711.7" y="323.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.7" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (76 samples, 0.12%)</title><rect x="711.7" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.7" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (76 samples, 0.12%)</title><rect x="711.7" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.7" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (76 samples, 0.12%)</title><rect x="711.7" y="275.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.7" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (76 samples, 0.12%)</title><rect x="711.7" y="259.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="714.7" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (64 samples, 0.10%)</title><rect x="713.1" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.1" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (64 samples, 0.10%)</title><rect x="713.1" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.1" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (64 samples, 0.10%)</title><rect x="713.1" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.1" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (64 samples, 0.10%)</title><rect x="713.1" y="291.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.1" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (64 samples, 0.10%)</title><rect x="713.1" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.1" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (64 samples, 0.10%)</title><rect x="713.1" y="259.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="716.1" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (121 samples, 0.18%)</title><rect x="714.2" y="339.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (121 samples, 0.18%)</title><rect x="714.2" y="323.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (121 samples, 0.18%)</title><rect x="714.2" y="307.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="717.2" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (63 samples, 0.10%)</title><rect x="716.4" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (63 samples, 0.10%)</title><rect x="716.4" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.4" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (63 samples, 0.10%)</title><rect x="716.4" y="307.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="719.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (85 samples, 0.13%)</title><rect x="717.5" y="339.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="720.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (260 samples, 0.40%)</title><rect x="719.1" y="355.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.1" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (100 samples, 0.15%)</title><rect x="719.1" y="339.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.1" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (100 samples, 0.15%)</title><rect x="719.1" y="323.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (100 samples, 0.15%)</title><rect x="719.1" y="307.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (100 samples, 0.15%)</title><rect x="719.1" y="291.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="722.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (77 samples, 0.12%)</title><rect x="720.9" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (77 samples, 0.12%)</title><rect x="720.9" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (77 samples, 0.12%)</title><rect x="720.9" y="307.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="723.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (83 samples, 0.13%)</title><rect x="722.3" y="339.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (83 samples, 0.13%)</title><rect x="722.3" y="323.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="725.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (332 samples, 0.51%)</title><rect x="723.7" y="355.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (66 samples, 0.10%)</title><rect x="723.7" y="339.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="726.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (266 samples, 0.41%)</title><rect x="724.9" y="339.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (82 samples, 0.12%)</title><rect x="724.9" y="323.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (82 samples, 0.12%)</title><rect x="724.9" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (82 samples, 0.12%)</title><rect x="724.9" y="291.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (82 samples, 0.12%)</title><rect x="724.9" y="275.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="727.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (184 samples, 0.28%)</title><rect x="726.4" y="323.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (184 samples, 0.28%)</title><rect x="726.4" y="307.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (140 samples, 0.21%)</title><rect x="726.4" y="291.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="729.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (44 samples, 0.07%)</title><rect x="728.9" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (44 samples, 0.07%)</title><rect x="728.9" y="275.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="731.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (539 samples, 0.82%)</title><rect x="729.7" y="435.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (539 samples, 0.82%)</title><rect x="729.7" y="419.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (539 samples, 0.82%)</title><rect x="729.7" y="403.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (222 samples, 0.34%)</title><rect x="729.7" y="387.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (222 samples, 0.34%)</title><rect x="729.7" y="371.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (222 samples, 0.34%)</title><rect x="729.7" y="355.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (222 samples, 0.34%)</title><rect x="729.7" y="339.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1210854148.accept (222 samples, 0.34%)</title><rect x="729.7" y="323.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (222 samples, 0.34%)</title><rect x="729.7" y="307.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (222 samples, 0.34%)</title><rect x="729.7" y="291.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (222 samples, 0.34%)</title><rect x="729.7" y="275.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (222 samples, 0.34%)</title><rect x="729.7" y="259.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$298/1308862923.apply (222 samples, 0.34%)</title><rect x="729.7" y="243.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (222 samples, 0.34%)</title><rect x="729.7" y="227.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (222 samples, 0.34%)</title><rect x="729.7" y="211.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="732.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (317 samples, 0.48%)</title><rect x="733.7" y="387.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.7" y="398.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.15%)</title><rect x="733.7" y="371.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="736.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (93 samples, 0.14%)</title><rect x="735.5" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.5" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (93 samples, 0.14%)</title><rect x="735.5" y="355.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="738.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (123 samples, 0.19%)</title><rect x="737.2" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (123 samples, 0.19%)</title><rect x="737.2" y="355.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.2" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (123 samples, 0.19%)</title><rect x="737.2" y="339.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="740.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (285 samples, 0.43%)</title><rect x="739.4" y="435.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (285 samples, 0.43%)</title><rect x="739.4" y="419.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (285 samples, 0.43%)</title><rect x="739.4" y="403.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (285 samples, 0.43%)</title><rect x="739.4" y="387.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (285 samples, 0.43%)</title><rect x="739.4" y="371.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (79 samples, 0.12%)</title><rect x="739.4" y="355.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (79 samples, 0.12%)</title><rect x="739.4" y="339.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="742.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (206 samples, 0.31%)</title><rect x="740.8" y="355.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (206 samples, 0.31%)</title><rect x="740.8" y="339.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (206 samples, 0.31%)</title><rect x="740.8" y="323.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="743.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (19 samples, 0.03%)</title><rect x="744.5" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (19 samples, 0.03%)</title><rect x="744.5" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (19 samples, 0.03%)</title><rect x="744.5" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (19 samples, 0.03%)</title><rect x="744.5" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (4,675 samples, 7.12%)</title><rect x="744.9" y="691.0" width="84.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.9" y="702.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (4,675 samples, 7.12%)</title><rect x="744.9" y="675.0" width="84.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.9" y="686.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (4,673 samples, 7.12%)</title><rect x="744.9" y="659.0" width="84.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.9" y="670.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (4,673 samples, 7.12%)</title><rect x="744.9" y="643.0" width="84.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.9" y="654.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (4,673 samples, 7.12%)</title><rect x="744.9" y="627.0" width="84.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.9" y="638.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (3,381 samples, 5.15%)</title><rect x="744.9" y="611.0" width="60.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.9" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,381 samples, 5.15%)</title><rect x="744.9" y="595.0" width="60.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.9" y="606.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$134/2132435101.get (3,381 samples, 5.15%)</title><rect x="744.9" y="579.0" width="60.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.9" y="590.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.lambda$get$0 (3,381 samples, 5.15%)</title><rect x="744.9" y="563.0" width="60.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.9" y="574.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.daoGetWrapper (3,381 samples, 5.15%)</title><rect x="744.9" y="547.0" width="60.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.9" y="558.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.getWithTimestamp (3,381 samples, 5.15%)</title><rect x="744.9" y="531.0" width="60.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.9" y="542.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (804 samples, 1.23%)</title><rect x="744.9" y="515.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.9" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (804 samples, 1.23%)</title><rect x="744.9" y="499.0" width="14.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.9" y="510.0"></text>
</g>
<g>
<title>byte[] (804 samples, 1.23%)</title><rect x="744.9" y="483.0" width="14.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="747.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (634 samples, 0.97%)</title><rect x="759.4" y="515.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (634 samples, 0.97%)</title><rect x="759.4" y="499.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.4" y="510.0"></text>
</g>
<g>
<title>byte[] (634 samples, 0.97%)</title><rect x="759.4" y="483.0" width="11.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="762.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.fromBytes (1,943 samples, 2.96%)</title><rect x="770.8" y="515.0" width="34.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.8" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,172 samples, 1.79%)</title><rect x="770.8" y="499.0" width="21.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.8" y="510.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,172 samples, 1.79%)</title><rect x="770.8" y="483.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.8" y="494.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,172 samples, 1.79%)</title><rect x="770.8" y="467.0" width="21.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="773.8" y="478.0">j..</text>
</g>
<g>
<title>ru.mail.polis.dao.RecordTimestamp (771 samples, 1.17%)</title><rect x="791.8" y="499.0" width="13.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="794.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,292 samples, 1.97%)</title><rect x="805.7" y="611.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.7" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,292 samples, 1.97%)</title><rect x="805.7" y="595.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.7" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,292 samples, 1.97%)</title><rect x="805.7" y="579.0" width="23.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.7" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,292 samples, 1.97%)</title><rect x="805.7" y="563.0" width="23.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.7" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,292 samples, 1.97%)</title><rect x="805.7" y="547.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.7" y="558.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$133/1011391191.apply (1,292 samples, 1.97%)</title><rect x="805.7" y="531.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.7" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.lambda$get$1 (1,292 samples, 1.97%)</title><rect x="805.7" y="515.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.7" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.fromBytes (1,292 samples, 1.97%)</title><rect x="805.7" y="499.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.7" y="510.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (771 samples, 1.17%)</title><rect x="805.7" y="483.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (771 samples, 1.17%)</title><rect x="805.7" y="467.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.7" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (771 samples, 1.17%)</title><rect x="805.7" y="451.0" width="13.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="808.7" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.RecordTimestamp (521 samples, 0.79%)</title><rect x="819.6" y="483.0" width="9.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="822.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3,396 samples, 5.17%)</title><rect x="828.9" y="691.0" width="61.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.9" y="702.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.12%)</title><rect x="828.9" y="675.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.12%)</title><rect x="828.9" y="659.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$245/2043642912.get$Lambda (48 samples, 0.07%)</title><rect x="828.9" y="643.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$245 (48 samples, 0.07%)</title><rect x="828.9" y="627.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="831.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$253/1137896921.get$Lambda (34 samples, 0.05%)</title><rect x="829.8" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$253 (34 samples, 0.05%)</title><rect x="829.8" y="627.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="832.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1447499999.linkToTargetMethod (57 samples, 0.09%)</title><rect x="830.4" y="675.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.09%)</title><rect x="830.4" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$246/1367138030.get$Lambda (57 samples, 0.09%)</title><rect x="830.4" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$246 (57 samples, 0.09%)</title><rect x="830.4" y="627.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="833.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (682 samples, 1.04%)</title><rect x="831.4" y="675.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/470483530.accept (574 samples, 0.87%)</title><rect x="831.4" y="659.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (574 samples, 0.87%)</title><rect x="831.4" y="643.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (574 samples, 0.87%)</title><rect x="831.4" y="627.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (574 samples, 0.87%)</title><rect x="831.4" y="611.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (574 samples, 0.87%)</title><rect x="831.4" y="595.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (574 samples, 0.87%)</title><rect x="831.4" y="579.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (574 samples, 0.87%)</title><rect x="831.4" y="563.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (574 samples, 0.87%)</title><rect x="831.4" y="547.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (574 samples, 0.87%)</title><rect x="831.4" y="531.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (574 samples, 0.87%)</title><rect x="831.4" y="515.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/1097621600.run (574 samples, 0.87%)</title><rect x="831.4" y="499.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (574 samples, 0.87%)</title><rect x="831.4" y="483.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (120 samples, 0.18%)</title><rect x="831.4" y="467.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (120 samples, 0.18%)</title><rect x="831.4" y="451.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (120 samples, 0.18%)</title><rect x="831.4" y="435.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (56 samples, 0.09%)</title><rect x="831.4" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (56 samples, 0.09%)</title><rect x="831.4" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (56 samples, 0.09%)</title><rect x="831.4" y="387.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (56 samples, 0.09%)</title><rect x="831.4" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (56 samples, 0.09%)</title><rect x="831.4" y="355.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="834.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (64 samples, 0.10%)</title><rect x="832.4" y="419.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (64 samples, 0.10%)</title><rect x="832.4" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (64 samples, 0.10%)</title><rect x="832.4" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 0.10%)</title><rect x="832.4" y="371.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (64 samples, 0.10%)</title><rect x="832.4" y="355.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (64 samples, 0.10%)</title><rect x="832.4" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (64 samples, 0.10%)</title><rect x="832.4" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (64 samples, 0.10%)</title><rect x="832.4" y="307.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="835.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (55 samples, 0.08%)</title><rect x="833.6" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (55 samples, 0.08%)</title><rect x="833.6" y="451.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (49 samples, 0.07%)</title><rect x="833.6" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (49 samples, 0.07%)</title><rect x="833.6" y="419.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (49 samples, 0.07%)</title><rect x="833.6" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/254749889.linkToTargetMethod (34 samples, 0.05%)</title><rect x="833.6" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (34 samples, 0.05%)</title><rect x="833.6" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="833.6" y="355.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (34 samples, 0.05%)</title><rect x="833.6" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (34 samples, 0.05%)</title><rect x="833.6" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="836.6" y="334.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.05%)</title><rect x="833.6" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="836.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (15 samples, 0.02%)</title><rect x="834.2" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.02%)</title><rect x="834.2" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.02%)</title><rect x="834.2" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/1843538067.get$Lambda (15 samples, 0.02%)</title><rect x="834.2" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (15 samples, 0.02%)</title><rect x="834.2" y="323.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="837.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (42 samples, 0.06%)</title><rect x="834.6" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.06%)</title><rect x="834.6" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.06%)</title><rect x="834.6" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/1843538067.get$Lambda (42 samples, 0.06%)</title><rect x="834.6" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (42 samples, 0.06%)</title><rect x="834.6" y="403.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="837.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (357 samples, 0.54%)</title><rect x="835.3" y="467.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (168 samples, 0.26%)</title><rect x="835.3" y="451.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (125 samples, 0.19%)</title><rect x="835.3" y="435.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (125 samples, 0.19%)</title><rect x="835.3" y="419.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="838.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (43 samples, 0.07%)</title><rect x="837.6" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (43 samples, 0.07%)</title><rect x="837.6" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (43 samples, 0.07%)</title><rect x="837.6" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="840.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (189 samples, 0.29%)</title><rect x="838.3" y="451.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$156/301299577.get (189 samples, 0.29%)</title><rect x="838.3" y="435.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (189 samples, 0.29%)</title><rect x="838.3" y="419.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (189 samples, 0.29%)</title><rect x="838.3" y="403.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (189 samples, 0.29%)</title><rect x="838.3" y="387.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.3" y="398.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.28%)</title><rect x="838.4" y="371.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/118468283.accept (108 samples, 0.16%)</title><rect x="841.7" y="659.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (108 samples, 0.16%)</title><rect x="841.7" y="643.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$246/1367138030.run (108 samples, 0.16%)</title><rect x="841.7" y="627.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (108 samples, 0.16%)</title><rect x="841.7" y="611.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (108 samples, 0.16%)</title><rect x="841.7" y="595.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (108 samples, 0.16%)</title><rect x="841.7" y="579.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (108 samples, 0.16%)</title><rect x="841.7" y="563.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (108 samples, 0.16%)</title><rect x="841.7" y="547.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="844.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (379 samples, 0.58%)</title><rect x="843.7" y="675.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.7" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (379 samples, 0.58%)</title><rect x="843.7" y="659.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="846.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (105 samples, 0.16%)</title><rect x="850.5" y="675.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (52 samples, 0.08%)</title><rect x="850.5" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (52 samples, 0.08%)</title><rect x="850.5" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (52 samples, 0.08%)</title><rect x="850.5" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (52 samples, 0.08%)</title><rect x="850.5" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (52 samples, 0.08%)</title><rect x="850.5" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (52 samples, 0.08%)</title><rect x="850.5" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.5" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (52 samples, 0.08%)</title><rect x="850.5" y="563.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="853.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (53 samples, 0.08%)</title><rect x="851.4" y="659.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (53 samples, 0.08%)</title><rect x="851.4" y="643.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="854.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (671 samples, 1.02%)</title><rect x="852.4" y="675.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$164/1337691867.run (361 samples, 0.55%)</title><rect x="852.4" y="659.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (361 samples, 0.55%)</title><rect x="852.4" y="643.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (361 samples, 0.55%)</title><rect x="852.4" y="627.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (361 samples, 0.55%)</title><rect x="852.4" y="611.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (361 samples, 0.55%)</title><rect x="852.4" y="595.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (361 samples, 0.55%)</title><rect x="852.4" y="579.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/1097621600.run (361 samples, 0.55%)</title><rect x="852.4" y="563.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (361 samples, 0.55%)</title><rect x="852.4" y="547.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (40 samples, 0.06%)</title><rect x="852.4" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (40 samples, 0.06%)</title><rect x="852.4" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (40 samples, 0.06%)</title><rect x="852.4" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (17 samples, 0.03%)</title><rect x="852.4" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (17 samples, 0.03%)</title><rect x="852.4" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (17 samples, 0.03%)</title><rect x="852.4" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (17 samples, 0.03%)</title><rect x="852.4" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (17 samples, 0.03%)</title><rect x="852.4" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="855.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.04%)</title><rect x="852.7" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.04%)</title><rect x="852.7" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.04%)</title><rect x="852.7" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.04%)</title><rect x="852.7" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (23 samples, 0.04%)</title><rect x="852.7" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (23 samples, 0.04%)</title><rect x="852.7" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (23 samples, 0.04%)</title><rect x="852.7" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (23 samples, 0.04%)</title><rect x="852.7" y="371.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="855.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (188 samples, 0.29%)</title><rect x="853.1" y="531.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (188 samples, 0.29%)</title><rect x="853.1" y="515.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (83 samples, 0.13%)</title><rect x="853.1" y="499.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (83 samples, 0.13%)</title><rect x="853.1" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (83 samples, 0.13%)</title><rect x="853.1" y="467.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/254749889.linkToTargetMethod (63 samples, 0.10%)</title><rect x="853.1" y="451.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702660825.invoke (63 samples, 0.10%)</title><rect x="853.1" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.10%)</title><rect x="853.1" y="419.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (63 samples, 0.10%)</title><rect x="853.1" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (63 samples, 0.10%)</title><rect x="853.1" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.1" y="398.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.10%)</title><rect x="853.1" y="371.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="856.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20 samples, 0.03%)</title><rect x="854.2" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.03%)</title><rect x="854.2" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.03%)</title><rect x="854.2" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/1843538067.get$Lambda (20 samples, 0.03%)</title><rect x="854.2" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (20 samples, 0.03%)</title><rect x="854.2" y="387.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="857.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (105 samples, 0.16%)</title><rect x="854.6" y="499.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 0.16%)</title><rect x="854.6" y="483.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 0.16%)</title><rect x="854.6" y="467.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (105 samples, 0.16%)</title><rect x="854.6" y="451.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (105 samples, 0.16%)</title><rect x="854.6" y="435.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (105 samples, 0.16%)</title><rect x="854.6" y="419.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (105 samples, 0.16%)</title><rect x="854.6" y="403.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (105 samples, 0.16%)</title><rect x="854.6" y="387.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (105 samples, 0.16%)</title><rect x="854.6" y="371.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="857.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (38 samples, 0.06%)</title><rect x="856.5" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.06%)</title><rect x="856.5" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.06%)</title><rect x="856.5" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/1843538067.get$Lambda (38 samples, 0.06%)</title><rect x="856.5" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (38 samples, 0.06%)</title><rect x="856.5" y="467.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="859.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (95 samples, 0.14%)</title><rect x="857.2" y="531.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (50 samples, 0.08%)</title><rect x="857.2" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="860.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.06%)</title><rect x="857.2" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.2" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.06%)</title><rect x="857.2" y="483.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="860.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (45 samples, 0.07%)</title><rect x="858.1" y="515.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$156/301299577.get (45 samples, 0.07%)</title><rect x="858.1" y="499.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (45 samples, 0.07%)</title><rect x="858.1" y="483.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (45 samples, 0.07%)</title><rect x="858.1" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (45 samples, 0.07%)</title><rect x="858.1" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.1" y="462.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.07%)</title><rect x="858.1" y="435.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$170/1697771214.run (310 samples, 0.47%)</title><rect x="858.9" y="659.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (310 samples, 0.47%)</title><rect x="858.9" y="643.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.16%)</title><rect x="858.9" y="627.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.16%)</title><rect x="858.9" y="611.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$258/656676728.get$Lambda (105 samples, 0.16%)</title><rect x="858.9" y="595.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$258 (105 samples, 0.16%)</title><rect x="858.9" y="579.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="861.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (205 samples, 0.31%)</title><rect x="860.8" y="627.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (205 samples, 0.31%)</title><rect x="860.8" y="611.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (204 samples, 0.31%)</title><rect x="860.8" y="595.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (204 samples, 0.31%)</title><rect x="860.8" y="579.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (204 samples, 0.31%)</title><rect x="860.8" y="563.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (204 samples, 0.31%)</title><rect x="860.8" y="547.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="863.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (692 samples, 1.05%)</title><rect x="864.5" y="675.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.5" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (110 samples, 0.17%)</title><rect x="864.5" y="659.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.5" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (110 samples, 0.17%)</title><rect x="864.5" y="643.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.5" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (110 samples, 0.17%)</title><rect x="864.5" y="627.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (110 samples, 0.17%)</title><rect x="864.5" y="611.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.5" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (110 samples, 0.17%)</title><rect x="864.5" y="595.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="867.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (582 samples, 0.89%)</title><rect x="866.4" y="659.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.12%)</title><rect x="866.4" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.12%)</title><rect x="866.4" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$303/1425590676.get$Lambda (77 samples, 0.12%)</title><rect x="866.4" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$303 (77 samples, 0.12%)</title><rect x="866.4" y="595.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="869.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (151 samples, 0.23%)</title><rect x="867.8" y="643.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.8" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (151 samples, 0.23%)</title><rect x="867.8" y="627.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="870.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (86 samples, 0.13%)</title><rect x="870.5" y="643.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.5" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (86 samples, 0.13%)</title><rect x="870.5" y="627.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.5" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (86 samples, 0.13%)</title><rect x="870.5" y="611.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="873.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (268 samples, 0.41%)</title><rect x="872.1" y="643.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.1" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (106 samples, 0.16%)</title><rect x="872.1" y="627.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="875.1" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (162 samples, 0.25%)</title><rect x="874.0" y="627.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.0" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (162 samples, 0.25%)</title><rect x="874.0" y="611.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="877.0" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (162 samples, 0.25%)</title><rect x="874.0" y="595.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="877.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (475 samples, 0.72%)</title><rect x="876.9" y="675.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.05%)</title><rect x="876.9" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="879.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.05%)</title><rect x="876.9" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$242/1020071389.get$Lambda (32 samples, 0.05%)</title><rect x="876.9" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="879.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$242 (32 samples, 0.05%)</title><rect x="876.9" y="611.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="879.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (246 samples, 0.37%)</title><rect x="877.5" y="659.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (108 samples, 0.16%)</title><rect x="877.5" y="643.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (108 samples, 0.16%)</title><rect x="877.5" y="627.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="880.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (138 samples, 0.21%)</title><rect x="879.4" y="643.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="882.4" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (138 samples, 0.21%)</title><rect x="879.4" y="627.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="882.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (197 samples, 0.30%)</title><rect x="881.9" y="659.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (197 samples, 0.30%)</title><rect x="881.9" y="643.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="884.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (126 samples, 0.19%)</title><rect x="885.4" y="675.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (126 samples, 0.19%)</title><rect x="885.4" y="659.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (126 samples, 0.19%)</title><rect x="885.4" y="643.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (125 samples, 0.19%)</title><rect x="885.4" y="627.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (48 samples, 0.07%)</title><rect x="885.4" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (48 samples, 0.07%)</title><rect x="885.4" y="595.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="888.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (77 samples, 0.12%)</title><rect x="886.3" y="611.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (77 samples, 0.12%)</title><rect x="886.3" y="595.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (77 samples, 0.12%)</title><rect x="886.3" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (77 samples, 0.12%)</title><rect x="886.3" y="563.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (77 samples, 0.12%)</title><rect x="886.3" y="547.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (77 samples, 0.12%)</title><rect x="886.3" y="531.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="889.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (47 samples, 0.07%)</title><rect x="887.7" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (47 samples, 0.07%)</title><rect x="887.7" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (47 samples, 0.07%)</title><rect x="887.7" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (47 samples, 0.07%)</title><rect x="887.7" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (45 samples, 0.07%)</title><rect x="887.7" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (45 samples, 0.07%)</title><rect x="887.7" y="595.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="890.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (80 samples, 0.12%)</title><rect x="888.5" y="675.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (80 samples, 0.12%)</title><rect x="888.5" y="659.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (80 samples, 0.12%)</title><rect x="888.5" y="643.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (80 samples, 0.12%)</title><rect x="888.5" y="627.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="891.5" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (195 samples, 0.30%)</title><rect x="890.0" y="691.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="893.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.createSession (195 samples, 0.30%)</title><rect x="890.0" y="675.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.createSession (195 samples, 0.30%)</title><rect x="890.0" y="659.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/StreamSession.&lt;init&gt; (184 samples, 0.28%)</title><rect x="890.2" y="643.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (184 samples, 0.28%)</title><rect x="890.2" y="627.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.2" y="638.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.26%)</title><rect x="890.4" y="611.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.4" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16,491 samples, 25.13%)</title><rect x="893.5" y="691.0" width="296.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.5" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (184 samples, 0.28%)</title><rect x="893.5" y="675.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.5" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (184 samples, 0.28%)</title><rect x="893.5" y="659.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="896.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (16,307 samples, 24.85%)</title><rect x="896.8" y="675.0" width="293.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.8" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16,307 samples, 24.85%)</title><rect x="896.8" y="659.0" width="293.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.8" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16,307 samples, 24.85%)</title><rect x="896.8" y="643.0" width="293.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.8" y="654.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (10,255 samples, 15.63%)</title><rect x="896.8" y="627.0" width="184.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.8" y="638.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (10,255 samples, 15.63%)</title><rect x="896.8" y="611.0" width="184.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.8" y="622.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (9,978 samples, 15.20%)</title><rect x="896.8" y="595.0" width="179.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.8" y="606.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (280 samples, 0.43%)</title><rect x="896.8" y="579.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (280 samples, 0.43%)</title><rect x="896.8" y="563.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (280 samples, 0.43%)</title><rect x="896.8" y="547.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.22%)</title><rect x="896.8" y="531.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="899.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (136 samples, 0.21%)</title><rect x="899.4" y="531.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.4" y="542.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.21%)</title><rect x="899.4" y="515.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="902.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (9,698 samples, 14.78%)</title><rect x="901.8" y="579.0" width="174.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.8" y="590.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (185 samples, 0.28%)</title><rect x="901.8" y="563.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (185 samples, 0.28%)</title><rect x="901.8" y="547.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (185 samples, 0.28%)</title><rect x="901.8" y="531.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.12%)</title><rect x="901.8" y="515.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="904.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (103 samples, 0.16%)</title><rect x="903.3" y="515.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.3" y="526.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.16%)</title><rect x="903.3" y="499.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="906.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.coordinateRequest (9,513 samples, 14.50%)</title><rect x="905.2" y="563.0" width="171.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.2" y="574.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (987 samples, 1.50%)</title><rect x="905.2" y="547.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (702 samples, 1.07%)</title><rect x="905.2" y="531.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (516 samples, 0.79%)</title><rect x="905.2" y="515.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (516 samples, 0.79%)</title><rect x="905.2" y="499.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.2" y="510.0"></text>
</g>
<g>
<title>byte[] (516 samples, 0.79%)</title><rect x="905.2" y="483.0" width="9.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="908.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (186 samples, 0.28%)</title><rect x="914.4" y="515.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.4" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (186 samples, 0.28%)</title><rect x="914.4" y="499.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="917.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (285 samples, 0.43%)</title><rect x="917.8" y="531.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (285 samples, 0.43%)</title><rect x="917.8" y="515.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (285 samples, 0.43%)</title><rect x="917.8" y="499.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.14%)</title><rect x="917.8" y="483.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="920.8" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (193 samples, 0.29%)</title><rect x="919.4" y="483.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.4" y="494.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.29%)</title><rect x="919.4" y="467.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="922.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.get (8,526 samples, 12.99%)</title><rect x="922.9" y="547.0" width="153.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.9" y="558.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java.lang.String[] (113 samples, 0.17%)</title><rect x="922.9" y="531.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="925.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (265 samples, 0.40%)</title><rect x="924.9" y="531.0" width="4.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="927.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (134 samples, 0.20%)</title><rect x="929.7" y="531.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (134 samples, 0.20%)</title><rect x="929.7" y="515.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (134 samples, 0.20%)</title><rect x="929.7" y="499.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (134 samples, 0.20%)</title><rect x="929.7" y="483.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="932.7" y="494.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.20%)</title><rect x="929.7" y="467.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="932.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (147 samples, 0.22%)</title><rect x="932.1" y="531.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (147 samples, 0.22%)</title><rect x="932.1" y="515.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$134/2132435101.get$Lambda (147 samples, 0.22%)</title><rect x="932.1" y="499.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.1" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.luckydaemon.RequestCoordinators$$Lambda$134 (147 samples, 0.22%)</title><rect x="932.1" y="483.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="935.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (256 samples, 0.39%)</title><rect x="934.8" y="531.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (256 samples, 0.39%)</title><rect x="934.8" y="515.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (256 samples, 0.39%)</title><rect x="934.8" y="499.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="937.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (274 samples, 0.42%)</title><rect x="939.4" y="531.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (274 samples, 0.42%)</title><rect x="939.4" y="515.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (274 samples, 0.42%)</title><rect x="939.4" y="499.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (274 samples, 0.42%)</title><rect x="939.4" y="483.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="942.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (274 samples, 0.42%)</title><rect x="939.4" y="467.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (274 samples, 0.42%)</title><rect x="939.4" y="451.0" width="4.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="942.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (248 samples, 0.38%)</title><rect x="944.3" y="531.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="947.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (248 samples, 0.38%)</title><rect x="944.3" y="515.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (123 samples, 0.19%)</title><rect x="944.3" y="499.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="947.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (125 samples, 0.19%)</title><rect x="946.5" y="499.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="949.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (115 samples, 0.18%)</title><rect x="948.7" y="531.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (115 samples, 0.18%)</title><rect x="948.7" y="515.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (61 samples, 0.09%)</title><rect x="948.7" y="499.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="951.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.08%)</title><rect x="949.8" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.08%)</title><rect x="949.8" y="483.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.08%)</title><rect x="949.8" y="467.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="952.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,401 samples, 5.18%)</title><rect x="950.8" y="531.0" width="61.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.8" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,401 samples, 5.18%)</title><rect x="950.8" y="515.0" width="61.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.8" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,401 samples, 5.18%)</title><rect x="950.8" y="499.0" width="61.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.8" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,401 samples, 5.18%)</title><rect x="950.8" y="483.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.8" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.04%)</title><rect x="950.8" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.04%)</title><rect x="950.8" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$130/693243027.get$Lambda (29 samples, 0.04%)</title><rect x="950.8" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$130 (29 samples, 0.04%)</title><rect x="950.8" y="419.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="953.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (121 samples, 0.18%)</title><rect x="951.3" y="467.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (121 samples, 0.18%)</title><rect x="951.3" y="451.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (63 samples, 0.10%)</title><rect x="951.3" y="435.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="954.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.09%)</title><rect x="952.5" y="435.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.09%)</title><rect x="952.5" y="419.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.09%)</title><rect x="952.5" y="403.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="955.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (119 samples, 0.18%)</title><rect x="953.5" y="467.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (119 samples, 0.18%)</title><rect x="953.5" y="451.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (61 samples, 0.09%)</title><rect x="953.5" y="435.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="956.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.09%)</title><rect x="954.6" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.09%)</title><rect x="954.6" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.09%)</title><rect x="954.6" y="403.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="957.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (79 samples, 0.12%)</title><rect x="955.7" y="467.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="958.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (148 samples, 0.23%)</title><rect x="957.1" y="467.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="960.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,750 samples, 2.67%)</title><rect x="959.7" y="467.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.7" y="478.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (186 samples, 0.28%)</title><rect x="959.7" y="451.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (139 samples, 0.21%)</title><rect x="959.7" y="435.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (51 samples, 0.08%)</title><rect x="959.7" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.7" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (51 samples, 0.08%)</title><rect x="959.7" y="403.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="962.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (88 samples, 0.13%)</title><rect x="960.6" y="419.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.6" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (88 samples, 0.13%)</title><rect x="960.6" y="403.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="963.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (47 samples, 0.07%)</title><rect x="962.2" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (47 samples, 0.07%)</title><rect x="962.2" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (47 samples, 0.07%)</title><rect x="962.2" y="403.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$98/71706941.get (47 samples, 0.07%)</title><rect x="962.2" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.2" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (47 samples, 0.07%)</title><rect x="962.2" y="371.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="965.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (720 samples, 1.10%)</title><rect x="963.1" y="451.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (720 samples, 1.10%)</title><rect x="963.1" y="435.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.1" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (34 samples, 0.05%)</title><rect x="963.1" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="966.1" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (46 samples, 0.07%)</title><rect x="963.7" y="419.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="966.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (82 samples, 0.12%)</title><rect x="964.5" y="419.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="967.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (25 samples, 0.04%)</title><rect x="966.0" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="969.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.08%)</title><rect x="966.4" y="419.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.08%)</title><rect x="966.4" y="403.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.get$Lambda (53 samples, 0.08%)</title><rect x="966.4" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.4" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (53 samples, 0.08%)</title><rect x="966.4" y="371.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="969.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (344 samples, 0.52%)</title><rect x="967.4" y="419.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (344 samples, 0.52%)</title><rect x="967.4" y="403.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (344 samples, 0.52%)</title><rect x="967.4" y="387.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (344 samples, 0.52%)</title><rect x="967.4" y="371.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (159 samples, 0.24%)</title><rect x="967.4" y="355.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (107 samples, 0.16%)</title><rect x="967.4" y="339.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.4" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (107 samples, 0.16%)</title><rect x="967.4" y="323.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (107 samples, 0.16%)</title><rect x="967.4" y="307.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (107 samples, 0.16%)</title><rect x="967.4" y="291.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (107 samples, 0.16%)</title><rect x="967.4" y="275.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (107 samples, 0.16%)</title><rect x="967.4" y="259.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (107 samples, 0.16%)</title><rect x="967.4" y="243.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (107 samples, 0.16%)</title><rect x="967.4" y="227.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="970.4" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (52 samples, 0.08%)</title><rect x="969.3" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.3" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (52 samples, 0.08%)</title><rect x="969.3" y="323.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="972.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.06%)</title><rect x="970.3" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.06%)</title><rect x="970.3" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.get$Lambda (39 samples, 0.06%)</title><rect x="970.3" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.3" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (39 samples, 0.06%)</title><rect x="970.3" y="307.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="973.3" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (81 samples, 0.12%)</title><rect x="971.0" y="355.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (81 samples, 0.12%)</title><rect x="971.0" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (35 samples, 0.05%)</title><rect x="971.0" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.05%)</title><rect x="971.0" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.05%)</title><rect x="971.0" y="291.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="974.0" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (46 samples, 0.07%)</title><rect x="971.6" y="323.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.6" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (46 samples, 0.07%)</title><rect x="971.6" y="307.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="974.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (65 samples, 0.10%)</title><rect x="972.4" y="355.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (65 samples, 0.10%)</title><rect x="972.4" y="339.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="975.4" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (54 samples, 0.08%)</title><rect x="973.6" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.6" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (54 samples, 0.08%)</title><rect x="973.6" y="403.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="976.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (82 samples, 0.12%)</title><rect x="974.5" y="419.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (82 samples, 0.12%)</title><rect x="974.5" y="403.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="977.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (32 samples, 0.05%)</title><rect x="976.0" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="979.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (581 samples, 0.89%)</title><rect x="976.6" y="451.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="979.6" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (581 samples, 0.89%)</title><rect x="976.6" y="435.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.6" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (536 samples, 0.82%)</title><rect x="976.6" y="419.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.6" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (536 samples, 0.82%)</title><rect x="976.6" y="403.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.6" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (536 samples, 0.82%)</title><rect x="976.6" y="387.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.6" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (124 samples, 0.19%)</title><rect x="976.6" y="371.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="979.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (142 samples, 0.22%)</title><rect x="978.8" y="371.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.8" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (142 samples, 0.22%)</title><rect x="978.8" y="355.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.8" y="366.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.22%)</title><rect x="978.8" y="339.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="981.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (270 samples, 0.41%)</title><rect x="981.4" y="371.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (270 samples, 0.41%)</title><rect x="981.4" y="355.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (105 samples, 0.16%)</title><rect x="981.4" y="339.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="984.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (165 samples, 0.25%)</title><rect x="983.3" y="339.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.3" y="350.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.25%)</title><rect x="983.3" y="323.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="986.3" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (45 samples, 0.07%)</title><rect x="986.2" y="419.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="989.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (87 samples, 0.13%)</title><rect x="987.0" y="451.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (87 samples, 0.13%)</title><rect x="987.0" y="435.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="990.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (144 samples, 0.22%)</title><rect x="988.6" y="451.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.6" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (46 samples, 0.07%)</title><rect x="988.6" y="435.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="991.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (36 samples, 0.05%)</title><rect x="989.4" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.05%)</title><rect x="989.4" y="419.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="992.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (62 samples, 0.09%)</title><rect x="990.1" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (62 samples, 0.09%)</title><rect x="990.1" y="419.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="993.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (759 samples, 1.16%)</title><rect x="991.2" y="467.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (24 samples, 0.04%)</title><rect x="991.2" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="994.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (125 samples, 0.19%)</title><rect x="991.6" y="451.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="994.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (28 samples, 0.04%)</title><rect x="993.9" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (28 samples, 0.04%)</title><rect x="993.9" y="435.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="996.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (582 samples, 0.89%)</title><rect x="994.4" y="451.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (582 samples, 0.89%)</title><rect x="994.4" y="435.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (61 samples, 0.09%)</title><rect x="994.4" y="419.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="997.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.07%)</title><rect x="995.5" y="419.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="998.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (43 samples, 0.07%)</title><rect x="996.4" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="999.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (248 samples, 0.38%)</title><rect x="997.1" y="419.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (248 samples, 0.38%)</title><rect x="997.1" y="403.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (248 samples, 0.38%)</title><rect x="997.1" y="387.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (248 samples, 0.38%)</title><rect x="997.1" y="371.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.1" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (248 samples, 0.38%)</title><rect x="997.1" y="355.0" width="4.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1000.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (97 samples, 0.15%)</title><rect x="1001.6" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1004.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (97 samples, 0.15%)</title><rect x="1001.6" y="403.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1004.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (29 samples, 0.04%)</title><rect x="1001.6" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (29 samples, 0.04%)</title><rect x="1001.6" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1004.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (68 samples, 0.10%)</title><rect x="1002.1" y="387.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (68 samples, 0.10%)</title><rect x="1002.1" y="371.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1005.1" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (84 samples, 0.13%)</title><rect x="1003.3" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (84 samples, 0.13%)</title><rect x="1003.3" y="403.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.3" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (84 samples, 0.13%)</title><rect x="1003.3" y="387.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1006.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (396 samples, 0.60%)</title><rect x="1004.8" y="467.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (69 samples, 0.11%)</title><rect x="1004.8" y="451.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (28 samples, 0.04%)</title><rect x="1004.8" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1007.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (41 samples, 0.06%)</title><rect x="1005.3" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (41 samples, 0.06%)</title><rect x="1005.3" y="419.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1008.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (41 samples, 0.06%)</title><rect x="1005.3" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (41 samples, 0.06%)</title><rect x="1005.3" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (41 samples, 0.06%)</title><rect x="1005.3" y="371.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1008.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.08%)</title><rect x="1006.1" y="451.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1009.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (276 samples, 0.42%)</title><rect x="1007.0" y="451.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.08%)</title><rect x="1007.0" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.08%)</title><rect x="1007.0" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1775918720.get$Lambda (26 samples, 0.04%)</title><rect x="1007.0" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$126 (26 samples, 0.04%)</title><rect x="1007.0" y="387.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1010.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/973729991.get$Lambda (27 samples, 0.04%)</title><rect x="1007.5" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (27 samples, 0.04%)</title><rect x="1007.5" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1010.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (223 samples, 0.34%)</title><rect x="1008.0" y="435.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (223 samples, 0.34%)</title><rect x="1008.0" y="419.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (137 samples, 0.21%)</title><rect x="1008.0" y="403.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1011.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.13%)</title><rect x="1010.4" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.13%)</title><rect x="1010.4" y="387.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.13%)</title><rect x="1010.4" y="371.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1013.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ClustersNodes.getReplics (21 samples, 0.03%)</title><rect x="1012.0" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.03%)</title><rect x="1012.0" y="515.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1015.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/HtttRequestBuilder.createGetHttpRequest (1,858 samples, 2.83%)</title><rect x="1012.3" y="531.0" width="33.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.3" y="542.0">ru..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (794 samples, 1.21%)</title><rect x="1012.3" y="515.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (74 samples, 0.11%)</title><rect x="1012.3" y="499.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1015.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (720 samples, 1.10%)</title><rect x="1013.7" y="499.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (691 samples, 1.05%)</title><rect x="1013.7" y="483.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (691 samples, 1.05%)</title><rect x="1013.7" y="467.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.7" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (25 samples, 0.04%)</title><rect x="1013.7" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1016.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.08%)</title><rect x="1014.1" y="451.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1017.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (84 samples, 0.13%)</title><rect x="1015.1" y="451.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1018.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (32 samples, 0.05%)</title><rect x="1016.6" y="451.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1019.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.09%)</title><rect x="1017.1" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1020.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.09%)</title><rect x="1017.1" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.get$Lambda (57 samples, 0.09%)</title><rect x="1017.1" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.1" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$107 (57 samples, 0.09%)</title><rect x="1017.1" y="403.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1020.1" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (53 samples, 0.08%)</title><rect x="1018.2" y="451.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1021.2" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (53 samples, 0.08%)</title><rect x="1018.2" y="435.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1021.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (291 samples, 0.44%)</title><rect x="1019.1" y="451.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (291 samples, 0.44%)</title><rect x="1019.1" y="435.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1022.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (291 samples, 0.44%)</title><rect x="1019.1" y="419.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.05%)</title><rect x="1019.1" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.05%)</title><rect x="1019.1" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.get$Lambda (32 samples, 0.05%)</title><rect x="1019.1" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.1" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$111 (32 samples, 0.05%)</title><rect x="1019.1" y="355.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1022.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (104 samples, 0.16%)</title><rect x="1019.7" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (104 samples, 0.16%)</title><rect x="1019.7" y="387.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (104 samples, 0.16%)</title><rect x="1019.7" y="371.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (104 samples, 0.16%)</title><rect x="1019.7" y="355.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (104 samples, 0.16%)</title><rect x="1019.7" y="339.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (104 samples, 0.16%)</title><rect x="1019.7" y="323.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (104 samples, 0.16%)</title><rect x="1019.7" y="307.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1022.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (104 samples, 0.16%)</title><rect x="1019.7" y="291.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (104 samples, 0.16%)</title><rect x="1019.7" y="275.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1022.7" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (85 samples, 0.13%)</title><rect x="1021.6" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.6" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (85 samples, 0.13%)</title><rect x="1021.6" y="387.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1024.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (46 samples, 0.07%)</title><rect x="1021.6" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.07%)</title><rect x="1021.6" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.07%)</title><rect x="1021.6" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1024.6" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (39 samples, 0.06%)</title><rect x="1022.4" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (39 samples, 0.06%)</title><rect x="1022.4" y="355.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1025.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (70 samples, 0.11%)</title><rect x="1023.1" y="403.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.1" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (70 samples, 0.11%)</title><rect x="1023.1" y="387.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1026.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (97 samples, 0.15%)</title><rect x="1024.4" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (97 samples, 0.15%)</title><rect x="1024.4" y="435.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1027.4" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (29 samples, 0.04%)</title><rect x="1026.1" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.1" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (29 samples, 0.04%)</title><rect x="1026.1" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.1" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (29 samples, 0.04%)</title><rect x="1026.1" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1029.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/HtttRequestBuilder.requestTemplate (1,064 samples, 1.62%)</title><rect x="1026.6" y="515.0" width="19.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (132 samples, 0.20%)</title><rect x="1026.6" y="499.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (132 samples, 0.20%)</title><rect x="1026.6" y="483.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/27084827.invoke (132 samples, 0.20%)</title><rect x="1026.6" y="467.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1029.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (132 samples, 0.20%)</title><rect x="1026.6" y="451.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (40 samples, 0.06%)</title><rect x="1026.6" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1029.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.06%)</title><rect x="1026.6" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1029.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (92 samples, 0.14%)</title><rect x="1027.3" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (92 samples, 0.14%)</title><rect x="1027.3" y="419.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.3" y="430.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.14%)</title><rect x="1027.3" y="403.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1030.3" y="414.0"></text>
</g>
<g>
<title>java/net/URI.create (577 samples, 0.88%)</title><rect x="1029.0" y="499.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.0" y="510.0"></text>
</g>
<g>
<title>java.net.URI (114 samples, 0.17%)</title><rect x="1029.0" y="483.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1032.0" y="494.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (463 samples, 0.71%)</title><rect x="1031.0" y="483.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.0" y="494.0"></text>
</g>
<g>
<title>java.net.URI$Parser (40 samples, 0.06%)</title><rect x="1031.0" y="467.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1034.0" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (423 samples, 0.64%)</title><rect x="1031.8" y="467.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1034.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (78 samples, 0.12%)</title><rect x="1031.8" y="451.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (78 samples, 0.12%)</title><rect x="1031.8" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.07%)</title><rect x="1031.8" y="419.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1034.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.05%)</title><rect x="1032.5" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1035.5" y="430.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.05%)</title><rect x="1032.5" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1035.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (345 samples, 0.53%)</title><rect x="1033.2" y="451.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (181 samples, 0.28%)</title><rect x="1033.2" y="435.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1036.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (181 samples, 0.28%)</title><rect x="1033.2" y="419.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.13%)</title><rect x="1033.2" y="403.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1036.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (94 samples, 0.14%)</title><rect x="1034.7" y="403.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.7" y="414.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.14%)</title><rect x="1034.7" y="387.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1037.7" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (164 samples, 0.25%)</title><rect x="1036.4" y="435.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (95 samples, 0.14%)</title><rect x="1036.4" y="419.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 0.14%)</title><rect x="1036.4" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.07%)</title><rect x="1036.4" y="387.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1039.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.08%)</title><rect x="1037.2" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.2" y="398.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.08%)</title><rect x="1037.2" y="371.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1040.2" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (69 samples, 0.11%)</title><rect x="1038.1" y="419.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.1" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (69 samples, 0.11%)</title><rect x="1038.1" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 0.11%)</title><rect x="1038.1" y="387.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.11%)</title><rect x="1038.1" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.04%)</title><rect x="1038.1" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1041.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.07%)</title><rect x="1038.6" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.6" y="366.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.07%)</title><rect x="1038.6" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1041.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (183 samples, 0.28%)</title><rect x="1039.4" y="499.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (69 samples, 0.11%)</title><rect x="1039.4" y="483.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1042.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (114 samples, 0.17%)</title><rect x="1040.6" y="483.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (28 samples, 0.04%)</title><rect x="1040.6" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1043.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (86 samples, 0.13%)</title><rect x="1041.1" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.1" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (86 samples, 0.13%)</title><rect x="1041.1" y="451.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1044.1" y="462.0"></text>
</g>
<g>
<title>java/time/Duration.of (30 samples, 0.05%)</title><rect x="1042.7" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.7" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.plus (30 samples, 0.05%)</title><rect x="1042.7" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.7" y="494.0"></text>
</g>
<g>
<title>java/time/Duration.plusSeconds (30 samples, 0.05%)</title><rect x="1042.7" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.7" y="478.0"></text>
</g>
<g>
<title>java/time/Duration.plus (30 samples, 0.05%)</title><rect x="1042.7" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.7" y="462.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (30 samples, 0.05%)</title><rect x="1042.7" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.7" y="446.0"></text>
</g>
<g>
<title>java/time/Duration.create (30 samples, 0.05%)</title><rect x="1042.7" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.7" y="430.0"></text>
</g>
<g>
<title>java.time.Duration (30 samples, 0.05%)</title><rect x="1042.7" y="403.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1045.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (142 samples, 0.22%)</title><rect x="1043.2" y="499.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (142 samples, 0.22%)</title><rect x="1043.2" y="483.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (142 samples, 0.22%)</title><rect x="1043.2" y="467.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.2" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.05%)</title><rect x="1043.2" y="451.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1046.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (42 samples, 0.06%)</title><rect x="1043.8" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.06%)</title><rect x="1043.8" y="435.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1046.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (69 samples, 0.11%)</title><rect x="1044.5" y="451.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (69 samples, 0.11%)</title><rect x="1044.5" y="435.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1047.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.countAckForGetMthod (656 samples, 1.00%)</title><rect x="1045.7" y="531.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (370 samples, 0.56%)</title><rect x="1045.7" y="515.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (370 samples, 0.56%)</title><rect x="1045.7" y="499.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (370 samples, 0.56%)</title><rect x="1045.7" y="483.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (370 samples, 0.56%)</title><rect x="1045.7" y="467.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (370 samples, 0.56%)</title><rect x="1045.7" y="451.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (370 samples, 0.56%)</title><rect x="1045.7" y="435.0" width="6.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1048.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (286 samples, 0.44%)</title><rect x="1052.4" y="515.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (286 samples, 0.44%)</title><rect x="1052.4" y="499.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1055.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (286 samples, 0.44%)</title><rect x="1052.4" y="483.0" width="5.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1055.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.processResponcessFromGetRequest (1,038 samples, 1.58%)</title><rect x="1057.5" y="531.0" width="18.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1060.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.mergeRecords (267 samples, 0.41%)</title><rect x="1057.5" y="515.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.5" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (90 samples, 0.14%)</title><rect x="1057.5" y="499.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (60 samples, 0.09%)</title><rect x="1057.5" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (60 samples, 0.09%)</title><rect x="1057.5" y="467.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1060.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (30 samples, 0.05%)</title><rect x="1058.6" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (30 samples, 0.05%)</title><rect x="1058.6" y="467.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1061.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (18 samples, 0.03%)</title><rect x="1059.2" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.03%)</title><rect x="1059.2" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="1059.2" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.2" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$305/529401364.get$Lambda (18 samples, 0.03%)</title><rect x="1059.2" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.2" y="462.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$305 (18 samples, 0.03%)</title><rect x="1059.2" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1062.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (62 samples, 0.09%)</title><rect x="1059.5" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.5" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (62 samples, 0.09%)</title><rect x="1059.5" y="483.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1062.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (97 samples, 0.15%)</title><rect x="1060.6" y="499.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.6" y="510.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (15 samples, 0.02%)</title><rect x="1060.6" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.02%)</title><rect x="1060.6" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.02%)</title><rect x="1060.6" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.6" y="462.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$306/1631148927.get$Lambda (15 samples, 0.02%)</title><rect x="1060.6" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.6" y="446.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$306 (15 samples, 0.02%)</title><rect x="1060.6" y="419.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1063.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (82 samples, 0.12%)</title><rect x="1060.9" y="483.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (60 samples, 0.09%)</title><rect x="1060.9" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (60 samples, 0.09%)</title><rect x="1060.9" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.02%)</title><rect x="1060.9" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (16 samples, 0.02%)</title><rect x="1060.9" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (16 samples, 0.02%)</title><rect x="1060.9" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (16 samples, 0.02%)</title><rect x="1060.9" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1063.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (25 samples, 0.04%)</title><rect x="1061.2" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (25 samples, 0.04%)</title><rect x="1061.2" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.2" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (25 samples, 0.04%)</title><rect x="1061.2" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1064.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (19 samples, 0.03%)</title><rect x="1061.6" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (19 samples, 0.03%)</title><rect x="1061.6" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.6" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (19 samples, 0.03%)</title><rect x="1061.6" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.6" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (19 samples, 0.03%)</title><rect x="1061.6" y="387.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1064.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (22 samples, 0.03%)</title><rect x="1061.9" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.9" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (22 samples, 0.03%)</title><rect x="1061.9" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1064.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.getResponse (771 samples, 1.17%)</title><rect x="1062.3" y="515.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.3" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (114 samples, 0.17%)</title><rect x="1062.3" y="499.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1065.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (478 samples, 0.73%)</title><rect x="1064.4" y="499.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.4" y="510.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.32%)</title><rect x="1064.4" y="483.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1067.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (145 samples, 0.22%)</title><rect x="1068.2" y="483.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1071.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String (122 samples, 0.19%)</title><rect x="1070.8" y="483.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1073.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.getValueInByteFormat (17 samples, 0.03%)</title><rect x="1073.0" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.0" y="510.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.03%)</title><rect x="1073.0" y="483.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1076.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.toBytes (162 samples, 0.25%)</title><rect x="1073.3" y="499.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (162 samples, 0.25%)</title><rect x="1073.3" y="483.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (162 samples, 0.25%)</title><rect x="1073.3" y="467.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.3" y="478.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.25%)</title><rect x="1073.3" y="451.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1076.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (277 samples, 0.42%)</title><rect x="1076.2" y="595.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (277 samples, 0.42%)</title><rect x="1076.2" y="579.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (277 samples, 0.42%)</title><rect x="1076.2" y="563.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.18%)</title><rect x="1076.2" y="547.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1079.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (161 samples, 0.25%)</title><rect x="1078.3" y="547.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.3" y="558.0"></text>
</g>
<g>
<title>byte[] (161 samples, 0.25%)</title><rect x="1078.3" y="531.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1081.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,330 samples, 2.03%)</title><rect x="1081.2" y="627.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.2" y="638.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (213 samples, 0.32%)</title><rect x="1081.2" y="611.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1084.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (412 samples, 0.63%)</title><rect x="1085.0" y="611.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1088.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (412 samples, 0.63%)</title><rect x="1085.0" y="595.0" width="7.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1088.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (705 samples, 1.07%)</title><rect x="1092.4" y="611.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (705 samples, 1.07%)</title><rect x="1092.4" y="595.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.4" y="606.0"></text>
</g>
<g>
<title>char[] (391 samples, 0.60%)</title><rect x="1092.4" y="579.0" width="7.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1095.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (127 samples, 0.19%)</title><rect x="1099.5" y="579.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1102.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (187 samples, 0.28%)</title><rect x="1101.7" y="579.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (187 samples, 0.28%)</title><rect x="1101.7" y="563.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (187 samples, 0.28%)</title><rect x="1101.7" y="547.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.7" y="558.0"></text>
</g>
<g>
<title>byte[] (187 samples, 0.28%)</title><rect x="1101.7" y="531.0" width="3.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1104.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (71 samples, 0.11%)</title><rect x="1105.1" y="627.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.1" y="638.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.11%)</title><rect x="1105.1" y="611.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1108.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (224 samples, 0.34%)</title><rect x="1106.4" y="627.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (224 samples, 0.34%)</title><rect x="1106.4" y="611.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (224 samples, 0.34%)</title><rect x="1106.4" y="595.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (137 samples, 0.21%)</title><rect x="1106.4" y="579.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1109.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.13%)</title><rect x="1108.8" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.8" y="590.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.13%)</title><rect x="1108.8" y="563.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1111.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,427 samples, 6.75%)</title><rect x="1110.4" y="627.0" width="79.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.4" y="638.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,427 samples, 6.75%)</title><rect x="1110.4" y="611.0" width="79.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.4" y="622.0">one/nio/u..</text>
</g>
<g>
<title>char[] (2,260 samples, 3.44%)</title><rect x="1110.4" y="595.0" width="40.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1113.4" y="606.0">cha..</text>
</g>
<g>
<title>java.lang.String (730 samples, 1.11%)</title><rect x="1151.0" y="595.0" width="13.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1154.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,437 samples, 2.19%)</title><rect x="1164.2" y="595.0" width="25.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.2" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,437 samples, 2.19%)</title><rect x="1164.2" y="579.0" width="25.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.2" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,437 samples, 2.19%)</title><rect x="1164.2" y="563.0" width="25.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.2" y="574.0">j..</text>
</g>
<g>
<title>byte[] (1,437 samples, 2.19%)</title><rect x="1164.2" y="547.0" width="25.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1167.2" y="558.0">b..</text>
</g>
</g>
</svg>

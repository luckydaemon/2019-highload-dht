<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2662" onload="init(evt)" viewBox="0 0 1200 2662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2645"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2645"> </text>
<g id="frames">
<g>
<title>all (4,639 samples, 100.00%)</title><rect x="10.0" y="2611.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2622.0">all</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="10.0" y="2595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="2606.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="10.3" y="2595.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="2606.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.02%)</title><rect x="10.5" y="2595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="2606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.09%)</title><rect x="10.8" y="2595.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.8" y="2606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.04%)</title><rect x="11.0" y="2579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.0" y="2590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="11.0" y="2563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="2574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="11.0" y="2547.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="2558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="11.0" y="2531.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.0" y="2542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="11.0" y="2515.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.0" y="2526.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="11.0" y="2499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.0" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="11.3" y="2563.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="14.3" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="11.3" y="2547.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="14.3" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="11.3" y="2531.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="14.3" y="2542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="11.5" y="2579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.5" y="2590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="11.5" y="2563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.5" y="2574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="11.5" y="2547.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.5" y="2558.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (14 samples, 0.30%)</title><rect x="11.8" y="2595.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.8" y="2606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="11.8" y="2579.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.8" y="2590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (13 samples, 0.28%)</title><rect x="12.0" y="2579.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.0" y="2590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (12 samples, 0.26%)</title><rect x="12.3" y="2563.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.3" y="2574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.26%)</title><rect x="12.3" y="2547.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.3" y="2558.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.04%)</title><rect x="12.3" y="2531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.3" y="2542.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="12.5" y="2515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.5" y="2526.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (2 samples, 0.04%)</title><rect x="12.8" y="2531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.8" y="2542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (6 samples, 0.13%)</title><rect x="13.3" y="2531.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.3" y="2542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.13%)</title><rect x="13.3" y="2515.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.3" y="2526.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="13.8" y="2499.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.8" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="13.8" y="2483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.8" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="13.8" y="2467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="16.8" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="13.8" y="2451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.8" y="2462.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.04%)</title><rect x="14.1" y="2499.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.1" y="2510.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.04%)</title><rect x="14.1" y="2483.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.1" y="2494.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="14.1" y="2467.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.1" y="2478.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="14.1" y="2451.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.1" y="2462.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.02%)</title><rect x="14.1" y="2435.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.1" y="2446.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.02%)</title><rect x="14.1" y="2419.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.1" y="2430.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="14.3" y="2467.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.3" y="2478.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="14.3" y="2451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.3" y="2462.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="14.3" y="2435.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.3" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="14.3" y="2419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="17.3" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="14.3" y="2403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="17.3" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="14.3" y="2387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="17.3" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="14.6" y="2499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="17.6" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="14.6" y="2483.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="17.6" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="14.6" y="2467.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="17.6" y="2478.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="14.8" y="2531.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.8" y="2542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (36 samples, 0.78%)</title><rect x="15.3" y="2595.0" width="9.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.3" y="2606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (33 samples, 0.71%)</title><rect x="15.6" y="2579.0" width="8.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.6" y="2590.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="15.6" y="2563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.6" y="2574.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (13 samples, 0.28%)</title><rect x="15.9" y="2563.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.9" y="2574.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (11 samples, 0.24%)</title><rect x="15.9" y="2547.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.9" y="2558.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="18.6" y="2547.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="21.6" y="2558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="18.6" y="2531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="21.6" y="2542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="18.6" y="2515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.6" y="2526.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="18.6" y="2499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.6" y="2510.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="18.6" y="2483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="21.6" y="2494.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="18.6" y="2467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="21.6" y="2478.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="18.9" y="2547.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="21.9" y="2558.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (18 samples, 0.39%)</title><rect x="19.2" y="2563.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.2" y="2574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (7 samples, 0.15%)</title><rect x="22.0" y="2547.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.0" y="2558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (7 samples, 0.15%)</title><rect x="22.0" y="2531.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.0" y="2542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.15%)</title><rect x="22.0" y="2515.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.0" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="23.7" y="2563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.7" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="23.7" y="2547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.7" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="23.7" y="2531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="26.7" y="2542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="24.0" y="2579.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="27.0" y="2590.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="24.0" y="2563.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.0" y="2574.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="24.2" y="2579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.2" y="2590.0"></text>
</g>
<g>
<title>[not_walkable] (4 samples, 0.09%)</title><rect x="24.5" y="2595.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="27.5" y="2606.0"></text>
</g>
<g>
<title>[not_walkable_Java] (46 samples, 0.99%)</title><rect x="25.5" y="2595.0" width="11.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="28.5" y="2606.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.04%)</title><rect x="25.5" y="2579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="28.5" y="2590.0"></text>
</g>
<g>
<title>G1BarrierSet::write_ref_array_work(MemRegion) (1 samples, 0.02%)</title><rect x="26.0" y="2579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.0" y="2590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.02%)</title><rect x="26.3" y="2579.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.3" y="2590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.13%)</title><rect x="26.5" y="2579.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.5" y="2590.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.13%)</title><rect x="26.5" y="2563.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="29.5" y="2574.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="26.5" y="2547.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.5" y="2558.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.11%)</title><rect x="26.8" y="2547.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.8" y="2558.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (1 samples, 0.02%)</title><rect x="26.8" y="2531.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.8" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="26.8" y="2515.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.8" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="26.8" y="2499.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="29.8" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="26.8" y="2483.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="29.8" y="2494.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.04%)</title><rect x="27.0" y="2531.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="30.0" y="2542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="27.3" y="2515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="30.3" y="2526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="27.3" y="2499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="30.3" y="2510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="27.3" y="2483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="30.3" y="2494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="27.3" y="2467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="30.3" y="2478.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="27.3" y="2451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="30.3" y="2462.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="27.3" y="2435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.3" y="2446.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.02%)</title><rect x="27.3" y="2419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="30.3" y="2430.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.02%)</title><rect x="27.6" y="2531.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="30.6" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="27.6" y="2515.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.6" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="27.6" y="2499.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="30.6" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="27.6" y="2483.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.6" y="2494.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="27.8" y="2531.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="30.8" y="2542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="28.1" y="2579.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.1" y="2590.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.04%)</title><rect x="28.3" y="2579.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="31.3" y="2590.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.71%)</title><rect x="28.8" y="2579.0" width="8.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="31.8" y="2590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="28.8" y="2563.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="31.8" y="2574.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="28.8" y="2547.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="31.8" y="2558.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="29.1" y="2547.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="32.1" y="2558.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.13%)</title><rect x="29.6" y="2563.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="32.6" y="2574.0"></text>
</g>
<g>
<title>clock_gettime (24 samples, 0.52%)</title><rect x="31.1" y="2563.0" width="6.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="34.1" y="2574.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="32.4" y="2547.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="35.4" y="2558.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (16 samples, 0.34%)</title><rect x="32.6" y="2547.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="35.6" y="2558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="35.9" y="2531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="38.9" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="35.9" y="2515.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="38.9" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="35.9" y="2499.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="38.9" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="36.7" y="2547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="39.7" y="2558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="36.7" y="2531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="39.7" y="2542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="36.7" y="2515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="39.7" y="2526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="37.2" y="2595.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="40.2" y="2606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="37.2" y="2579.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="40.2" y="2590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="37.2" y="2563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="40.2" y="2574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="37.2" y="2547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="40.2" y="2558.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="37.5" y="2579.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="40.5" y="2590.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.02%)</title><rect x="37.7" y="2579.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="40.7" y="2590.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (1 samples, 0.02%)</title><rect x="37.7" y="2563.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="40.7" y="2574.0"></text>
</g>
<g>
<title>[unknown_Java] (70 samples, 1.51%)</title><rect x="38.0" y="2595.0" width="17.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="41.0" y="2606.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (3 samples, 0.06%)</title><rect x="40.3" y="2579.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.3" y="2590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="41.0" y="2579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="44.0" y="2590.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.80%)</title><rect x="41.3" y="2579.0" width="9.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="44.3" y="2590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="41.3" y="2563.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.3" y="2574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="41.3" y="2547.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="44.3" y="2558.0"></text>
</g>
<g>
<title>clock_gettime (35 samples, 0.75%)</title><rect x="41.5" y="2563.0" width="8.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="44.5" y="2574.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (35 samples, 0.75%)</title><rect x="41.5" y="2547.0" width="8.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="44.5" y="2558.0"></text>
</g>
<g>
<title>[vdso] (33 samples, 0.71%)</title><rect x="42.1" y="2531.0" width="8.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="45.1" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (7 samples, 0.15%)</title><rect x="48.7" y="2515.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.7" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (7 samples, 0.15%)</title><rect x="48.7" y="2499.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.7" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.15%)</title><rect x="48.7" y="2483.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.7" y="2494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="50.4" y="2563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="53.4" y="2574.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.06%)</title><rect x="50.7" y="2579.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="53.7" y="2590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="51.2" y="2563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.2" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="51.2" y="2547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="54.2" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="51.2" y="2531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="54.2" y="2542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (14 samples, 0.30%)</title><rect x="51.5" y="2579.0" width="3.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="54.5" y="2590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.30%)</title><rect x="51.5" y="2563.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.5" y="2574.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.30%)</title><rect x="51.5" y="2547.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.5" y="2558.0"></text>
</g>
<g>
<title>sys_futex (13 samples, 0.28%)</title><rect x="51.7" y="2531.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="54.7" y="2542.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.28%)</title><rect x="51.7" y="2515.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="54.7" y="2526.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.28%)</title><rect x="51.7" y="2499.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="54.7" y="2510.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="51.7" y="2483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="54.7" y="2494.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.02%)</title><rect x="52.0" y="2483.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.0" y="2494.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.24%)</title><rect x="52.2" y="2483.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="55.2" y="2494.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.24%)</title><rect x="52.2" y="2467.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="55.2" y="2478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.24%)</title><rect x="52.2" y="2451.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="55.2" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="55.0" y="2579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="58.0" y="2590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="55.0" y="2563.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="58.0" y="2574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="55.0" y="2547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.0" y="2558.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="55.8" y="2595.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="58.8" y="2606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="55.8" y="2579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.8" y="2590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="55.8" y="2563.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.8" y="2574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="55.8" y="2547.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.8" y="2558.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.15%)</title><rect x="56.0" y="2595.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="59.0" y="2606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.13%)</title><rect x="56.3" y="2579.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.3" y="2590.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.11%)</title><rect x="56.3" y="2563.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.3" y="2574.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.11%)</title><rect x="56.3" y="2547.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="59.3" y="2558.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="56.5" y="2531.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="59.5" y="2542.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.09%)</title><rect x="56.5" y="2515.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="59.5" y="2526.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.06%)</title><rect x="56.8" y="2499.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.8" y="2510.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="56.8" y="2483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="59.8" y="2494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="56.8" y="2467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.8" y="2478.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="57.1" y="2483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="60.1" y="2494.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="57.1" y="2467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.1" y="2478.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="57.1" y="2451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="60.1" y="2462.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="57.6" y="2563.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="60.6" y="2574.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="57.8" y="2595.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="60.8" y="2606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,856 samples, 40.01%)</title><rect x="58.1" y="2595.0" width="472.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.1" y="2606.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,856 samples, 40.01%)</title><rect x="58.1" y="2579.0" width="472.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.1" y="2590.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,856 samples, 40.01%)</title><rect x="58.1" y="2563.0" width="472.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.1" y="2574.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (8 samples, 0.17%)</title><rect x="58.6" y="2547.0" width="2.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="61.6" y="2558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="60.4" y="2531.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="63.4" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="60.4" y="2515.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="63.4" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="60.4" y="2499.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.4" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (555 samples, 11.96%)</title><rect x="60.6" y="2547.0" width="141.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.6" y="2558.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (552 samples, 11.90%)</title><rect x="61.4" y="2531.0" width="140.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.4" y="2542.0">java/util/concurre..</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="61.9" y="2515.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="64.9" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="62.1" y="2499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="65.1" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="62.1" y="2483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="65.1" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="62.1" y="2467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.1" y="2478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (548 samples, 11.81%)</title><rect x="62.4" y="2515.0" width="139.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.4" y="2526.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="62.7" y="2499.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.7" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.11%)</title><rect x="62.9" y="2499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.9" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.11%)</title><rect x="62.9" y="2483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.9" y="2494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1775918720.apply (2 samples, 0.04%)</title><rect x="63.7" y="2467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.7" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/1775918720.apply (537 samples, 11.58%)</title><rect x="64.2" y="2499.0" width="136.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.2" y="2510.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (537 samples, 11.58%)</title><rect x="64.2" y="2483.0" width="136.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.2" y="2494.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (537 samples, 11.58%)</title><rect x="64.2" y="2467.0" width="136.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.2" y="2478.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="64.2" y="2451.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.2" y="2462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="64.2" y="2435.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.2" y="2446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="64.2" y="2419.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.2" y="2430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.11%)</title><rect x="64.4" y="2451.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.4" y="2462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="65.2" y="2435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.2" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="65.2" y="2419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.2" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="65.2" y="2403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.2" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="65.5" y="2435.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="68.5" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="65.5" y="2419.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.5" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="65.5" y="2403.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.5" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (462 samples, 9.96%)</title><rect x="65.7" y="2451.0" width="117.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.7" y="2462.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (462 samples, 9.96%)</title><rect x="65.7" y="2435.0" width="117.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.7" y="2446.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (459 samples, 9.89%)</title><rect x="66.5" y="2419.0" width="116.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.5" y="2430.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (202 samples, 4.35%)</title><rect x="66.5" y="2403.0" width="51.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.5" y="2414.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (201 samples, 4.33%)</title><rect x="66.7" y="2387.0" width="51.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.7" y="2398.0">java/..</text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="66.7" y="2371.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="69.7" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (194 samples, 4.18%)</title><rect x="67.5" y="2371.0" width="49.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.5" y="2382.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/387510293.apply (194 samples, 4.18%)</title><rect x="67.5" y="2355.0" width="49.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.5" y="2366.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.04%)</title><rect x="67.5" y="2339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.5" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (192 samples, 4.14%)</title><rect x="68.0" y="2339.0" width="48.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.0" y="2350.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (192 samples, 4.14%)</title><rect x="68.0" y="2323.0" width="48.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.0" y="2334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1069917486.apply (192 samples, 4.14%)</title><rect x="68.0" y="2307.0" width="48.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.0" y="2318.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (192 samples, 4.14%)</title><rect x="68.0" y="2291.0" width="48.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.0" y="2302.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="68.0" y="2275.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.0" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="68.0" y="2259.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="71.0" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="68.0" y="2243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="71.0" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="68.0" y="2227.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="71.0" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="68.2" y="2275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.2" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="68.2" y="2259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.2" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (190 samples, 4.10%)</title><rect x="68.5" y="2275.0" width="48.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.5" y="2286.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="68.5" y="2259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.5" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="68.5" y="2243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.5" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="68.5" y="2227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.5" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (143 samples, 3.08%)</title><rect x="68.8" y="2259.0" width="36.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.8" y="2270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (140 samples, 3.02%)</title><rect x="69.3" y="2243.0" width="35.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.3" y="2254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (8 samples, 0.17%)</title><rect x="69.5" y="2227.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.5" y="2238.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="69.8" y="2211.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="72.8" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/505961626.apply (6 samples, 0.13%)</title><rect x="70.0" y="2211.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.0" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="71.3" y="2195.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.3" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="71.3" y="2179.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="74.3" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="71.3" y="2163.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.3" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/505961626.apply (129 samples, 2.78%)</title><rect x="71.6" y="2227.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.6" y="2238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (129 samples, 2.78%)</title><rect x="71.6" y="2211.0" width="32.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.6" y="2222.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="71.8" y="2195.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.8" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="72.1" y="2179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.1" y="2190.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="72.6" y="2163.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="75.6" y="2174.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="72.6" y="2147.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="75.6" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="72.6" y="2131.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="75.6" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.11%)</title><rect x="72.8" y="2195.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.8" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.11%)</title><rect x="72.8" y="2179.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.8" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.11%)</title><rect x="72.8" y="2163.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.8" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.09%)</title><rect x="73.1" y="2147.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.1" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="73.1" y="2131.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.1" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="73.1" y="2115.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.1" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.02%)</title><rect x="73.1" y="2099.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.1" y="2110.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="73.1" y="2083.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="76.1" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.06%)</title><rect x="73.3" y="2131.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.3" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="73.6" y="2115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.6" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="73.6" y="2099.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.6" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="73.6" y="2083.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.6" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.04%)</title><rect x="73.6" y="2067.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.6" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.04%)</title><rect x="73.6" y="2051.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.6" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.04%)</title><rect x="73.6" y="2035.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.6" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.04%)</title><rect x="73.6" y="2019.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.6" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.04%)</title><rect x="73.6" y="2003.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.6" y="2014.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.04%)</title><rect x="73.6" y="1987.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.6" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.04%)</title><rect x="73.6" y="1971.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.6" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.04%)</title><rect x="73.6" y="1955.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.6" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.04%)</title><rect x="73.6" y="1939.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.6" y="1950.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.04%)</title><rect x="73.6" y="1923.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.6" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.04%)</title><rect x="73.6" y="1907.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.6" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="73.6" y="1891.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="76.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="73.6" y="1875.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="76.6" y="1886.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.04%)</title><rect x="73.6" y="1859.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="76.6" y="1870.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="73.6" y="1843.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.6" y="1854.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="73.6" y="1827.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.6" y="1838.0"></text>
</g>
<g>
<title>sys_writev (2 samples, 0.04%)</title><rect x="73.6" y="1811.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.6" y="1822.0"></text>
</g>
<g>
<title>do_writev (2 samples, 0.04%)</title><rect x="73.6" y="1795.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.6" y="1806.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.04%)</title><rect x="73.6" y="1779.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.6" y="1790.0"></text>
</g>
<g>
<title>do_iter_write (2 samples, 0.04%)</title><rect x="73.6" y="1763.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.6" y="1774.0"></text>
</g>
<g>
<title>do_iter_readv_writev (2 samples, 0.04%)</title><rect x="73.6" y="1747.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="1758.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.04%)</title><rect x="73.6" y="1731.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.6" y="1742.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.04%)</title><rect x="73.6" y="1715.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.6" y="1726.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.04%)</title><rect x="73.6" y="1699.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="76.6" y="1710.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.04%)</title><rect x="73.6" y="1683.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.6" y="1694.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.04%)</title><rect x="73.6" y="1667.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.6" y="1678.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.04%)</title><rect x="73.6" y="1651.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.6" y="1662.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.04%)</title><rect x="73.6" y="1635.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.6" y="1646.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.04%)</title><rect x="73.6" y="1619.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.6" y="1630.0"></text>
</g>
<g>
<title>tcp_transmit_skb (2 samples, 0.04%)</title><rect x="73.6" y="1603.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.6" y="1614.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.04%)</title><rect x="73.6" y="1587.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.6" y="1598.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.04%)</title><rect x="73.6" y="1571.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.6" y="1582.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.04%)</title><rect x="73.6" y="1555.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="76.6" y="1566.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.04%)</title><rect x="73.6" y="1539.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="76.6" y="1550.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.04%)</title><rect x="73.6" y="1523.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="76.6" y="1534.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="73.6" y="1507.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.6" y="1518.0"></text>
</g>
<g>
<title>do_softirq.part.17 (1 samples, 0.02%)</title><rect x="73.6" y="1491.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.6" y="1502.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="73.6" y="1475.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="76.6" y="1486.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="73.6" y="1459.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="76.6" y="1470.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="73.6" y="1443.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.6" y="1454.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="73.6" y="1427.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="76.6" y="1438.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="73.6" y="1411.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="1422.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="73.6" y="1395.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.6" y="1406.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="73.6" y="1379.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.6" y="1390.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="73.6" y="1363.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="76.6" y="1374.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="73.6" y="1347.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.6" y="1358.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="73.6" y="1331.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="76.6" y="1342.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="73.6" y="1315.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.6" y="1326.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="73.6" y="1299.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="76.6" y="1310.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="73.6" y="1283.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.6" y="1294.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="73.6" y="1267.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.6" y="1278.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="73.6" y="1251.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="76.6" y="1262.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="73.8" y="1507.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.8" y="1518.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="73.8" y="1491.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.8" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (37 samples, 0.80%)</title><rect x="74.1" y="2195.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.1" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (37 samples, 0.80%)</title><rect x="74.1" y="2179.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.1" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.11%)</title><rect x="74.1" y="2163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.1" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.11%)</title><rect x="74.1" y="2147.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.1" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.09%)</title><rect x="74.1" y="2131.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.1" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="74.9" y="2115.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.9" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="74.9" y="2099.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.9" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="75.1" y="2131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.1" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32 samples, 0.69%)</title><rect x="75.4" y="2163.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.4" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32 samples, 0.69%)</title><rect x="75.4" y="2147.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.4" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (29 samples, 0.63%)</title><rect x="75.4" y="2131.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.4" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (29 samples, 0.63%)</title><rect x="75.4" y="2115.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.4" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29 samples, 0.63%)</title><rect x="75.4" y="2099.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.4" y="2110.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (27 samples, 0.58%)</title><rect x="75.6" y="2083.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.6" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (17 samples, 0.37%)</title><rect x="77.9" y="2067.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.9" y="2078.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="77.9" y="2051.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="80.9" y="2062.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.34%)</title><rect x="78.2" y="2051.0" width="4.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.2" y="2062.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.04%)</title><rect x="78.2" y="2035.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="81.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.2" y="2019.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="81.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.2" y="2003.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="81.2" y="2014.0"></text>
</g>
<g>
<title>__write (2 samples, 0.04%)</title><rect x="78.2" y="1987.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="81.2" y="1998.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="78.2" y="1971.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.2" y="1982.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="78.2" y="1955.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="81.2" y="1966.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="78.2" y="1939.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.2" y="1950.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="78.4" y="1939.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="81.4" y="1950.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="78.4" y="1923.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="81.4" y="1934.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="78.4" y="1907.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="81.4" y="1918.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="78.4" y="1891.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.4" y="1902.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="78.4" y="1875.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.4" y="1886.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="78.4" y="1859.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.4" y="1870.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="78.4" y="1843.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="81.4" y="1854.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="78.4" y="1827.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.4" y="1838.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="78.7" y="2035.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="81.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="2019.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="81.7" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="2003.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.7" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1987.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="81.7" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1971.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.7" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1955.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1939.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="81.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1923.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="81.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1907.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="81.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1891.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="81.7" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1875.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="81.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1859.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="81.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1843.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="81.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1827.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1811.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="81.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1795.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="81.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1779.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.7" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1763.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.7" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1747.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="81.7" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1731.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="81.7" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1715.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="81.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1699.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="81.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1683.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.7" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1667.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="81.7" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1651.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="81.7" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1635.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.7" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1619.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="81.7" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1603.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="81.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1587.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="81.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1571.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.7" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1555.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="81.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1539.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="81.7" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1523.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="81.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1507.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="81.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1491.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="81.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1475.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="81.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1459.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1443.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="81.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1427.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="81.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1411.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="81.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1395.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1379.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="81.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1363.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="81.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1347.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="81.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1331.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="81.7" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1315.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="81.7" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1299.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="81.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1283.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1267.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="81.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1251.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="81.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1235.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1219.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="81.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1203.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="81.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1187.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1171.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1155.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1139.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1123.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="81.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1107.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="81.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1091.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="81.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1075.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="81.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1059.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="81.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1043.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="81.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1027.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="1011.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="81.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="995.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="979.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="81.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="963.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="947.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="931.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="81.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="915.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="899.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="81.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="883.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="867.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="851.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="81.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="835.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="81.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="819.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="803.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="81.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="787.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="771.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="755.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="81.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="739.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="81.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="723.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="81.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="707.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="691.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="81.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="675.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="81.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="659.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="81.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="643.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="81.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="627.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="81.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="611.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="81.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="595.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="81.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="579.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="563.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="81.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="547.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="81.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="531.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="81.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="515.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="81.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="499.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="483.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="467.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="81.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="451.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="81.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="435.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="419.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="403.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="81.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="387.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.7" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="371.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="81.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="355.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="81.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="339.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="323.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="81.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="307.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="291.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="81.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="275.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="259.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="243.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="81.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="227.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="78.7" y="211.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="81.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.7" y="195.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="81.7" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.7" y="179.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="81.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.7" y="163.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="81.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.7" y="147.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.7" y="131.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.7" y="142.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="78.7" y="115.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.7" y="126.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="78.7" y="99.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="81.7" y="110.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="78.7" y="83.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.7" y="94.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="78.7" y="67.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.7" y="78.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="78.7" y="51.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.7" y="62.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="78.7" y="35.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.7" y="46.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="78.9" y="195.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="81.9" y="206.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="78.9" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.9" y="190.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="78.9" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.9" y="174.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="78.9" y="147.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="81.9" y="158.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="78.9" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.9" y="142.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="78.9" y="115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.9" y="126.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="78.9" y="99.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="81.9" y="110.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="78.9" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="81.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="78.9" y="67.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="78.9" y="51.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="78.9" y="35.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="81.9" y="46.0"></text>
</g>
<g>
<title>__write (11 samples, 0.24%)</title><rect x="79.2" y="2019.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="82.2" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.24%)</title><rect x="79.2" y="2003.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="82.2" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.24%)</title><rect x="79.2" y="1987.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="82.2" y="1998.0"></text>
</g>
<g>
<title>sys_write (11 samples, 0.24%)</title><rect x="79.2" y="1971.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.2" y="1982.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.24%)</title><rect x="79.2" y="1955.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.2" y="1966.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.24%)</title><rect x="79.2" y="1939.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.2" y="1950.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.04%)</title><rect x="79.2" y="1923.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="82.2" y="1934.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.19%)</title><rect x="79.7" y="1923.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="82.7" y="1934.0"></text>
</g>
<g>
<title>pipe_write (9 samples, 0.19%)</title><rect x="79.7" y="1907.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.7" y="1918.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.15%)</title><rect x="79.7" y="1891.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="82.7" y="1902.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.15%)</title><rect x="79.7" y="1875.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="82.7" y="1886.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.15%)</title><rect x="79.7" y="1859.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="82.7" y="1870.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="81.5" y="1891.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="84.5" y="1902.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="81.7" y="1891.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="84.7" y="1902.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="81.7" y="1875.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="84.7" y="1886.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="82.0" y="2035.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="85.0" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="82.0" y="2019.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="85.0" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="82.0" y="2003.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.0" y="2014.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="82.0" y="1987.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="85.0" y="1998.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="82.0" y="1971.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.0" y="1982.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="82.0" y="1955.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.0" y="1966.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="82.0" y="1939.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.0" y="1950.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="82.0" y="1923.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="85.0" y="1934.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="82.0" y="1907.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.0" y="1918.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="82.0" y="1891.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.0" y="1902.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="82.0" y="1875.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="85.0" y="1886.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="82.2" y="2067.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.2" y="2078.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="82.2" y="2051.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.2" y="2062.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="82.2" y="2035.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.2" y="2046.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="82.5" y="2083.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.5" y="2094.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="82.5" y="2067.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.5" y="2078.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="82.5" y="2051.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="82.7" y="2131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.7" y="2142.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="83.0" y="2115.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.0" y="2126.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="83.0" y="2099.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="86.0" y="2110.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="83.0" y="2083.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.0" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (1 samples, 0.02%)</title><rect x="83.3" y="2131.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.3" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="83.3" y="2115.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.3" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (81 samples, 1.75%)</title><rect x="83.5" y="2195.0" width="20.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.5" y="2206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.06%)</title><rect x="84.0" y="2179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.06%)</title><rect x="84.0" y="2163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.0" y="2174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.06%)</title><rect x="84.0" y="2147.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.0" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.logHeaders (2 samples, 0.04%)</title><rect x="84.0" y="2131.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.0" y="2142.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="84.3" y="2115.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="87.3" y="2126.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="84.3" y="2099.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="87.3" y="2110.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="84.3" y="2083.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.3" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.02%)</title><rect x="84.5" y="2131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.5" y="2142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="84.8" y="2179.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.8" y="2190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.06%)</title><rect x="85.0" y="2179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="85.3" y="2163.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.3" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (64 samples, 1.38%)</title><rect x="85.8" y="2179.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.8" y="2190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="85.8" y="2163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.8" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (5 samples, 0.11%)</title><rect x="86.1" y="2163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.1" y="2174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.11%)</title><rect x="86.1" y="2147.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.1" y="2158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.11%)</title><rect x="86.1" y="2131.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.1" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.11%)</title><rect x="86.1" y="2115.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.1" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.09%)</title><rect x="86.3" y="2099.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.3" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.09%)</title><rect x="86.3" y="2083.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.3" y="2094.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="86.8" y="2067.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.8" y="2078.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="86.8" y="2051.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.8" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="86.8" y="2035.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.8" y="2046.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="87.1" y="2019.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.1" y="2030.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="87.1" y="2003.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.1" y="2014.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="87.1" y="1987.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.1" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (21 samples, 0.45%)</title><rect x="87.3" y="2163.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.3" y="2174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.09%)</title><rect x="88.6" y="2147.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.6" y="2158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.09%)</title><rect x="88.6" y="2131.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.6" y="2142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.09%)</title><rect x="88.6" y="2115.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.6" y="2126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.09%)</title><rect x="88.6" y="2099.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.6" y="2110.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="88.9" y="2083.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="91.9" y="2094.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.04%)</title><rect x="89.6" y="2147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.6" y="2158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.04%)</title><rect x="89.6" y="2131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.6" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.04%)</title><rect x="89.6" y="2115.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.6" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.04%)</title><rect x="89.6" y="2099.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.6" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.04%)</title><rect x="89.6" y="2083.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.6" y="2094.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.04%)</title><rect x="89.6" y="2067.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.6" y="2078.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.02%)</title><rect x="90.1" y="2147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.1" y="2158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="90.1" y="2131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.1" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.02%)</title><rect x="90.1" y="2115.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.1" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="90.1" y="2099.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.1" y="2110.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/209309242.test (6 samples, 0.13%)</title><rect x="90.4" y="2147.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.4" y="2158.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4 samples, 0.09%)</title><rect x="90.4" y="2131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.4" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$41/1282287470.test (4 samples, 0.09%)</title><rect x="90.4" y="2115.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.4" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (4 samples, 0.09%)</title><rect x="90.4" y="2099.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.4" y="2110.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$30/1151755506.test (4 samples, 0.09%)</title><rect x="90.4" y="2083.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.4" y="2094.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (4 samples, 0.09%)</title><rect x="90.4" y="2067.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.4" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$29/439928219.test (4 samples, 0.09%)</title><rect x="90.4" y="2051.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.4" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (4 samples, 0.09%)</title><rect x="90.4" y="2035.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.4" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="90.6" y="2019.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="90.6" y="2003.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="90.6" y="1987.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.6" y="1998.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="90.9" y="1971.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="93.9" y="1982.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="90.9" y="1955.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="93.9" y="1966.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="90.9" y="1939.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.9" y="1950.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="90.9" y="1923.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.9" y="1934.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="91.1" y="1971.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.1" y="1982.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="91.1" y="1955.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="94.1" y="1966.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="91.1" y="1939.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.02%)</title><rect x="91.4" y="2131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.4" y="2142.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="91.7" y="2131.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.7" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="91.7" y="2115.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.7" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="91.7" y="2099.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="94.7" y="2110.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="91.9" y="2147.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="94.9" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="92.2" y="2147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.2" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="92.2" y="2131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.2" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="92.2" y="2115.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="95.2" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (3 samples, 0.06%)</title><rect x="92.7" y="2163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.7" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (3 samples, 0.06%)</title><rect x="92.7" y="2147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.7" y="2158.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="92.7" y="2131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.7" y="2142.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="92.7" y="2115.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.7" y="2126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="92.7" y="2099.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.7" y="2110.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="93.2" y="2083.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.2" y="2094.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="93.2" y="2067.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.2" y="2078.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="93.2" y="2051.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.2" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (33 samples, 0.71%)</title><rect x="93.4" y="2163.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.4" y="2174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (33 samples, 0.71%)</title><rect x="93.4" y="2147.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.4" y="2158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (31 samples, 0.67%)</title><rect x="93.9" y="2131.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.9" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (29 samples, 0.63%)</title><rect x="94.4" y="2115.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.4" y="2126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (26 samples, 0.56%)</title><rect x="94.7" y="2099.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.7" y="2110.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.56%)</title><rect x="94.7" y="2083.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.7" y="2094.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.26%)</title><rect x="95.5" y="2067.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.5" y="2078.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="96.2" y="2051.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="99.2" y="2062.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (5 samples, 0.11%)</title><rect x="97.0" y="2051.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.0" y="2062.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.11%)</title><rect x="97.0" y="2035.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.0" y="2046.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.8" y="2019.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="100.8" y="2030.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.8" y="2003.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="100.8" y="2014.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="97.8" y="1987.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.8" y="1998.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="97.8" y="1971.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.8" y="1982.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="97.8" y="1955.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.8" y="1966.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="97.8" y="1939.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.8" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="97.8" y="1923.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="100.8" y="1934.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="98.0" y="2019.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.0" y="2030.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="98.0" y="2003.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="101.0" y="2014.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="98.0" y="1987.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.0" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$26/700072760.test (1 samples, 0.02%)</title><rect x="98.3" y="2051.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.3" y="2062.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.22%)</title><rect x="98.5" y="2067.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.5" y="2078.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.13%)</title><rect x="99.3" y="2051.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.3" y="2062.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.13%)</title><rect x="99.3" y="2035.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.3" y="2046.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.13%)</title><rect x="99.3" y="2019.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.3" y="2030.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="100.6" y="2003.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="103.6" y="2014.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="100.6" y="1987.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.6" y="1998.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="100.6" y="1971.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.6" y="1982.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="100.8" y="2051.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.8" y="2062.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="101.1" y="2067.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="104.1" y="2078.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="101.1" y="2051.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="104.1" y="2062.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="101.1" y="2035.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.1" y="2046.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.04%)</title><rect x="101.3" y="2099.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.3" y="2110.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (2 samples, 0.04%)</title><rect x="101.3" y="2083.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.3" y="2094.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="101.8" y="2163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.8" y="2174.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="101.8" y="2147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.8" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="101.8" y="2131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.09%)</title><rect x="102.1" y="2179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.1" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (4 samples, 0.09%)</title><rect x="102.1" y="2163.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.1" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (4 samples, 0.09%)</title><rect x="102.1" y="2147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.1" y="2158.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="102.6" y="2131.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.6" y="2142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="102.6" y="2115.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.6" y="2126.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="102.8" y="2131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="105.8" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="102.8" y="2115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="105.8" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="102.8" y="2099.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="105.8" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.09%)</title><rect x="103.1" y="2179.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.1" y="2190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="103.6" y="2163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.6" y="2174.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="103.9" y="2147.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.9" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="103.9" y="2131.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.9" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="103.9" y="2115.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.9" y="2126.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="104.1" y="2195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="107.1" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="104.1" y="2179.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="107.1" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="104.1" y="2163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="107.1" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$233/1351997233.apply (2 samples, 0.04%)</title><rect x="104.4" y="2227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.4" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$5 (1 samples, 0.02%)</title><rect x="104.6" y="2211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.6" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="104.9" y="2243.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.9" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="104.9" y="2227.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="107.9" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="104.9" y="2211.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="107.9" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (2 samples, 0.04%)</title><rect x="105.1" y="2259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.1" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (44 samples, 0.95%)</title><rect x="105.6" y="2259.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.6" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (38 samples, 0.82%)</title><rect x="105.6" y="2243.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.6" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (8 samples, 0.17%)</title><rect x="105.6" y="2227.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.6" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (8 samples, 0.17%)</title><rect x="105.6" y="2211.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.6" y="2222.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (1 samples, 0.02%)</title><rect x="106.9" y="2195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.9" y="2206.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="107.2" y="2195.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.2" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="107.2" y="2179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="110.2" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="107.2" y="2163.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="110.2" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.65%)</title><rect x="107.7" y="2227.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.7" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.60%)</title><rect x="108.2" y="2211.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.2" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.11%)</title><rect x="108.2" y="2195.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.2" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.11%)</title><rect x="108.2" y="2179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.2" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (5 samples, 0.11%)</title><rect x="108.2" y="2163.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.2" y="2174.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="108.2" y="2147.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="111.2" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="108.4" y="2131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.4" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="108.4" y="2115.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="111.4" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="108.4" y="2099.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.4" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.06%)</title><rect x="108.7" y="2147.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.7" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23 samples, 0.50%)</title><rect x="109.5" y="2195.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.5" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (23 samples, 0.50%)</title><rect x="109.5" y="2179.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.5" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12 samples, 0.26%)</title><rect x="109.5" y="2163.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.5" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (12 samples, 0.26%)</title><rect x="109.5" y="2147.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.5" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (11 samples, 0.24%)</title><rect x="109.7" y="2131.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.7" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (10 samples, 0.22%)</title><rect x="110.0" y="2115.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.0" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="110.0" y="2099.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.0" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="110.2" y="2083.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.2" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.02%)</title><rect x="110.5" y="2067.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.5" y="2078.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="110.5" y="2051.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7 samples, 0.15%)</title><rect x="110.7" y="2099.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.7" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (7 samples, 0.15%)</title><rect x="110.7" y="2083.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.7" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.02%)</title><rect x="111.2" y="2067.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.02%)</title><rect x="111.2" y="2051.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.2" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getCompletionCause (1 samples, 0.02%)</title><rect x="111.2" y="2035.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (4 samples, 0.09%)</title><rect x="111.5" y="2067.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.5" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (3 samples, 0.06%)</title><rect x="111.7" y="2051.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.7" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.04%)</title><rect x="112.0" y="2035.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.0" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.02%)</title><rect x="112.3" y="2019.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.3" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.02%)</title><rect x="112.3" y="2003.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.3" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (11 samples, 0.24%)</title><rect x="112.5" y="2163.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.5" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="112.5" y="2147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.5" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/1097621600.run (1 samples, 0.02%)</title><rect x="112.5" y="2131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.5" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.22%)</title><rect x="112.8" y="2147.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.8" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.19%)</title><rect x="112.8" y="2131.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (3 samples, 0.06%)</title><rect x="114.3" y="2115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.3" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.06%)</title><rect x="114.3" y="2099.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.3" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="114.3" y="2083.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.3" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="114.3" y="2067.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.3" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.5" y="2051.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="114.8" y="2067.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="114.8" y="2051.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.8" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="114.8" y="2035.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="114.8" y="2019.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="114.8" y="2003.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="115.1" y="2131.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.1" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="115.1" y="2115.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.1" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.13%)</title><rect x="115.3" y="2243.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.3" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.13%)</title><rect x="115.3" y="2227.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.3" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (6 samples, 0.13%)</title><rect x="115.3" y="2211.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.3" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (6 samples, 0.13%)</title><rect x="115.3" y="2195.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.3" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (6 samples, 0.13%)</title><rect x="115.3" y="2179.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.3" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/logger/LazyLoggers$LazyLoggerWrapper.wrapped (2 samples, 0.04%)</title><rect x="115.3" y="2163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.3" y="2174.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (4 samples, 0.09%)</title><rect x="115.8" y="2163.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.8" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/logger/LazyLoggers$LazyLoggerAccessor.wrapped (3 samples, 0.06%)</title><rect x="115.8" y="2147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.8" y="2158.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.02%)</title><rect x="116.6" y="2147.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.6" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="116.6" y="2131.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="119.6" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="116.6" y="2115.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.6" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="116.6" y="2099.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="119.6" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$200/387510293.apply (4 samples, 0.09%)</title><rect x="116.8" y="2371.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.8" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (257 samples, 5.54%)</title><rect x="117.9" y="2403.0" width="65.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.9" y="2414.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.19%)</title><rect x="117.9" y="2387.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.9" y="2398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.13%)</title><rect x="118.1" y="2371.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.1" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.09%)</title><rect x="118.1" y="2355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.1" y="2366.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="118.1" y="2339.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="121.1" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/2007766795.apply (3 samples, 0.06%)</title><rect x="118.4" y="2339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.4" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/2007766795.apply (2 samples, 0.04%)</title><rect x="119.1" y="2355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.1" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (2 samples, 0.04%)</title><rect x="119.1" y="2339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.1" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="119.1" y="2323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.1" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="119.1" y="2307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.1" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="119.1" y="2291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.1" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="119.6" y="2371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.6" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.24%)</title><rect x="120.1" y="2387.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.1" y="2398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="120.4" y="2371.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.4" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.19%)</title><rect x="120.6" y="2371.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.6" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.15%)</title><rect x="120.9" y="2355.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.9" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (5 samples, 0.11%)</title><rect x="121.2" y="2339.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.2" y="2350.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="121.2" y="2323.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="124.2" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/1182424724.accept (1 samples, 0.02%)</title><rect x="122.2" y="2323.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.2" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$194/1182424724.accept (1 samples, 0.02%)</title><rect x="122.4" y="2339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.4" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.02%)</title><rect x="122.4" y="2323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.4" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="122.4" y="2307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="125.4" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="122.4" y="2291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="125.4" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="122.4" y="2275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="125.4" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="122.7" y="2355.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.7" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="122.7" y="2339.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="125.7" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="122.7" y="2323.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.7" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (237 samples, 5.11%)</title><rect x="122.9" y="2387.0" width="60.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.9" y="2398.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (224 samples, 4.83%)</title><rect x="122.9" y="2371.0" width="57.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.9" y="2382.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (224 samples, 4.83%)</title><rect x="122.9" y="2355.0" width="57.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.9" y="2366.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (223 samples, 4.81%)</title><rect x="122.9" y="2339.0" width="56.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.9" y="2350.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$139/120399569.apply (223 samples, 4.81%)</title><rect x="122.9" y="2323.0" width="56.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.9" y="2334.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1 samples, 0.02%)</title><rect x="122.9" y="2307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.9" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="122.9" y="2291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="125.9" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="122.9" y="2275.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.9" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="122.9" y="2259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="125.9" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (222 samples, 4.79%)</title><rect x="123.2" y="2307.0" width="56.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.2" y="2318.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (222 samples, 4.79%)</title><rect x="123.2" y="2291.0" width="56.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.2" y="2302.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (119 samples, 2.57%)</title><rect x="123.2" y="2275.0" width="30.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.2" y="2286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (119 samples, 2.57%)</title><rect x="123.2" y="2259.0" width="30.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.2" y="2270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (117 samples, 2.52%)</title><rect x="123.2" y="2243.0" width="29.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.2" y="2254.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$189/183712916.apply (115 samples, 2.48%)</title><rect x="123.7" y="2227.0" width="29.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.7" y="2238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (115 samples, 2.48%)</title><rect x="123.7" y="2211.0" width="29.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.7" y="2222.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (115 samples, 2.48%)</title><rect x="123.7" y="2195.0" width="29.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.7" y="2206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (115 samples, 2.48%)</title><rect x="123.7" y="2179.0" width="29.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.7" y="2190.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (98 samples, 2.11%)</title><rect x="123.7" y="2163.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.7" y="2174.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (9 samples, 0.19%)</title><rect x="123.7" y="2147.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.7" y="2158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="123.7" y="2131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.7" y="2142.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (2 samples, 0.04%)</title><rect x="123.7" y="2115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.7" y="2126.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (7 samples, 0.15%)</title><rect x="124.2" y="2131.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="2142.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (5 samples, 0.11%)</title><rect x="124.7" y="2115.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.7" y="2126.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (4 samples, 0.09%)</title><rect x="125.0" y="2099.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.0" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (77 samples, 1.66%)</title><rect x="126.0" y="2147.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.0" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (76 samples, 1.64%)</title><rect x="126.0" y="2131.0" width="19.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.0" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (76 samples, 1.64%)</title><rect x="126.0" y="2115.0" width="19.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.0" y="2126.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (73 samples, 1.57%)</title><rect x="126.8" y="2099.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.8" y="2110.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.06%)</title><rect x="127.0" y="2083.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="130.0" y="2094.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (52 samples, 1.12%)</title><rect x="127.8" y="2083.0" width="13.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="130.8" y="2094.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="128.0" y="2067.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="131.0" y="2078.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="128.3" y="2067.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="131.3" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.02%)</title><rect x="128.5" y="2067.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="131.5" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.09%)</title><rect x="128.8" y="2067.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="131.8" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.06%)</title><rect x="129.0" y="2051.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="132.0" y="2062.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.17%)</title><rect x="129.8" y="2067.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="132.8" y="2078.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.04%)</title><rect x="129.8" y="2051.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="132.8" y="2062.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.11%)</title><rect x="130.3" y="2051.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="133.3" y="2062.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="131.1" y="2035.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="134.1" y="2046.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="131.3" y="2035.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="134.3" y="2046.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="131.3" y="2019.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="134.3" y="2030.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="131.3" y="2003.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="134.3" y="2014.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="131.6" y="2051.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="134.6" y="2062.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="131.8" y="2067.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="134.8" y="2078.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.296] (2 samples, 0.04%)</title><rect x="132.1" y="2067.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="135.1" y="2078.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="132.6" y="2067.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="135.6" y="2078.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.04%)</title><rect x="132.9" y="2067.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="135.9" y="2078.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.02%)</title><rect x="133.4" y="2067.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="136.4" y="2078.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="133.6" y="2067.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.6" y="2078.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="133.6" y="2051.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.6" y="2062.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="133.6" y="2035.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="136.6" y="2046.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (10 samples, 0.22%)</title><rect x="133.9" y="2067.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="136.9" y="2078.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.15%)</title><rect x="134.1" y="2051.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="137.1" y="2062.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.15%)</title><rect x="134.1" y="2035.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="137.1" y="2046.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.06%)</title><rect x="135.1" y="2019.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="138.1" y="2030.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="135.9" y="2051.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="138.9" y="2062.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="136.2" y="2051.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="139.2" y="2062.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="136.2" y="2035.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.2" y="2046.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="136.2" y="2019.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.2" y="2030.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="136.2" y="2003.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="139.2" y="2014.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (18 samples, 0.39%)</title><rect x="136.4" y="2067.0" width="4.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="139.4" y="2078.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="136.9" y="2051.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="139.9" y="2062.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="137.2" y="2051.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="140.2" y="2062.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="137.2" y="2035.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="140.2" y="2046.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="137.2" y="2019.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="140.2" y="2030.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="137.2" y="2003.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.2" y="2014.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.17%)</title><rect x="137.4" y="2051.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="140.4" y="2062.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.04%)</title><rect x="138.2" y="2035.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="141.2" y="2046.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="138.7" y="2035.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.7" y="2046.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="138.7" y="2019.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="141.7" y="2030.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="138.7" y="2003.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="141.7" y="2014.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.11%)</title><rect x="139.5" y="2051.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.5" y="2062.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.11%)</title><rect x="139.5" y="2035.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="142.5" y="2046.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="140.2" y="2019.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="143.2" y="2030.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="140.7" y="2051.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="143.7" y="2062.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="140.7" y="2035.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="143.7" y="2046.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="140.7" y="2019.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.7" y="2030.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.02%)</title><rect x="141.0" y="2083.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="144.0" y="2094.0"></text>
</g>
<g>
<title>Method::is_method() const volatile (1 samples, 0.02%)</title><rect x="141.3" y="2083.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="144.3" y="2094.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.02%)</title><rect x="141.5" y="2083.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="144.5" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$25/413601558.run (13 samples, 0.28%)</title><rect x="141.8" y="2083.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.8" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (11 samples, 0.24%)</title><rect x="142.3" y="2067.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="2078.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (11 samples, 0.24%)</title><rect x="142.3" y="2051.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.3" y="2062.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (4 samples, 0.09%)</title><rect x="142.3" y="2035.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.3" y="2046.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.09%)</title><rect x="142.3" y="2019.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.3" y="2030.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.09%)</title><rect x="142.3" y="2003.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.09%)</title><rect x="142.3" y="1987.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.3" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.09%)</title><rect x="142.3" y="1971.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.09%)</title><rect x="142.3" y="1955.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.3" y="1966.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="143.0" y="1939.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="146.0" y="1950.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="143.0" y="1923.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.0" y="1934.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="143.0" y="1907.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.0" y="1918.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (7 samples, 0.15%)</title><rect x="143.3" y="2035.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.3" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.15%)</title><rect x="143.3" y="2019.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.3" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="144.6" y="2003.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="144.6" y="1987.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.6" y="1998.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="145.1" y="2083.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="148.1" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.02%)</title><rect x="145.3" y="2131.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.3" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.02%)</title><rect x="145.3" y="2115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.3" y="2126.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.02%)</title><rect x="145.3" y="2099.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.3" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (12 samples, 0.26%)</title><rect x="145.6" y="2147.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.6" y="2158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.15%)</title><rect x="145.6" y="2131.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.6" y="2142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.15%)</title><rect x="145.6" y="2115.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.6" y="2126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="145.6" y="2099.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.6" y="2110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="145.6" y="2083.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.6" y="2094.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="145.6" y="2067.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.6" y="2078.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="146.3" y="2051.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.3" y="2062.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="146.3" y="2035.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="149.3" y="2046.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="146.6" y="2051.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.6" y="2062.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="147.1" y="2035.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.1" y="2046.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="147.1" y="2019.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.1" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.length (1 samples, 0.02%)</title><rect x="147.4" y="2131.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.4" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (4 samples, 0.09%)</title><rect x="147.6" y="2131.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.6" y="2142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (4 samples, 0.09%)</title><rect x="147.6" y="2115.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.6" y="2126.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (4 samples, 0.09%)</title><rect x="147.6" y="2099.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.6" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (17 samples, 0.37%)</title><rect x="148.6" y="2163.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.6" y="2174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.30%)</title><rect x="149.4" y="2147.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.4" y="2158.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.13%)</title><rect x="150.2" y="2131.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.2" y="2142.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.13%)</title><rect x="150.2" y="2115.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.2" y="2126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.13%)</title><rect x="150.2" y="2099.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.2" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="151.7" y="2131.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.7" y="2142.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.02%)</title><rect x="151.7" y="2115.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="2126.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.02%)</title><rect x="151.7" y="2099.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.7" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.06%)</title><rect x="151.9" y="2131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.9" y="2142.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="152.4" y="2115.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.4" y="2126.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="152.4" y="2099.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="155.4" y="2110.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="152.4" y="2083.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="155.4" y="2094.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="152.7" y="2131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="155.7" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="152.7" y="2115.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.7" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="152.7" y="2099.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="155.7" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="153.0" y="2243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.0" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="153.0" y="2227.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.0" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.04%)</title><rect x="153.0" y="2211.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.0" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (103 samples, 2.22%)</title><rect x="153.5" y="2275.0" width="26.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.5" y="2286.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (103 samples, 2.22%)</title><rect x="153.5" y="2259.0" width="26.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.5" y="2270.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (11 samples, 0.24%)</title><rect x="154.0" y="2243.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.0" y="2254.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="156.3" y="2227.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.3" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="156.3" y="2211.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="159.3" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="156.3" y="2195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="159.3" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (5 samples, 0.11%)</title><rect x="156.8" y="2243.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.8" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="157.3" y="2227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.3" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="157.3" y="2211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.3" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="157.3" y="2195.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.3" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.04%)</title><rect x="157.3" y="2179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.3" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.04%)</title><rect x="157.3" y="2163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.3" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (2 samples, 0.04%)</title><rect x="157.3" y="2147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.3" y="2158.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.04%)</title><rect x="157.3" y="2131.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.3" y="2142.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="157.8" y="2227.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="160.8" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="157.8" y="2211.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="160.8" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="157.8" y="2195.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="160.8" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (5 samples, 0.11%)</title><rect x="158.0" y="2243.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.0" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.11%)</title><rect x="158.0" y="2227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.0" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.11%)</title><rect x="158.0" y="2211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.0" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.11%)</title><rect x="158.0" y="2195.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.0" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.11%)</title><rect x="158.0" y="2179.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.0" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (5 samples, 0.11%)</title><rect x="158.0" y="2163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.0" y="2174.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.11%)</title><rect x="158.0" y="2147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.0" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="159.1" y="2131.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.1" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="159.1" y="2115.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.1" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="159.1" y="2099.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="162.1" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (12 samples, 0.26%)</title><rect x="159.3" y="2243.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.3" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (12 samples, 0.26%)</title><rect x="159.3" y="2227.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.3" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (11 samples, 0.24%)</title><rect x="159.3" y="2211.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.3" y="2222.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.24%)</title><rect x="159.3" y="2195.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.3" y="2206.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="159.3" y="2179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.3" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.02%)</title><rect x="159.8" y="2163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="2174.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="159.8" y="2147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.8" y="2158.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="159.8" y="2131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.8" y="2142.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.02%)</title><rect x="159.8" y="2115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.8" y="2126.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.17%)</title><rect x="160.1" y="2179.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.1" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (8 samples, 0.17%)</title><rect x="160.1" y="2163.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.1" y="2174.0"></text>
</g>
<g>
<title>java/util/Objects.hash (8 samples, 0.17%)</title><rect x="160.1" y="2147.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.1" y="2158.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (8 samples, 0.17%)</title><rect x="160.1" y="2131.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.1" y="2142.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="161.9" y="2115.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="164.9" y="2126.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="161.9" y="2099.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="164.9" y="2110.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="161.9" y="2083.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="164.9" y="2094.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="162.1" y="2211.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="165.1" y="2222.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="162.1" y="2195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="165.1" y="2206.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="162.1" y="2179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.1" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (65 samples, 1.40%)</title><rect x="162.4" y="2243.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.4" y="2254.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (61 samples, 1.31%)</title><rect x="163.1" y="2227.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.1" y="2238.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.06%)</title><rect x="163.6" y="2211.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="166.6" y="2222.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (42 samples, 0.91%)</title><rect x="164.4" y="2211.0" width="10.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="167.4" y="2222.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="164.4" y="2195.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="167.4" y="2206.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="164.7" y="2195.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="167.7" y="2206.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.04%)</title><rect x="164.9" y="2195.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="167.9" y="2206.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (2 samples, 0.04%)</title><rect x="165.4" y="2195.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="168.4" y="2206.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="165.7" y="2179.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.7" y="2190.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="165.7" y="2163.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="168.7" y="2174.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="165.7" y="2147.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="168.7" y="2158.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.06%)</title><rect x="165.9" y="2195.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="168.9" y="2206.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.06%)</title><rect x="165.9" y="2179.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="168.9" y="2190.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="166.4" y="2163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="169.4" y="2174.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="166.4" y="2147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.4" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="166.4" y="2131.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.4" y="2142.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.19%)</title><rect x="166.7" y="2195.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="169.7" y="2206.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="167.7" y="2179.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="170.7" y="2190.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="168.0" y="2179.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="171.0" y="2190.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.04%)</title><rect x="168.2" y="2179.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="171.2" y="2190.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="168.7" y="2179.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="171.7" y="2190.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="169.0" y="2195.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="172.0" y="2206.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.06%)</title><rect x="169.5" y="2195.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="172.5" y="2206.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="170.3" y="2195.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="173.3" y="2206.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.296] (1 samples, 0.02%)</title><rect x="170.5" y="2195.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="173.5" y="2206.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.02%)</title><rect x="170.8" y="2195.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="173.8" y="2206.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="171.0" y="2195.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="174.0" y="2206.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="171.3" y="2195.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="174.3" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="171.3" y="2179.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="174.3" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="171.3" y="2163.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="174.3" y="2174.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.15%)</title><rect x="171.5" y="2195.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="174.5" y="2206.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="171.8" y="2179.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="174.8" y="2190.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="171.8" y="2163.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.8" y="2174.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="171.8" y="2147.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.8" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="171.8" y="2131.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="174.8" y="2142.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.11%)</title><rect x="172.0" y="2179.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="175.0" y="2190.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="172.0" y="2163.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="175.0" y="2174.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="172.5" y="2147.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="175.5" y="2158.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.04%)</title><rect x="172.8" y="2163.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="175.8" y="2174.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.15%)</title><rect x="173.3" y="2195.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="176.3" y="2206.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="173.3" y="2179.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="176.3" y="2190.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (6 samples, 0.13%)</title><rect x="173.6" y="2179.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="176.6" y="2190.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="174.3" y="2163.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="177.3" y="2174.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="174.6" y="2163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.6" y="2174.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="174.6" y="2147.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="177.6" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="174.6" y="2131.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="177.6" y="2142.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.02%)</title><rect x="175.1" y="2211.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="178.1" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/395225001.run (12 samples, 0.26%)</title><rect x="175.3" y="2211.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.3" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (12 samples, 0.26%)</title><rect x="175.3" y="2195.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.3" y="2206.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (12 samples, 0.26%)</title><rect x="175.3" y="2179.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.3" y="2190.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (12 samples, 0.26%)</title><rect x="175.3" y="2163.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.3" y="2174.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (12 samples, 0.26%)</title><rect x="175.3" y="2147.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.3" y="2158.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (12 samples, 0.26%)</title><rect x="175.3" y="2131.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.3" y="2142.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.09%)</title><rect x="175.8" y="2115.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.8" y="2126.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.09%)</title><rect x="175.8" y="2099.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.8" y="2110.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="176.6" y="2083.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="179.6" y="2094.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="176.6" y="2067.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="179.6" y="2078.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="176.6" y="2051.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.6" y="2062.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.13%)</title><rect x="176.9" y="2115.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.9" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.09%)</title><rect x="177.4" y="2099.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.4" y="2110.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.09%)</title><rect x="177.4" y="2083.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.4" y="2094.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.09%)</title><rect x="177.4" y="2067.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.4" y="2078.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="178.4" y="2211.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="181.4" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="178.6" y="2227.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="181.6" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="178.6" y="2211.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="181.6" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="178.6" y="2195.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.6" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.06%)</title><rect x="178.9" y="2243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.9" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.06%)</title><rect x="178.9" y="2227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.9" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (3 samples, 0.06%)</title><rect x="178.9" y="2211.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.9" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (3 samples, 0.06%)</title><rect x="178.9" y="2195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.9" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (3 samples, 0.06%)</title><rect x="178.9" y="2179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.9" y="2190.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (3 samples, 0.06%)</title><rect x="178.9" y="2163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.9" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$139/120399569.apply (1 samples, 0.02%)</title><rect x="179.7" y="2339.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.7" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="179.7" y="2323.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="182.7" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="179.7" y="2307.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.7" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="179.7" y="2291.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="182.7" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.17%)</title><rect x="179.9" y="2371.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.9" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.15%)</title><rect x="179.9" y="2355.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.9" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.11%)</title><rect x="180.4" y="2339.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.4" y="2350.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="180.4" y="2323.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="183.4" y="2334.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$79/752316209.apply (4 samples, 0.09%)</title><rect x="180.7" y="2323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.7" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="181.4" y="2307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.4" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="181.4" y="2291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.4" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="181.4" y="2275.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.4" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="181.7" y="2355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.7" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="181.7" y="2339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="184.7" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="181.7" y="2323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="184.7" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="181.7" y="2307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="184.7" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (5 samples, 0.11%)</title><rect x="182.0" y="2371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.0" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.09%)</title><rect x="182.2" y="2355.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.2" y="2366.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.09%)</title><rect x="182.2" y="2339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.2" y="2350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.09%)</title><rect x="182.2" y="2323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.2" y="2334.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="183.0" y="2307.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="186.0" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="183.0" y="2291.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.0" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="183.0" y="2275.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="186.0" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="183.0" y="2259.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="186.0" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (42 samples, 0.91%)</title><rect x="183.2" y="2451.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.2" y="2462.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (5 samples, 0.11%)</title><rect x="183.5" y="2435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.5" y="2446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.09%)</title><rect x="183.5" y="2419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.5" y="2430.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="183.5" y="2403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.5" y="2414.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="183.5" y="2387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.5" y="2398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="183.5" y="2371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.5" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.04%)</title><rect x="184.0" y="2403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.0" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (1 samples, 0.02%)</title><rect x="184.2" y="2387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.2" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="184.5" y="2419.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.5" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="184.5" y="2403.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.5" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="184.5" y="2387.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.5" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (36 samples, 0.78%)</title><rect x="184.7" y="2435.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.7" y="2446.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (36 samples, 0.78%)</title><rect x="184.7" y="2419.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="2430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (36 samples, 0.78%)</title><rect x="184.7" y="2403.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.7" y="2414.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="184.7" y="2387.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="187.7" y="2398.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.71%)</title><rect x="185.0" y="2387.0" width="8.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="188.0" y="2398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.26%)</title><rect x="185.0" y="2371.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="188.0" y="2382.0"></text>
</g>
<g>
<title>__write (12 samples, 0.26%)</title><rect x="185.0" y="2355.0" width="3.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="188.0" y="2366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.26%)</title><rect x="185.0" y="2339.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.0" y="2350.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.24%)</title><rect x="185.0" y="2323.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="188.0" y="2334.0"></text>
</g>
<g>
<title>sys_write (9 samples, 0.19%)</title><rect x="185.5" y="2307.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="188.5" y="2318.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 0.19%)</title><rect x="185.5" y="2291.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.5" y="2302.0"></text>
</g>
<g>
<title>__vfs_write (7 samples, 0.15%)</title><rect x="185.5" y="2275.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.5" y="2286.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.15%)</title><rect x="185.5" y="2259.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.5" y="2270.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.15%)</title><rect x="185.5" y="2243.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.5" y="2254.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.15%)</title><rect x="185.5" y="2227.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="188.5" y="2238.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.15%)</title><rect x="185.5" y="2211.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="188.5" y="2222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.15%)</title><rect x="185.5" y="2195.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="188.5" y="2206.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="187.3" y="2275.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="190.3" y="2286.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="187.5" y="2275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="190.5" y="2286.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="187.8" y="2323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="190.8" y="2334.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.45%)</title><rect x="188.1" y="2371.0" width="5.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="191.1" y="2382.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="188.1" y="2355.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="191.1" y="2366.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="188.1" y="2339.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="191.1" y="2350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="188.1" y="2323.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.1" y="2334.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="188.1" y="2307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.1" y="2318.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="188.1" y="2291.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.1" y="2302.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="188.1" y="2275.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.1" y="2286.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="188.1" y="2259.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="191.1" y="2270.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="188.1" y="2243.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="191.1" y="2254.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="188.1" y="2227.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.1" y="2238.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="188.1" y="2211.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="191.1" y="2222.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="188.1" y="2195.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="191.1" y="2206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="188.1" y="2179.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="191.1" y="2190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="188.3" y="2355.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="191.3" y="2366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="188.3" y="2339.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="191.3" y="2350.0"></text>
</g>
<g>
<title>__write (2 samples, 0.04%)</title><rect x="188.3" y="2323.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="191.3" y="2334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="188.3" y="2307.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="191.3" y="2318.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="188.3" y="2291.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="191.3" y="2302.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.04%)</title><rect x="188.3" y="2275.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="191.3" y="2286.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.04%)</title><rect x="188.3" y="2259.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.3" y="2270.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.04%)</title><rect x="188.3" y="2243.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.3" y="2254.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.04%)</title><rect x="188.3" y="2227.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="191.3" y="2238.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.04%)</title><rect x="188.3" y="2211.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="191.3" y="2222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.04%)</title><rect x="188.3" y="2195.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="191.3" y="2206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="188.3" y="2179.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="191.3" y="2190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="188.3" y="2163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="191.3" y="2174.0"></text>
</g>
<g>
<title>__write (18 samples, 0.39%)</title><rect x="188.8" y="2355.0" width="4.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="191.8" y="2366.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.39%)</title><rect x="188.8" y="2339.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.8" y="2350.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.39%)</title><rect x="188.8" y="2323.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.8" y="2334.0"></text>
</g>
<g>
<title>sys_write (18 samples, 0.39%)</title><rect x="188.8" y="2307.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.8" y="2318.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="188.8" y="2291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.8" y="2302.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="188.8" y="2275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.8" y="2286.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.37%)</title><rect x="189.1" y="2291.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="192.1" y="2302.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.34%)</title><rect x="189.1" y="2275.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.1" y="2286.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.34%)</title><rect x="189.1" y="2259.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.1" y="2270.0"></text>
</g>
<g>
<title>pipe_write (16 samples, 0.34%)</title><rect x="189.1" y="2243.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.1" y="2254.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.32%)</title><rect x="189.1" y="2227.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.1" y="2238.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.32%)</title><rect x="189.1" y="2211.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="192.1" y="2222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.32%)</title><rect x="189.1" y="2195.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.1" y="2206.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="192.9" y="2227.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.9" y="2238.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="193.1" y="2275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.1" y="2286.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="193.1" y="2259.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="196.1" y="2270.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="193.1" y="2243.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="196.1" y="2254.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="193.1" y="2227.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="196.1" y="2238.0"></text>
</g>
<g>
<title>__write (2 samples, 0.04%)</title><rect x="193.4" y="2387.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="196.4" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.02%)</title><rect x="193.9" y="2451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.9" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="193.9" y="2435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="196.9" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="193.9" y="2419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.9" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="193.9" y="2403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.9" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (15 samples, 0.32%)</title><rect x="194.2" y="2451.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.2" y="2462.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="194.2" y="2435.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.2" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="194.2" y="2419.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.2" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="194.2" y="2403.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="197.2" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="194.2" y="2387.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.2" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (8 samples, 0.17%)</title><rect x="194.4" y="2435.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.4" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (8 samples, 0.17%)</title><rect x="194.4" y="2419.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.4" y="2430.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (7 samples, 0.15%)</title><rect x="194.7" y="2403.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.7" y="2414.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (6 samples, 0.13%)</title><rect x="194.7" y="2387.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.7" y="2398.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.02%)</title><rect x="195.9" y="2371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.9" y="2382.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.02%)</title><rect x="195.9" y="2355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.9" y="2366.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.02%)</title><rect x="195.9" y="2339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.9" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="195.9" y="2323.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="198.9" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="195.9" y="2307.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="198.9" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="195.9" y="2291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.9" y="2302.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.02%)</title><rect x="196.2" y="2387.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.2" y="2398.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="196.2" y="2371.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.2" y="2382.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="196.2" y="2355.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="199.2" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (6 samples, 0.13%)</title><rect x="196.4" y="2435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.4" y="2446.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (3 samples, 0.06%)</title><rect x="196.7" y="2419.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.7" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="197.2" y="2403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.2" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="197.2" y="2387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="200.2" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="197.2" y="2371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.2" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="197.5" y="2419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.5" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="197.5" y="2403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.5" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="197.5" y="2387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="200.5" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (11 samples, 0.24%)</title><rect x="198.0" y="2451.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.0" y="2462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (11 samples, 0.24%)</title><rect x="198.0" y="2435.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.0" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (11 samples, 0.24%)</title><rect x="198.0" y="2419.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.0" y="2430.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.19%)</title><rect x="198.0" y="2403.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.0" y="2414.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.19%)</title><rect x="198.0" y="2387.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.0" y="2398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="199.0" y="2371.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.0" y="2382.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="199.0" y="2355.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.0" y="2366.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (1 samples, 0.02%)</title><rect x="199.0" y="2339.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.0" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="199.0" y="2323.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.0" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="199.0" y="2307.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.0" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="199.0" y="2291.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="202.0" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="199.0" y="2275.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="202.0" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="199.2" y="2371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.2" y="2382.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="199.2" y="2355.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="202.2" y="2366.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="199.2" y="2339.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="202.2" y="2350.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="199.2" y="2323.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="202.2" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="199.5" y="2371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="202.5" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="199.5" y="2355.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.5" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="199.5" y="2339.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.5" y="2350.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.04%)</title><rect x="200.3" y="2403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.3" y="2414.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (2 samples, 0.04%)</title><rect x="200.3" y="2387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.3" y="2398.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.04%)</title><rect x="200.3" y="2371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.3" y="2382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.04%)</title><rect x="200.3" y="2355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.3" y="2366.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.04%)</title><rect x="200.3" y="2339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.3" y="2350.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="200.3" y="2323.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.3" y="2334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="200.5" y="2323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.5" y="2334.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="200.5" y="2307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.5" y="2318.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="200.5" y="2291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.5" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="200.5" y="2275.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="203.5" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="200.5" y="2259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="203.5" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="200.5" y="2243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.5" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/973729991.apply (2 samples, 0.04%)</title><rect x="200.8" y="2499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.8" y="2510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.04%)</title><rect x="200.8" y="2483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.8" y="2494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.04%)</title><rect x="200.8" y="2467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.8" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.04%)</title><rect x="200.8" y="2451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.8" y="2462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.04%)</title><rect x="200.8" y="2435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.8" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="200.8" y="2419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.8" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/1855941268.run (2 samples, 0.04%)</title><rect x="200.8" y="2403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.8" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.04%)</title><rect x="200.8" y="2387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.8" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.02%)</title><rect x="200.8" y="2371.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.8" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="200.8" y="2355.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.8" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="200.8" y="2339.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.8" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="200.8" y="2323.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.8" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="200.8" y="2307.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.8" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="200.8" y="2291.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.8" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (1 samples, 0.02%)</title><rect x="200.8" y="2275.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.8" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="200.8" y="2259.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.8" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.02%)</title><rect x="200.8" y="2243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.8" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.02%)</title><rect x="200.8" y="2227.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.8" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.02%)</title><rect x="200.8" y="2211.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.8" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.02%)</title><rect x="200.8" y="2195.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.8" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1 samples, 0.02%)</title><rect x="200.8" y="2179.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.8" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1 samples, 0.02%)</title><rect x="200.8" y="2163.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.8" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/999614473.run (1 samples, 0.02%)</title><rect x="200.8" y="2147.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.8" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="200.8" y="2131.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="200.8" y="2115.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="200.8" y="2099.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.8" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="200.8" y="2083.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.8" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.02%)</title><rect x="200.8" y="2067.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="200.8" y="2051.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.8" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="200.8" y="2035.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="203.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="200.8" y="2019.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.8" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.02%)</title><rect x="200.8" y="2003.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="200.8" y="1987.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.8" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="200.8" y="1971.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.8" y="1982.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="200.8" y="1955.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.8" y="1966.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="200.8" y="1939.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="200.8" y="1923.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="203.8" y="1934.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="200.8" y="1907.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="203.8" y="1918.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="200.8" y="1891.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="203.8" y="1902.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="200.8" y="1875.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="203.8" y="1886.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="200.8" y="1859.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.8" y="1870.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="200.8" y="1843.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="203.8" y="1854.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="200.8" y="1827.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="203.8" y="1838.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="200.8" y="1811.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.8" y="1822.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="200.8" y="1795.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="203.8" y="1806.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="200.8" y="1779.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="203.8" y="1790.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="200.8" y="1763.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1 samples, 0.02%)</title><rect x="201.0" y="2371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.0" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.02%)</title><rect x="201.0" y="2355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.0" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="201.0" y="2339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.0" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="201.0" y="2323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.0" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="201.0" y="2307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.0" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="201.0" y="2291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.0" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.02%)</title><rect x="201.0" y="2275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.0" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.02%)</title><rect x="201.0" y="2259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.0" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="201.0" y="2243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.0" y="2254.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.02%)</title><rect x="201.0" y="2227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.0" y="2238.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.02%)</title><rect x="201.0" y="2211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.0" y="2222.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="201.0" y="2195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.0" y="2206.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="201.0" y="2179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.0" y="2190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.02%)</title><rect x="201.0" y="2163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.0" y="2174.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.02%)</title><rect x="201.0" y="2147.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="204.0" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="201.3" y="2499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.3" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="201.3" y="2483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.3" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="201.3" y="2467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="204.3" y="2478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (373 samples, 8.04%)</title><rect x="201.8" y="2547.0" width="94.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.8" y="2558.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="202.8" y="2531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.8" y="2542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (367 samples, 7.91%)</title><rect x="203.1" y="2531.0" width="93.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.1" y="2542.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.04%)</title><rect x="204.3" y="2515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.3" y="2526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="204.3" y="2499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.3" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.04%)</title><rect x="204.3" y="2483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.3" y="2494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.04%)</title><rect x="204.3" y="2467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.3" y="2478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="204.3" y="2451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.3" y="2462.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="204.3" y="2435.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="207.3" y="2446.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="204.6" y="2435.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="207.6" y="2446.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="204.6" y="2419.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="207.6" y="2430.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="204.6" y="2403.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="207.6" y="2414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (360 samples, 7.76%)</title><rect x="204.8" y="2515.0" width="91.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.8" y="2526.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (5 samples, 0.11%)</title><rect x="205.4" y="2499.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.4" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.11%)</title><rect x="205.4" y="2483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.4" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="206.4" y="2467.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="209.4" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="206.4" y="2451.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="209.4" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="206.4" y="2435.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="209.4" y="2446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (353 samples, 7.61%)</title><rect x="206.6" y="2499.0" width="89.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.6" y="2510.0">java/util/..</text>
</g>
<g>
<title>clock_gettime (4 samples, 0.09%)</title><rect x="208.9" y="2483.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="211.9" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="209.7" y="2467.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="212.7" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="209.7" y="2451.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="212.7" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="209.7" y="2435.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="212.7" y="2446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (338 samples, 7.29%)</title><rect x="209.9" y="2483.0" width="86.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.9" y="2494.0">java/util/..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="216.8" y="2467.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="219.8" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (303 samples, 6.53%)</title><rect x="217.1" y="2467.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.1" y="2478.0">jdk/inter..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="219.1" y="2451.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="222.1" y="2462.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="219.3" y="2451.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="222.3" y="2462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="219.6" y="2451.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="222.6" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="219.6" y="2435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="222.6" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="219.6" y="2419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.6" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="219.6" y="2403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="222.6" y="2414.0"></text>
</g>
<g>
<title>Unsafe_Park (86 samples, 1.85%)</title><rect x="219.9" y="2451.0" width="21.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="222.9" y="2462.0">U..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.09%)</title><rect x="222.4" y="2435.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="225.4" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="223.2" y="2419.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.2" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="223.2" y="2403.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="226.2" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="223.2" y="2387.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="226.2" y="2398.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="223.4" y="2435.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="226.4" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="223.7" y="2419.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="226.7" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="223.7" y="2403.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="226.7" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="223.7" y="2387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="226.7" y="2398.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="223.9" y="2435.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="226.9" y="2446.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="224.2" y="2435.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="227.2" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="224.2" y="2419.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="227.2" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="224.2" y="2403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="227.2" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="224.2" y="2387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="227.2" y="2398.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (20 samples, 0.43%)</title><rect x="224.4" y="2435.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="227.4" y="2446.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.09%)</title><rect x="227.2" y="2419.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="230.2" y="2430.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="228.0" y="2403.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="231.0" y="2414.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="228.2" y="2419.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="231.2" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="228.8" y="2403.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="231.8" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="228.8" y="2387.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.8" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="228.8" y="2371.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="231.8" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="229.0" y="2419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.0" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="229.0" y="2403.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.0" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="229.0" y="2387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.0" y="2398.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="229.5" y="2435.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="232.5" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="229.5" y="2419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="232.5" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="229.5" y="2403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.5" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="229.5" y="2387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="232.5" y="2398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.04%)</title><rect x="229.8" y="2435.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="232.8" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="229.8" y="2419.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="232.8" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="229.8" y="2403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.8" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="229.8" y="2387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="232.8" y="2398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="230.3" y="2435.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="233.3" y="2446.0"></text>
</g>
<g>
<title>__lll_unlock_wake (18 samples, 0.39%)</title><rect x="230.5" y="2435.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="233.5" y="2446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.26%)</title><rect x="231.6" y="2419.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="234.6" y="2430.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.26%)</title><rect x="231.6" y="2403.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.6" y="2414.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.09%)</title><rect x="233.6" y="2387.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.6" y="2398.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="233.6" y="2371.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.6" y="2382.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="233.8" y="2355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="236.8" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="234.6" y="2419.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.6" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="234.6" y="2403.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="237.6" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="234.6" y="2387.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="237.6" y="2398.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.09%)</title><rect x="235.1" y="2435.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="238.1" y="2446.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="236.1" y="2435.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="239.1" y="2446.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="236.6" y="2435.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="239.6" y="2446.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.11%)</title><rect x="236.9" y="2435.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="239.9" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="237.9" y="2419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="240.9" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="237.9" y="2403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="240.9" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="237.9" y="2387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="240.9" y="2398.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="238.2" y="2435.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="241.2" y="2446.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (7 samples, 0.15%)</title><rect x="238.4" y="2435.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="241.4" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="239.9" y="2419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="242.9" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="239.9" y="2403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="242.9" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="239.9" y="2387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.9" y="2398.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="240.2" y="2435.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="243.2" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="240.5" y="2419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.5" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="240.5" y="2403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="243.5" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="240.5" y="2387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="243.5" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="241.0" y="2435.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.0" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="241.0" y="2419.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="244.0" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="241.0" y="2403.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="244.0" y="2414.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.04%)</title><rect x="241.2" y="2435.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="244.2" y="2446.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="241.7" y="2451.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="244.7" y="2462.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="241.7" y="2435.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="244.7" y="2446.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="242.2" y="2435.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="245.2" y="2446.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.06%)</title><rect x="242.2" y="2419.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="245.2" y="2430.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="242.2" y="2403.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="245.2" y="2414.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (3 samples, 0.06%)</title><rect x="243.0" y="2451.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="246.0" y="2462.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (183 samples, 3.94%)</title><rect x="243.8" y="2451.0" width="46.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="246.8" y="2462.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (169 samples, 3.64%)</title><rect x="246.8" y="2435.0" width="43.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="249.8" y="2446.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (169 samples, 3.64%)</title><rect x="246.8" y="2419.0" width="43.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="249.8" y="2430.0">do_s..</text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="250.1" y="2403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="253.1" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="250.4" y="2403.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.4" y="2414.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="250.4" y="2387.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="253.4" y="2398.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="250.4" y="2371.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.4" y="2382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="250.4" y="2355.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.4" y="2366.0"></text>
</g>
<g>
<title>ktime_add_safe (2 samples, 0.04%)</title><rect x="250.6" y="2403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.6" y="2414.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="251.1" y="2403.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.1" y="2414.0"></text>
</g>
<g>
<title>sys_futex (149 samples, 3.21%)</title><rect x="251.9" y="2403.0" width="37.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.9" y="2414.0">sys..</text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.04%)</title><rect x="252.4" y="2387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="255.4" y="2398.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.06%)</title><rect x="252.9" y="2387.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.9" y="2398.0"></text>
</g>
<g>
<title>do_futex (131 samples, 2.82%)</title><rect x="253.7" y="2387.0" width="33.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="256.7" y="2398.0">do..</text>
</g>
<g>
<title>futex_wait (124 samples, 2.67%)</title><rect x="255.2" y="2371.0" width="31.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="258.2" y="2382.0">fu..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="255.5" y="2355.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="258.5" y="2366.0"></text>
</g>
<g>
<title>futex_wait_queue_me (99 samples, 2.13%)</title><rect x="255.7" y="2355.0" width="25.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="258.7" y="2366.0">f..</text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="256.2" y="2339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="259.2" y="2350.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (28 samples, 0.60%)</title><rect x="256.7" y="2339.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="259.7" y="2350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.56%)</title><rect x="257.0" y="2323.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.0" y="2334.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.20 (1 samples, 0.02%)</title><rect x="263.6" y="2323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="266.6" y="2334.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="263.6" y="2307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="266.6" y="2318.0"></text>
</g>
<g>
<title>plist_add (5 samples, 0.11%)</title><rect x="263.9" y="2339.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.9" y="2350.0"></text>
</g>
<g>
<title>schedule (62 samples, 1.34%)</title><rect x="265.1" y="2339.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="268.1" y="2350.0"></text>
</g>
<g>
<title>__schedule (60 samples, 1.29%)</title><rect x="265.6" y="2323.0" width="15.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="268.6" y="2334.0"></text>
</g>
<g>
<title>finish_task_switch (57 samples, 1.23%)</title><rect x="266.4" y="2307.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.4" y="2318.0"></text>
</g>
<g>
<title>futex_wait_setup (15 samples, 0.32%)</title><rect x="280.9" y="2355.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.9" y="2366.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="283.2" y="2339.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="286.2" y="2350.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.13 (1 samples, 0.02%)</title><rect x="283.2" y="2323.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="286.2" y="2334.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.11%)</title><rect x="283.4" y="2339.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="286.4" y="2350.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="284.7" y="2355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="287.7" y="2366.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.04%)</title><rect x="285.2" y="2355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="288.2" y="2366.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="285.2" y="2339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.2" y="2350.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="285.5" y="2339.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="288.5" y="2350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="285.5" y="2323.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="288.5" y="2334.0"></text>
</g>
<g>
<title>hrtimer_init (3 samples, 0.06%)</title><rect x="285.7" y="2355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.7" y="2366.0"></text>
</g>
<g>
<title>__hrtimer_init (3 samples, 0.06%)</title><rect x="285.7" y="2339.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.7" y="2350.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="286.5" y="2355.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="289.5" y="2366.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="286.7" y="2371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="289.7" y="2382.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.06%)</title><rect x="287.0" y="2387.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.0" y="2398.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.09%)</title><rect x="287.8" y="2387.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.8" y="2398.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (2 samples, 0.04%)</title><rect x="288.3" y="2371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="291.3" y="2382.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (2 samples, 0.04%)</title><rect x="288.3" y="2355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="291.3" y="2366.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (4 samples, 0.09%)</title><rect x="288.8" y="2387.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="291.8" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="289.8" y="2435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="292.8" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="289.8" y="2419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="292.8" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="289.8" y="2403.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.8" y="2414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.17%)</title><rect x="290.3" y="2451.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="293.3" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="291.8" y="2435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="294.8" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="291.8" y="2419.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.8" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="291.8" y="2403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="294.8" y="2414.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="292.3" y="2451.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="295.3" y="2462.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="292.6" y="2451.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="295.6" y="2462.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="293.1" y="2451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="296.1" y="2462.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="293.4" y="2451.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="296.4" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="293.9" y="2451.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="296.9" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="293.9" y="2435.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="296.9" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="293.9" y="2419.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="296.9" y="2430.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.06%)</title><rect x="294.1" y="2467.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="297.1" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="294.6" y="2451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.6" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="294.6" y="2435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="297.6" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="294.6" y="2419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.6" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.09%)</title><rect x="294.9" y="2467.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.9" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.09%)</title><rect x="294.9" y="2451.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="297.9" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.09%)</title><rect x="294.9" y="2435.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="297.9" y="2446.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="295.9" y="2483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="298.9" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="295.9" y="2467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.9" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="295.9" y="2451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="298.9" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="295.9" y="2435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="298.9" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="296.2" y="2483.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.2" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="296.2" y="2467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="299.2" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="296.2" y="2451.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="299.2" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="296.4" y="2531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.4" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="296.4" y="2515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="299.4" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="296.4" y="2499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="299.4" y="2510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$258/656676728.run (380 samples, 8.19%)</title><rect x="296.7" y="2547.0" width="96.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.7" y="2558.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (379 samples, 8.17%)</title><rect x="296.9" y="2531.0" width="96.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.9" y="2542.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (379 samples, 8.17%)</title><rect x="296.9" y="2515.0" width="96.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.9" y="2526.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (375 samples, 8.08%)</title><rect x="297.4" y="2499.0" width="95.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.4" y="2510.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (375 samples, 8.08%)</title><rect x="297.4" y="2483.0" width="95.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.4" y="2494.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (375 samples, 8.08%)</title><rect x="297.4" y="2467.0" width="95.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.4" y="2478.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (375 samples, 8.08%)</title><rect x="297.4" y="2451.0" width="95.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.4" y="2462.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (375 samples, 8.08%)</title><rect x="297.4" y="2435.0" width="95.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.4" y="2446.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (375 samples, 8.08%)</title><rect x="297.4" y="2419.0" width="95.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.4" y="2430.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (375 samples, 8.08%)</title><rect x="297.4" y="2403.0" width="95.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.4" y="2414.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (2 samples, 0.04%)</title><rect x="297.4" y="2387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.4" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="297.4" y="2371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.4" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (373 samples, 8.04%)</title><rect x="297.9" y="2387.0" width="94.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.9" y="2398.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (62 samples, 1.34%)</title><rect x="298.2" y="2371.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.2" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (52 samples, 1.12%)</title><rect x="299.0" y="2355.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.0" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (52 samples, 1.12%)</title><rect x="299.0" y="2339.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.0" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (52 samples, 1.12%)</title><rect x="299.0" y="2323.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.0" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 1.10%)</title><rect x="299.2" y="2307.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.2" y="2318.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="299.7" y="2291.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="302.7" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="299.7" y="2275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="302.7" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="299.7" y="2259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="302.7" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="299.7" y="2243.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.7" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (22 samples, 0.47%)</title><rect x="300.0" y="2291.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.0" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="300.0" y="2275.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.0" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="300.0" y="2259.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.0" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9 samples, 0.19%)</title><rect x="300.2" y="2275.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.2" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.19%)</title><rect x="300.2" y="2259.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.2" y="2270.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="301.5" y="2243.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="304.5" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$261/1184412742.apply (2 samples, 0.04%)</title><rect x="302.0" y="2243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.0" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$261/1184412742.apply (7 samples, 0.15%)</title><rect x="302.5" y="2275.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.5" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (7 samples, 0.15%)</title><rect x="302.5" y="2259.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.5" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (7 samples, 0.15%)</title><rect x="302.5" y="2243.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.5" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (6 samples, 0.13%)</title><rect x="302.5" y="2227.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.5" y="2238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="302.5" y="2211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.5" y="2222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="302.5" y="2195.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.5" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1742875943.get$Lambda (3 samples, 0.06%)</title><rect x="302.5" y="2179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.5" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.04%)</title><rect x="302.8" y="2163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.8" y="2174.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="303.0" y="2147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.0" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="303.0" y="2131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.0" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="303.0" y="2115.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="306.0" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.06%)</title><rect x="303.3" y="2211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.3" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.06%)</title><rect x="303.3" y="2195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.3" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="303.5" y="2179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.5" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="303.5" y="2163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.5" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (1 samples, 0.02%)</title><rect x="304.0" y="2227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.0" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/973729991.apply (4 samples, 0.09%)</title><rect x="304.3" y="2275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.3" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4 samples, 0.09%)</title><rect x="304.3" y="2259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.3" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4 samples, 0.09%)</title><rect x="304.3" y="2243.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.3" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (4 samples, 0.09%)</title><rect x="304.3" y="2227.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.3" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (4 samples, 0.09%)</title><rect x="304.3" y="2211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.3" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.09%)</title><rect x="304.3" y="2195.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.3" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/1855941268.run (4 samples, 0.09%)</title><rect x="304.3" y="2179.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.3" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (4 samples, 0.09%)</title><rect x="304.3" y="2163.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.3" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (4 samples, 0.09%)</title><rect x="304.3" y="2147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.3" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (4 samples, 0.09%)</title><rect x="304.3" y="2131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.3" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="304.3" y="2115.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.3" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="304.3" y="2099.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.3" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.09%)</title><rect x="304.3" y="2083.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.3" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.09%)</title><rect x="304.3" y="2067.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.3" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.09%)</title><rect x="304.3" y="2051.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.3" y="2062.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (1 samples, 0.02%)</title><rect x="304.3" y="2035.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="307.3" y="2046.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.02%)</title><rect x="304.3" y="2019.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="307.3" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (3 samples, 0.06%)</title><rect x="304.6" y="2035.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.6" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (3 samples, 0.06%)</title><rect x="304.6" y="2019.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (3 samples, 0.06%)</title><rect x="304.6" y="2003.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.06%)</title><rect x="304.6" y="1987.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.06%)</title><rect x="304.6" y="1971.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.06%)</title><rect x="304.6" y="1955.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.6" y="1966.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.06%)</title><rect x="304.6" y="1939.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.6" y="1950.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.06%)</title><rect x="304.6" y="1923.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="307.6" y="1934.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.06%)</title><rect x="304.6" y="1907.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="307.6" y="1918.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.06%)</title><rect x="304.6" y="1891.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="307.6" y="1902.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.02%)</title><rect x="304.6" y="1875.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="307.6" y="1886.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.04%)</title><rect x="304.8" y="1875.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="307.8" y="1886.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.02%)</title><rect x="305.1" y="1859.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="308.1" y="1870.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="305.3" y="2275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.3" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="305.3" y="2259.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="308.3" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="305.3" y="2243.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="308.3" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (20 samples, 0.43%)</title><rect x="305.6" y="2291.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.6" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.13%)</title><rect x="305.8" y="2275.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.8" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.13%)</title><rect x="305.8" y="2259.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.8" y="2270.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.11%)</title><rect x="305.8" y="2243.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="308.8" y="2254.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="306.6" y="2227.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="309.6" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="306.6" y="2211.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.6" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="306.6" y="2195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="309.6" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$236/945859830.apply (1 samples, 0.02%)</title><rect x="307.1" y="2243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.1" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 0.26%)</title><rect x="307.4" y="2275.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.4" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$236/945859830.apply (12 samples, 0.26%)</title><rect x="307.4" y="2259.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.4" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.02%)</title><rect x="307.4" y="2243.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.4" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (11 samples, 0.24%)</title><rect x="307.6" y="2243.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.6" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (11 samples, 0.24%)</title><rect x="307.6" y="2227.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.6" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/1450507688.apply (8 samples, 0.17%)</title><rect x="307.9" y="2211.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.9" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.17%)</title><rect x="307.9" y="2195.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.9" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="307.9" y="2179.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.9" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="307.9" y="2163.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.9" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.02%)</title><rect x="308.1" y="2179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.1" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="308.1" y="2163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.1" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="308.1" y="2147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.1" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="308.1" y="2131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="311.1" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="308.1" y="2115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="311.1" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="308.1" y="2099.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="311.1" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (6 samples, 0.13%)</title><rect x="308.4" y="2179.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.4" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.02%)</title><rect x="308.4" y="2163.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.4" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.02%)</title><rect x="308.4" y="2147.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.4" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.09%)</title><rect x="308.6" y="2163.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.6" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.09%)</title><rect x="308.6" y="2147.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.6" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.09%)</title><rect x="308.6" y="2131.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.6" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.09%)</title><rect x="308.6" y="2115.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.6" y="2126.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="309.4" y="2099.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="312.4" y="2110.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="309.4" y="2083.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="312.4" y="2094.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="309.4" y="2067.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.4" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.02%)</title><rect x="309.6" y="2163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.6" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.02%)</title><rect x="309.6" y="2147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.6" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="309.6" y="2131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="312.6" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="309.6" y="2115.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="312.6" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="309.6" y="2099.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="312.6" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1069917486.apply (2 samples, 0.04%)</title><rect x="309.9" y="2211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.9" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.04%)</title><rect x="309.9" y="2195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.9" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2 samples, 0.04%)</title><rect x="309.9" y="2179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.9" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="309.9" y="2163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.9" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.02%)</title><rect x="309.9" y="2147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.9" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="309.9" y="2131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.9" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/1450507688.apply (1 samples, 0.02%)</title><rect x="309.9" y="2115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.9" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="310.2" y="2147.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.2" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="310.2" y="2131.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.2" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.02%)</title><rect x="310.2" y="2115.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.2" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.02%)</title><rect x="310.2" y="2099.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.2" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (1 samples, 0.02%)</title><rect x="310.2" y="2083.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.2" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/logger/LazyLoggers$LazyLoggerWrapper.wrapped (1 samples, 0.02%)</title><rect x="310.2" y="2067.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.2" y="2078.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="310.4" y="2275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="313.4" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="310.4" y="2259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.4" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="310.4" y="2243.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.4" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.06%)</title><rect x="310.7" y="2291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.7" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="311.2" y="2275.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.2" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="311.2" y="2259.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.2" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="311.2" y="2243.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="314.2" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="311.4" y="2291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.4" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="311.4" y="2275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.4" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="311.4" y="2259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.4" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="311.4" y="2243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.4" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="311.4" y="2227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.4" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="311.4" y="2211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.4" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="311.4" y="2195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.4" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="311.4" y="2179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.4" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="311.4" y="2163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.4" y="2174.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="311.4" y="2147.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="314.4" y="2158.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="311.4" y="2131.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="314.4" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/596643520.get (1 samples, 0.02%)</title><rect x="311.7" y="2291.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.7" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="311.9" y="2291.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.9" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="311.9" y="2275.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="314.9" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="311.9" y="2259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="314.9" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (4 samples, 0.09%)</title><rect x="312.2" y="2355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.2" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.09%)</title><rect x="312.2" y="2339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.2" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (4 samples, 0.09%)</title><rect x="312.2" y="2323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.2" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.04%)</title><rect x="312.4" y="2307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.4" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (1 samples, 0.02%)</title><rect x="312.9" y="2307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.9" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.02%)</title><rect x="313.2" y="2355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.2" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="313.2" y="2339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.2" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="313.2" y="2323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.2" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="313.2" y="2307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="316.2" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="313.5" y="2355.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="316.5" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="313.5" y="2339.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.5" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="313.5" y="2323.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="316.5" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (310 samples, 6.68%)</title><rect x="314.0" y="2371.0" width="78.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.0" y="2382.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (310 samples, 6.68%)</title><rect x="314.0" y="2355.0" width="78.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.0" y="2366.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (310 samples, 6.68%)</title><rect x="314.0" y="2339.0" width="78.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.0" y="2350.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (3 samples, 0.06%)</title><rect x="314.5" y="2323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.5" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="315.0" y="2307.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="318.0" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="315.0" y="2291.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.0" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="315.0" y="2275.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="318.0" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (304 samples, 6.55%)</title><rect x="315.2" y="2323.0" width="77.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.2" y="2334.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$263/696421407.run (3 samples, 0.06%)</title><rect x="315.2" y="2307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.2" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.06%)</title><rect x="315.2" y="2291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.2" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.02%)</title><rect x="315.5" y="2275.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.5" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.02%)</title><rect x="315.5" y="2259.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.5" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="315.5" y="2243.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.5" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.02%)</title><rect x="315.7" y="2275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.7" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (301 samples, 6.49%)</title><rect x="316.0" y="2307.0" width="76.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.0" y="2318.0">jdk/inte..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (295 samples, 6.36%)</title><rect x="316.0" y="2291.0" width="75.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.0" y="2302.0">java/nio..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (295 samples, 6.36%)</title><rect x="316.0" y="2275.0" width="75.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.0" y="2286.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (295 samples, 6.36%)</title><rect x="316.0" y="2259.0" width="75.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.0" y="2270.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (294 samples, 6.34%)</title><rect x="316.3" y="2243.0" width="74.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.3" y="2254.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.06%)</title><rect x="316.3" y="2227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.3" y="2238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.06%)</title><rect x="316.3" y="2211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.3" y="2222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (3 samples, 0.06%)</title><rect x="316.3" y="2195.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.3" y="2206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (3 samples, 0.06%)</title><rect x="317.0" y="2227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.0" y="2238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="317.0" y="2211.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.0" y="2222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.06%)</title><rect x="317.0" y="2195.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.0" y="2206.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (288 samples, 6.21%)</title><rect x="317.8" y="2227.0" width="73.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.8" y="2238.0">sun/nio/..</text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="318.8" y="2211.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="321.8" y="2222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (281 samples, 6.06%)</title><rect x="319.3" y="2211.0" width="71.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.3" y="2222.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (3 samples, 0.06%)</title><rect x="319.8" y="2195.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="322.8" y="2206.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="320.3" y="2179.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="323.3" y="2190.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="320.3" y="2163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="323.3" y="2174.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="320.3" y="2147.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.3" y="2158.0"></text>
</g>
<g>
<title>[unknown] (274 samples, 5.91%)</title><rect x="320.6" y="2195.0" width="69.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="323.6" y="2206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (274 samples, 5.91%)</title><rect x="320.6" y="2179.0" width="69.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="323.6" y="2190.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (274 samples, 5.91%)</title><rect x="320.6" y="2163.0" width="69.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="323.6" y="2174.0">__GI___..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (273 samples, 5.88%)</title><rect x="320.8" y="2147.0" width="69.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.8" y="2158.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (273 samples, 5.88%)</title><rect x="320.8" y="2131.0" width="69.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="323.8" y="2142.0">do_sysc..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="321.6" y="2115.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="324.6" y="2126.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="321.6" y="2099.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="324.6" y="2110.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="321.6" y="2083.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.6" y="2094.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="321.6" y="2067.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="324.6" y="2078.0"></text>
</g>
<g>
<title>sys_writev (269 samples, 5.80%)</title><rect x="321.9" y="2115.0" width="68.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="324.9" y="2126.0">sys_wri..</text>
</g>
<g>
<title>do_writev (267 samples, 5.76%)</title><rect x="321.9" y="2099.0" width="67.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.9" y="2110.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.11%)</title><rect x="321.9" y="2083.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.9" y="2094.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="321.9" y="2067.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="324.9" y="2078.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="322.1" y="2051.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.1" y="2062.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="323.1" y="2083.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="326.1" y="2094.0"></text>
</g>
<g>
<title>import_iovec (1 samples, 0.02%)</title><rect x="323.4" y="2083.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="326.4" y="2094.0"></text>
</g>
<g>
<title>vfs_writev (260 samples, 5.60%)</title><rect x="323.6" y="2083.0" width="66.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="326.6" y="2094.0">vfs_wri..</text>
</g>
<g>
<title>do_iter_write (255 samples, 5.50%)</title><rect x="323.9" y="2067.0" width="64.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="326.9" y="2078.0">do_iter..</text>
</g>
<g>
<title>do_iter_readv_writev (246 samples, 5.30%)</title><rect x="324.9" y="2051.0" width="62.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="327.9" y="2062.0">do_ite..</text>
</g>
<g>
<title>sock_write_iter (246 samples, 5.30%)</title><rect x="324.9" y="2035.0" width="62.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="327.9" y="2046.0">sock_w..</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="325.4" y="2019.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.4" y="2030.0"></text>
</g>
<g>
<title>sock_sendmsg (243 samples, 5.24%)</title><rect x="325.7" y="2019.0" width="61.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.7" y="2030.0">sock_s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="325.7" y="2003.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="328.7" y="2014.0"></text>
</g>
<g>
<title>inet_sendmsg (236 samples, 5.09%)</title><rect x="326.2" y="2003.0" width="60.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="329.2" y="2014.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (235 samples, 5.07%)</title><rect x="326.4" y="1987.0" width="59.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.4" y="1998.0">tcp_se..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="326.4" y="1971.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="329.4" y="1982.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="326.7" y="1971.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="329.7" y="1982.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="326.7" y="1955.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="329.7" y="1966.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="326.9" y="1971.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="329.9" y="1982.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (231 samples, 4.98%)</title><rect x="327.2" y="1971.0" width="58.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="330.2" y="1982.0">tcp_se..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="327.7" y="1955.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="330.7" y="1966.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="328.0" y="1955.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="331.0" y="1966.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="328.0" y="1939.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="331.0" y="1950.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="328.2" y="1955.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.2" y="1966.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="328.5" y="1955.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.5" y="1966.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.24%)</title><rect x="328.7" y="1955.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="331.7" y="1966.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.19%)</title><rect x="328.7" y="1939.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="331.7" y="1950.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.06%)</title><rect x="329.0" y="1923.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.0" y="1934.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (2 samples, 0.04%)</title><rect x="329.7" y="1923.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="332.7" y="1934.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="329.7" y="1907.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="332.7" y="1918.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="330.0" y="1891.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.0" y="1902.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="330.2" y="1923.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="333.2" y="1934.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="330.5" y="1907.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="333.5" y="1918.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="331.0" y="1939.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="334.0" y="1950.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="331.5" y="1955.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="334.5" y="1966.0"></text>
</g>
<g>
<title>tcp_push (205 samples, 4.42%)</title><rect x="331.8" y="1955.0" width="52.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="334.8" y="1966.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (205 samples, 4.42%)</title><rect x="331.8" y="1939.0" width="52.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="334.8" y="1950.0">__tcp..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.28 (3 samples, 0.06%)</title><rect x="331.8" y="1923.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="334.8" y="1934.0"></text>
</g>
<g>
<title>tcp_write_xmit (202 samples, 4.35%)</title><rect x="332.5" y="1923.0" width="51.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="335.5" y="1934.0">tcp_w..</text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="332.5" y="1907.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.5" y="1918.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="332.5" y="1891.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.5" y="1902.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.02%)</title><rect x="332.5" y="1875.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="335.5" y="1886.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="332.5" y="1859.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="335.5" y="1870.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="332.8" y="1907.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.8" y="1918.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="332.8" y="1891.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="335.8" y="1902.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="332.8" y="1875.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="335.8" y="1886.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="332.8" y="1859.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="335.8" y="1870.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="333.0" y="1907.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="336.0" y="1918.0"></text>
</g>
<g>
<title>tcp_transmit_skb (198 samples, 4.27%)</title><rect x="333.3" y="1907.0" width="50.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.3" y="1918.0">tcp_t..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="333.6" y="1891.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.6" y="1902.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.04%)</title><rect x="333.8" y="1891.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.8" y="1902.0"></text>
</g>
<g>
<title>ip_queue_xmit (192 samples, 4.14%)</title><rect x="334.3" y="1891.0" width="48.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="337.3" y="1902.0">ip_q..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="334.3" y="1875.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="337.3" y="1886.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="334.6" y="1875.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="337.6" y="1886.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="334.6" y="1859.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="337.6" y="1870.0"></text>
</g>
<g>
<title>ip_local_out (190 samples, 4.10%)</title><rect x="334.8" y="1875.0" width="48.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="337.8" y="1886.0">ip_l..</text>
</g>
<g>
<title>ip_output (190 samples, 4.10%)</title><rect x="334.8" y="1859.0" width="48.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.8" y="1870.0">ip_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="334.8" y="1843.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="337.8" y="1854.0"></text>
</g>
<g>
<title>ip_finish_output (188 samples, 4.05%)</title><rect x="335.1" y="1843.0" width="47.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.1" y="1854.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="335.3" y="1827.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.3" y="1838.0"></text>
</g>
<g>
<title>ip_finish_output2 (186 samples, 4.01%)</title><rect x="335.6" y="1827.0" width="47.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.6" y="1838.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.04%)</title><rect x="335.8" y="1811.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="338.8" y="1822.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (176 samples, 3.79%)</title><rect x="336.4" y="1811.0" width="44.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.4" y="1822.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.17 (176 samples, 3.79%)</title><rect x="336.4" y="1795.0" width="44.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="339.4" y="1806.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (175 samples, 3.77%)</title><rect x="336.6" y="1779.0" width="44.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="339.6" y="1790.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (175 samples, 3.77%)</title><rect x="336.6" y="1763.0" width="44.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.6" y="1774.0">__so..</text>
</g>
<g>
<title>net_rx_action (168 samples, 3.62%)</title><rect x="338.4" y="1747.0" width="42.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="341.4" y="1758.0">net_..</text>
</g>
<g>
<title>process_backlog (168 samples, 3.62%)</title><rect x="338.4" y="1731.0" width="42.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="341.4" y="1742.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (166 samples, 3.58%)</title><rect x="338.9" y="1715.0" width="42.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="341.9" y="1726.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (166 samples, 3.58%)</title><rect x="338.9" y="1699.0" width="42.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="341.9" y="1710.0">__ne..</text>
</g>
<g>
<title>ip_rcv (161 samples, 3.47%)</title><rect x="339.9" y="1683.0" width="41.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="342.9" y="1694.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (160 samples, 3.45%)</title><rect x="340.2" y="1667.0" width="40.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.2" y="1678.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (157 samples, 3.38%)</title><rect x="340.9" y="1651.0" width="40.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="343.9" y="1662.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (155 samples, 3.34%)</title><rect x="341.2" y="1635.0" width="39.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.2" y="1646.0">ip_..</text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.33 (1 samples, 0.02%)</title><rect x="341.4" y="1619.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="344.4" y="1630.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="341.7" y="1619.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="344.7" y="1630.0"></text>
</g>
<g>
<title>tcp_v4_rcv (152 samples, 3.28%)</title><rect x="341.9" y="1619.0" width="38.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="344.9" y="1630.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.09%)</title><rect x="342.7" y="1603.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="345.7" y="1614.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.33 (2 samples, 0.04%)</title><rect x="343.7" y="1603.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="346.7" y="1614.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="344.2" y="1603.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.2" y="1614.0"></text>
</g>
<g>
<title>tcp_filter (1 samples, 0.02%)</title><rect x="344.7" y="1603.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.7" y="1614.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="344.7" y="1587.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.7" y="1598.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="344.7" y="1571.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.7" y="1582.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (140 samples, 3.02%)</title><rect x="345.0" y="1603.0" width="35.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="348.0" y="1614.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (140 samples, 3.02%)</title><rect x="345.0" y="1587.0" width="35.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="348.0" y="1598.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.11%)</title><rect x="345.5" y="1571.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="348.5" y="1582.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="345.5" y="1555.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.5" y="1566.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.06%)</title><rect x="346.0" y="1555.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.0" y="1566.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="346.0" y="1539.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.0" y="1550.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="346.0" y="1523.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="349.0" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="346.0" y="1507.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.0" y="1518.0"></text>
</g>
<g>
<title>get_seconds (2 samples, 0.04%)</title><rect x="346.8" y="1571.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="349.8" y="1582.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 0.52%)</title><rect x="347.3" y="1571.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="350.3" y="1582.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.04%)</title><rect x="347.8" y="1555.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="350.8" y="1566.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.33 (1 samples, 0.02%)</title><rect x="348.3" y="1555.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="351.3" y="1566.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (18 samples, 0.39%)</title><rect x="348.6" y="1555.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="351.6" y="1566.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.19%)</title><rect x="350.3" y="1539.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.3" y="1550.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="350.3" y="1523.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="353.3" y="1534.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="350.6" y="1507.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.6" y="1518.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="350.6" y="1491.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="353.6" y="1502.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.61 (1 samples, 0.02%)</title><rect x="350.6" y="1475.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.6" y="1486.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.09%)</title><rect x="350.8" y="1523.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.8" y="1534.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="351.1" y="1507.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="354.1" y="1518.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="351.4" y="1507.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="354.4" y="1518.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="351.6" y="1507.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.6" y="1518.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="351.9" y="1523.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.9" y="1534.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="352.1" y="1523.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.1" y="1534.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="352.6" y="1539.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="355.6" y="1550.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="352.9" y="1539.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.9" y="1550.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="353.1" y="1555.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.1" y="1566.0"></text>
</g>
<g>
<title>tcp_data_queue (105 samples, 2.26%)</title><rect x="353.4" y="1571.0" width="26.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.4" y="1582.0">t..</text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.04%)</title><rect x="353.9" y="1555.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.9" y="1566.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="354.4" y="1555.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.4" y="1566.0"></text>
</g>
<g>
<title>sock_def_readable (97 samples, 2.09%)</title><rect x="354.7" y="1555.0" width="24.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.7" y="1566.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="355.2" y="1539.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.2" y="1550.0"></text>
</g>
<g>
<title>__wake_up_sync_key (94 samples, 2.03%)</title><rect x="355.4" y="1539.0" width="23.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="358.4" y="1550.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (94 samples, 2.03%)</title><rect x="355.4" y="1523.0" width="23.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.4" y="1534.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (94 samples, 2.03%)</title><rect x="355.4" y="1507.0" width="23.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="358.4" y="1518.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="379.3" y="1555.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.3" y="1566.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.39 (2 samples, 0.04%)</title><rect x="379.6" y="1539.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.6" y="1550.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="380.1" y="1571.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.1" y="1582.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="380.4" y="1571.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.4" y="1582.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="380.6" y="1635.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="383.6" y="1646.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="380.9" y="1683.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.9" y="1694.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.15%)</title><rect x="381.1" y="1811.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="384.1" y="1822.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.13%)</title><rect x="381.1" y="1795.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.1" y="1806.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="381.4" y="1779.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.4" y="1790.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="381.4" y="1763.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.4" y="1774.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="381.4" y="1747.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="384.4" y="1758.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="381.4" y="1731.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.4" y="1742.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="381.6" y="1779.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.6" y="1790.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="381.9" y="1779.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="384.9" y="1790.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="382.1" y="1779.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.1" y="1790.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="382.1" y="1763.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="385.1" y="1774.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="382.4" y="1763.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.4" y="1774.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="382.6" y="1795.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.6" y="1806.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="382.9" y="1843.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="385.9" y="1854.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="383.2" y="1891.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.2" y="1902.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="383.7" y="1907.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="386.7" y="1918.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.06%)</title><rect x="383.9" y="1955.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="386.9" y="1966.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.11%)</title><rect x="384.7" y="1955.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.7" y="1966.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="384.7" y="1939.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.7" y="1950.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="384.9" y="1939.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.9" y="1950.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.06%)</title><rect x="385.2" y="1939.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="388.2" y="1950.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.06%)</title><rect x="385.2" y="1923.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.2" y="1934.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.02%)</title><rect x="385.7" y="1907.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="388.7" y="1918.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="386.0" y="1971.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="389.0" y="1982.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.11%)</title><rect x="386.2" y="2003.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.2" y="2014.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.11%)</title><rect x="386.2" y="1987.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="389.2" y="1998.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.11%)</title><rect x="386.2" y="1971.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="389.2" y="1982.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="387.0" y="1955.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="390.0" y="1966.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.02%)</title><rect x="387.2" y="1939.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.2" y="1950.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.11%)</title><rect x="387.5" y="2051.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="390.5" y="2062.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.09%)</title><rect x="387.7" y="2035.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="390.7" y="2046.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="387.7" y="2019.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="390.7" y="2030.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="387.7" y="2003.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="390.7" y="2014.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.04%)</title><rect x="387.7" y="1987.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="390.7" y="1998.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="388.2" y="2019.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="391.2" y="2030.0"></text>
</g>
<g>
<title>import_iovec (4 samples, 0.09%)</title><rect x="388.7" y="2067.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="391.7" y="2078.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="388.7" y="2051.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="391.7" y="2062.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (3 samples, 0.06%)</title><rect x="389.0" y="2051.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="392.0" y="2062.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="389.3" y="2035.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="392.3" y="2046.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="389.5" y="2035.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="392.5" y="2046.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="389.8" y="2099.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="392.8" y="2110.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.02%)</title><rect x="390.0" y="2099.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.0" y="2110.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="390.3" y="2195.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="393.3" y="2206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (1 samples, 0.02%)</title><rect x="390.8" y="2211.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.8" y="2222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.11%)</title><rect x="391.0" y="2291.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.0" y="2302.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (3 samples, 0.06%)</title><rect x="391.5" y="2275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.5" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="391.8" y="2259.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.8" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="391.8" y="2243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.8" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="391.8" y="2227.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.8" y="2238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="392.3" y="2291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.3" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="392.6" y="2323.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="395.6" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="392.6" y="2307.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="395.6" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="392.6" y="2291.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.6" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="392.8" y="2499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="395.8" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="392.8" y="2483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="395.8" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="392.8" y="2467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.8" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (538 samples, 11.60%)</title><rect x="393.3" y="2547.0" width="136.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.3" y="2558.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (534 samples, 11.51%)</title><rect x="394.1" y="2531.0" width="135.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.1" y="2542.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="394.3" y="2515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.3" y="2526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="394.3" y="2499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.3" y="2510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (238 samples, 5.13%)</title><rect x="394.6" y="2515.0" width="60.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.6" y="2526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (238 samples, 5.13%)</title><rect x="394.6" y="2499.0" width="60.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.6" y="2510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (238 samples, 5.13%)</title><rect x="394.6" y="2483.0" width="60.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.6" y="2494.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (50 samples, 1.08%)</title><rect x="394.6" y="2467.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.6" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (50 samples, 1.08%)</title><rect x="394.6" y="2451.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.6" y="2462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (50 samples, 1.08%)</title><rect x="394.6" y="2435.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.6" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (50 samples, 1.08%)</title><rect x="394.6" y="2419.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.6" y="2430.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="394.6" y="2403.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="397.6" y="2414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="394.9" y="2403.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="397.9" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (46 samples, 0.99%)</title><rect x="395.1" y="2403.0" width="11.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.1" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (46 samples, 0.99%)</title><rect x="395.1" y="2387.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.1" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (45 samples, 0.97%)</title><rect x="395.4" y="2371.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.4" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (42 samples, 0.91%)</title><rect x="395.9" y="2355.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.9" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="395.9" y="2339.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.9" y="2350.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="395.9" y="2323.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.9" y="2334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="395.9" y="2307.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.9" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (41 samples, 0.88%)</title><rect x="396.1" y="2339.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.1" y="2350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (39 samples, 0.84%)</title><rect x="396.6" y="2323.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.6" y="2334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (31 samples, 0.67%)</title><rect x="398.4" y="2307.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.4" y="2318.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="398.4" y="2291.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="401.4" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="398.4" y="2275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.4" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="398.4" y="2259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="401.4" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="398.4" y="2243.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.4" y="2254.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.63%)</title><rect x="398.7" y="2291.0" width="7.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="401.7" y="2302.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (1 samples, 0.02%)</title><rect x="398.7" y="2275.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="401.7" y="2286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="398.7" y="2259.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="401.7" y="2270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="398.7" y="2243.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="401.7" y="2254.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="398.7" y="2227.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="401.7" y="2238.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="398.7" y="2211.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.7" y="2222.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="398.7" y="2195.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="401.7" y="2206.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="398.7" y="2179.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="401.7" y="2190.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="398.7" y="2163.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="401.7" y="2174.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="398.7" y="2147.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.7" y="2158.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="398.7" y="2131.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="401.7" y="2142.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="398.7" y="2115.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="401.7" y="2126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="398.7" y="2099.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.7" y="2110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="398.7" y="2083.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.7" y="2094.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="398.7" y="2067.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.7" y="2078.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="398.9" y="2275.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="401.9" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="398.9" y="2259.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="401.9" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="398.9" y="2243.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="401.9" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="398.9" y="2227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="401.9" y="2238.0"></text>
</g>
<g>
<title>__write (27 samples, 0.58%)</title><rect x="399.2" y="2275.0" width="6.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="402.2" y="2286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.58%)</title><rect x="399.2" y="2259.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.2" y="2270.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.58%)</title><rect x="399.2" y="2243.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="402.2" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="399.2" y="2227.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.2" y="2238.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="399.2" y="2211.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="402.2" y="2222.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="399.2" y="2195.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="402.2" y="2206.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="399.2" y="2179.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="402.2" y="2190.0"></text>
</g>
<g>
<title>sys_write (25 samples, 0.54%)</title><rect x="399.4" y="2227.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.4" y="2238.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="399.4" y="2211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="402.4" y="2222.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="399.4" y="2195.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="402.4" y="2206.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="399.4" y="2179.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="402.4" y="2190.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="399.7" y="2211.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.7" y="2222.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 0.50%)</title><rect x="399.9" y="2211.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="402.9" y="2222.0"></text>
</g>
<g>
<title>__vfs_write (17 samples, 0.37%)</title><rect x="400.5" y="2195.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="403.5" y="2206.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.37%)</title><rect x="400.5" y="2179.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="403.5" y="2190.0"></text>
</g>
<g>
<title>pipe_write (17 samples, 0.37%)</title><rect x="400.5" y="2163.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="403.5" y="2174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.32%)</title><rect x="400.5" y="2147.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="403.5" y="2158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.32%)</title><rect x="400.5" y="2131.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="403.5" y="2142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.32%)</title><rect x="400.5" y="2115.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.5" y="2126.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="404.3" y="2147.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="407.3" y="2158.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="404.3" y="2131.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="407.3" y="2142.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.02%)</title><rect x="404.5" y="2147.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="407.5" y="2158.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="404.5" y="2131.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="407.5" y="2142.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="404.8" y="2195.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="407.8" y="2206.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.06%)</title><rect x="405.0" y="2195.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="408.0" y="2206.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="405.3" y="2179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="408.3" y="2190.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="405.5" y="2163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="408.5" y="2174.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="405.5" y="2147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="408.5" y="2158.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="405.8" y="2227.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="408.8" y="2238.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="406.0" y="2291.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="409.0" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="406.3" y="2307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.3" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="406.3" y="2291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="409.3" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="406.3" y="2275.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="409.3" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="406.6" y="2355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.6" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="406.6" y="2339.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="409.6" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="406.6" y="2323.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.6" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="406.8" y="2403.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="409.8" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="406.8" y="2387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="409.8" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="406.8" y="2371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.8" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.09%)</title><rect x="407.3" y="2467.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.3" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="407.3" y="2451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.3" y="2462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="407.3" y="2435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.3" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.04%)</title><rect x="407.8" y="2451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.8" y="2462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.04%)</title><rect x="407.8" y="2435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.8" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.02%)</title><rect x="408.1" y="2419.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.1" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.02%)</title><rect x="408.1" y="2403.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.1" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (1 samples, 0.02%)</title><rect x="408.1" y="2387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="411.1" y="2398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="408.1" y="2371.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.1" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="408.1" y="2355.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.1" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.02%)</title><rect x="408.1" y="2339.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.1" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (184 samples, 3.97%)</title><rect x="408.3" y="2467.0" width="46.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.3" y="2478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (184 samples, 3.97%)</title><rect x="408.3" y="2451.0" width="46.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.3" y="2462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (184 samples, 3.97%)</title><rect x="408.3" y="2435.0" width="46.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.3" y="2446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (184 samples, 3.97%)</title><rect x="408.3" y="2419.0" width="46.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.3" y="2430.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (124 samples, 2.67%)</title><rect x="408.3" y="2403.0" width="31.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.3" y="2414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (124 samples, 2.67%)</title><rect x="408.3" y="2387.0" width="31.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.3" y="2398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (124 samples, 2.67%)</title><rect x="408.3" y="2371.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.3" y="2382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (122 samples, 2.63%)</title><rect x="408.8" y="2355.0" width="31.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.8" y="2366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="408.8" y="2339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.8" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="408.8" y="2323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.8" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="408.8" y="2307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.8" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="408.8" y="2291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.8" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1742875943.apply (1 samples, 0.02%)</title><rect x="408.8" y="2275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.8" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (121 samples, 2.61%)</title><rect x="409.1" y="2339.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.1" y="2350.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (121 samples, 2.61%)</title><rect x="409.1" y="2323.0" width="30.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.1" y="2334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (121 samples, 2.61%)</title><rect x="409.1" y="2307.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.1" y="2318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (111 samples, 2.39%)</title><rect x="409.1" y="2291.0" width="28.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.1" y="2302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (111 samples, 2.39%)</title><rect x="409.1" y="2275.0" width="28.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.1" y="2286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (90 samples, 1.94%)</title><rect x="409.4" y="2259.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.4" y="2270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8 samples, 0.17%)</title><rect x="410.1" y="2243.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.1" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.17%)</title><rect x="410.1" y="2227.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.1" y="2238.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="410.1" y="2211.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="413.1" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="410.9" y="2195.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="413.9" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="410.9" y="2179.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.9" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="410.9" y="2163.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.9" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/1709003867.apply (1 samples, 0.02%)</title><rect x="411.1" y="2211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.1" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/973729991.apply (1 samples, 0.02%)</title><rect x="411.4" y="2211.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.4" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1654089402.apply (1 samples, 0.02%)</title><rect x="411.6" y="2211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.6" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="411.9" y="2211.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="414.9" y="2222.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="411.9" y="2195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="414.9" y="2206.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="411.9" y="2179.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="414.9" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/1709003867.apply (1 samples, 0.02%)</title><rect x="412.2" y="2243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.2" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.02%)</title><rect x="412.2" y="2227.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.2" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.02%)</title><rect x="412.2" y="2211.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.2" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="412.2" y="2195.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.2" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="412.2" y="2179.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.2" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="412.2" y="2163.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.2" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/973729991.apply (66 samples, 1.42%)</title><rect x="412.4" y="2243.0" width="16.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.4" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (66 samples, 1.42%)</title><rect x="412.4" y="2227.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.4" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5 samples, 0.11%)</title><rect x="412.4" y="2211.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.4" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.11%)</title><rect x="412.4" y="2195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.4" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.02%)</title><rect x="412.4" y="2179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.4" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.09%)</title><rect x="412.7" y="2179.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.7" y="2190.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="413.4" y="2163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.4" y="2174.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="413.4" y="2147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="416.4" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="413.4" y="2131.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="416.4" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (60 samples, 1.29%)</title><rect x="413.7" y="2211.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.7" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="413.7" y="2195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.7" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="413.7" y="2179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.7" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (57 samples, 1.23%)</title><rect x="414.2" y="2195.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.2" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (57 samples, 1.23%)</title><rect x="414.2" y="2179.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.2" y="2190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (24 samples, 0.52%)</title><rect x="414.2" y="2163.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.2" y="2174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (9 samples, 0.19%)</title><rect x="414.2" y="2147.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.2" y="2158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (9 samples, 0.19%)</title><rect x="414.2" y="2131.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.2" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (9 samples, 0.19%)</title><rect x="414.2" y="2115.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.2" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.11%)</title><rect x="415.2" y="2099.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.2" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.11%)</title><rect x="415.2" y="2083.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.2" y="2094.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.09%)</title><rect x="415.5" y="2067.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.5" y="2078.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.09%)</title><rect x="415.5" y="2051.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.5" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.09%)</title><rect x="415.5" y="2035.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.5" y="2046.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="416.2" y="2019.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="419.2" y="2030.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="416.2" y="2003.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="419.2" y="2014.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="416.2" y="1987.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="419.2" y="1998.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="416.5" y="2147.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.5" y="2158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.04%)</title><rect x="416.5" y="2131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.5" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.04%)</title><rect x="416.5" y="2115.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.5" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (10 samples, 0.22%)</title><rect x="417.0" y="2147.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.0" y="2158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.22%)</title><rect x="417.0" y="2131.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.0" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.22%)</title><rect x="417.0" y="2115.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.0" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.19%)</title><rect x="417.0" y="2099.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.0" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.13%)</title><rect x="417.0" y="2083.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.0" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="417.0" y="2067.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.0" y="2078.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.02%)</title><rect x="417.0" y="2051.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.0" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.09%)</title><rect x="417.2" y="2067.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.2" y="2078.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.04%)</title><rect x="417.5" y="2051.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.5" y="2062.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="417.5" y="2035.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.5" y="2046.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.02%)</title><rect x="417.5" y="2019.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.5" y="2030.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$271/292602132.applyAsLong (1 samples, 0.02%)</title><rect x="417.5" y="2003.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.5" y="2014.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="417.5" y="1987.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.02%)</title><rect x="417.5" y="1971.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="417.5" y="1955.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.5" y="1966.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (1 samples, 0.02%)</title><rect x="417.7" y="2035.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.7" y="2046.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="417.7" y="2019.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="420.7" y="2030.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="417.7" y="2003.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="420.7" y="2014.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="417.7" y="1987.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.7" y="1998.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.02%)</title><rect x="418.0" y="2051.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.0" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.02%)</title><rect x="418.3" y="2067.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.3" y="2078.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.06%)</title><rect x="418.5" y="2083.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.5" y="2094.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.02%)</title><rect x="419.0" y="2067.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.0" y="2078.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="419.0" y="2051.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.0" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="419.0" y="2035.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.0" y="2046.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="419.0" y="2019.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.0" y="2030.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="419.0" y="2003.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.0" y="2014.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="419.0" y="1987.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.0" y="1998.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="419.3" y="2099.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="422.3" y="2110.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="419.3" y="2083.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="422.3" y="2094.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="419.3" y="2067.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="422.3" y="2078.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3 samples, 0.06%)</title><rect x="419.5" y="2147.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.5" y="2158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (3 samples, 0.06%)</title><rect x="419.5" y="2131.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.5" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (3 samples, 0.06%)</title><rect x="419.5" y="2115.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.5" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (3 samples, 0.06%)</title><rect x="419.5" y="2099.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.5" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.06%)</title><rect x="419.5" y="2083.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.5" y="2094.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (3 samples, 0.06%)</title><rect x="419.5" y="2067.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.5" y="2078.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="419.8" y="2051.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.8" y="2062.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="420.0" y="2051.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="423.0" y="2062.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="420.0" y="2035.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="423.0" y="2046.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="420.0" y="2019.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.0" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="420.3" y="2163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.3" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="420.3" y="2147.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.3" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="420.5" y="2147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.5" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="420.5" y="2131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.5" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (1 samples, 0.02%)</title><rect x="420.8" y="2163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.8" y="2174.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="420.8" y="2147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.8" y="2158.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="420.8" y="2131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.8" y="2142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="420.8" y="2115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.8" y="2126.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="420.8" y="2099.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.8" y="2110.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="420.8" y="2083.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.8" y="2094.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="420.8" y="2067.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.65%)</title><rect x="421.1" y="2163.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.1" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="421.1" y="2147.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.1" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.02%)</title><rect x="421.1" y="2131.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.1" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$276/1855941268.run (29 samples, 0.63%)</title><rect x="421.3" y="2147.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.3" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (29 samples, 0.63%)</title><rect x="421.3" y="2131.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.3" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="421.3" y="2115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.3" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="421.3" y="2099.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.3" y="2110.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="421.6" y="2083.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="424.6" y="2094.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="421.6" y="2067.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.6" y="2078.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="421.6" y="2051.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="424.6" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.11%)</title><rect x="421.8" y="2115.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.8" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.04%)</title><rect x="421.8" y="2099.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.8" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.04%)</title><rect x="421.8" y="2083.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.04%)</title><rect x="421.8" y="2067.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.8" y="2078.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="422.1" y="2051.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="425.1" y="2062.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="422.1" y="2035.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="425.1" y="2046.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="422.1" y="2019.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="425.1" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="422.3" y="2099.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.3" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="422.3" y="2083.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.3" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.04%)</title><rect x="422.3" y="2067.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.3" y="2078.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="422.6" y="2051.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="425.6" y="2062.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="422.6" y="2035.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="425.6" y="2046.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="422.6" y="2019.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="425.6" y="2030.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="422.8" y="2099.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="425.8" y="2110.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="422.8" y="2083.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="425.8" y="2094.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="422.8" y="2067.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="425.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (14 samples, 0.30%)</title><rect x="423.1" y="2115.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.1" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (14 samples, 0.30%)</title><rect x="423.1" y="2099.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.1" y="2110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="423.1" y="2083.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.1" y="2094.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="423.1" y="2067.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.1" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$293/1565024915.get$Lambda (1 samples, 0.02%)</title><rect x="423.1" y="2051.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.1" y="2062.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (12 samples, 0.26%)</title><rect x="423.3" y="2083.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.3" y="2094.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (10 samples, 0.22%)</title><rect x="423.6" y="2067.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.6" y="2078.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (7 samples, 0.15%)</title><rect x="424.4" y="2051.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.4" y="2062.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="424.4" y="2035.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="427.4" y="2046.0"></text>
</g>
<g>
<title>JVM_IHashCode (6 samples, 0.13%)</title><rect x="424.6" y="2035.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="427.6" y="2046.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="424.6" y="2019.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="427.6" y="2030.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.09%)</title><rect x="424.9" y="2019.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="427.9" y="2030.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.04%)</title><rect x="425.4" y="2003.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="428.4" y="2014.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="425.6" y="1987.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="428.6" y="1998.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="425.6" y="1971.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.6" y="1982.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="425.6" y="1955.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.6" y="1966.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="425.9" y="2019.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="428.9" y="2030.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="426.1" y="2067.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.1" y="2078.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="426.1" y="2051.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="429.1" y="2062.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="426.1" y="2035.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="429.1" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="426.4" y="2083.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.4" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="426.4" y="2067.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.4" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="426.4" y="2051.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.4" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (8 samples, 0.17%)</title><rect x="426.7" y="2115.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.7" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.04%)</title><rect x="428.2" y="2099.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.2" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="428.2" y="2083.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.2" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="428.2" y="2067.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.04%)</title><rect x="428.2" y="2051.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.2" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.04%)</title><rect x="428.2" y="2035.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/logger/AbstractLoggerWrapper.isLoggable (2 samples, 0.04%)</title><rect x="428.2" y="2019.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.2" y="2030.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.04%)</title><rect x="428.2" y="2003.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.2" y="2014.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.02%)</title><rect x="428.4" y="1987.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.4" y="1998.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="428.7" y="2195.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="431.7" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="428.7" y="2179.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="431.7" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="428.7" y="2163.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="431.7" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.02%)</title><rect x="428.9" y="2211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.9" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1654089402.apply (12 samples, 0.26%)</title><rect x="429.2" y="2243.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.2" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (12 samples, 0.26%)</title><rect x="429.2" y="2227.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.2" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (10 samples, 0.22%)</title><rect x="429.4" y="2211.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.4" y="2222.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.02%)</title><rect x="429.7" y="2195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.7" y="2206.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.02%)</title><rect x="429.7" y="2179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.7" y="2190.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (1 samples, 0.02%)</title><rect x="429.7" y="2163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.7" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (8 samples, 0.17%)</title><rect x="430.0" y="2195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.0" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.13%)</title><rect x="430.5" y="2179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.5" y="2190.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.13%)</title><rect x="430.5" y="2163.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.5" y="2174.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.02%)</title><rect x="430.5" y="2147.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.5" y="2158.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.02%)</title><rect x="430.7" y="2147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.7" y="2158.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (4 samples, 0.09%)</title><rect x="431.0" y="2147.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.0" y="2158.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.09%)</title><rect x="431.0" y="2131.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.0" y="2142.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.06%)</title><rect x="431.2" y="2115.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="434.2" y="2126.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="431.2" y="2099.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="434.2" y="2110.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="431.5" y="2099.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="434.5" y="2110.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.296] (1 samples, 0.02%)</title><rect x="431.7" y="2099.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="434.7" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="432.0" y="2211.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.0" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="432.0" y="2195.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.0" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="432.0" y="2179.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.0" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (16 samples, 0.34%)</title><rect x="432.2" y="2259.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.2" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.04%)</title><rect x="432.5" y="2243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.5" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="432.5" y="2227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.5" y="2238.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="432.5" y="2211.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="435.5" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$240/1605198082.apply (1 samples, 0.02%)</title><rect x="432.8" y="2211.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.8" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.28%)</title><rect x="433.0" y="2243.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.0" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="433.3" y="2227.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.3" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="433.3" y="2211.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.3" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$240/1605198082.apply (11 samples, 0.24%)</title><rect x="433.5" y="2227.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.5" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (11 samples, 0.24%)</title><rect x="433.5" y="2211.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.5" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (9 samples, 0.19%)</title><rect x="433.5" y="2195.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.5" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (9 samples, 0.19%)</title><rect x="433.5" y="2179.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.5" y="2190.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (8 samples, 0.17%)</title><rect x="433.8" y="2163.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.8" y="2174.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (8 samples, 0.17%)</title><rect x="433.8" y="2147.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.8" y="2158.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (5 samples, 0.11%)</title><rect x="433.8" y="2131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.8" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.02%)</title><rect x="434.3" y="2115.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.3" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="434.5" y="2115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.5" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="434.8" y="2115.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.8" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.02%)</title><rect x="434.8" y="2099.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.8" y="2110.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="434.8" y="2083.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.8" y="2094.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="434.8" y="2067.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="437.8" y="2078.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="434.8" y="2051.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="437.8" y="2062.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.06%)</title><rect x="435.0" y="2131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.0" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.04%)</title><rect x="435.0" y="2115.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.0" y="2126.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="435.3" y="2099.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="438.3" y="2110.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="435.3" y="2083.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="438.3" y="2094.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="435.3" y="2067.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.3" y="2078.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="435.6" y="2115.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="438.6" y="2126.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="435.6" y="2099.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.6" y="2110.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="435.6" y="2083.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.6" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="435.8" y="2195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.8" y="2206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="435.8" y="2179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.8" y="2190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="435.8" y="2163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.8" y="2174.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="436.1" y="2147.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.1" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="436.1" y="2131.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="439.1" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="436.1" y="2115.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="439.1" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.04%)</title><rect x="436.3" y="2259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.3" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.04%)</title><rect x="436.3" y="2243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.3" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="436.3" y="2227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.3" y="2238.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="436.8" y="2259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="439.8" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="436.8" y="2243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.8" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="436.8" y="2227.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="439.8" y="2238.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="437.1" y="2259.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="440.1" y="2270.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="437.1" y="2243.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.1" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="437.1" y="2227.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.1" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="437.1" y="2211.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.1" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$265/1742875943.apply (10 samples, 0.22%)</title><rect x="437.3" y="2291.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.3" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (10 samples, 0.22%)</title><rect x="437.3" y="2275.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.3" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (10 samples, 0.22%)</title><rect x="437.3" y="2259.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.3" y="2270.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="437.3" y="2243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.3" y="2254.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="437.3" y="2227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.3" y="2238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="437.3" y="2211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.3" y="2222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.02%)</title><rect x="437.6" y="2195.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.6" y="2206.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="437.6" y="2179.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.6" y="2190.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="437.6" y="2163.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.6" y="2174.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="437.6" y="2147.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.6" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (8 samples, 0.17%)</title><rect x="437.8" y="2243.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.8" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.channel (1 samples, 0.02%)</title><rect x="438.6" y="2227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.6" y="2238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (3 samples, 0.06%)</title><rect x="438.9" y="2227.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.9" y="2238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureOpen (1 samples, 0.02%)</title><rect x="439.4" y="2211.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.4" y="2222.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.02%)</title><rect x="439.4" y="2195.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.4" y="2206.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="439.4" y="2179.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.4" y="2190.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="439.4" y="2163.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.4" y="2174.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="439.4" y="2147.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.4" y="2158.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="439.6" y="2227.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.6" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="439.6" y="2211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="442.6" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="439.6" y="2195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.6" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (55 samples, 1.19%)</title><rect x="439.9" y="2403.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.9" y="2414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="440.6" y="2387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.6" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="440.6" y="2371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.6" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="440.6" y="2355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="443.6" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="440.6" y="2339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="443.6" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1 samples, 0.02%)</title><rect x="440.9" y="2387.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.9" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="440.9" y="2371.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="443.9" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="440.9" y="2355.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="443.9" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="440.9" y="2339.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="443.9" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (2 samples, 0.04%)</title><rect x="441.1" y="2387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.1" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="441.1" y="2371.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="444.1" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="441.1" y="2355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="444.1" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="441.1" y="2339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="444.1" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.04%)</title><rect x="441.7" y="2387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.7" y="2398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="441.7" y="2371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.7" y="2382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="441.7" y="2355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.7" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (7 samples, 0.15%)</title><rect x="442.2" y="2387.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.2" y="2398.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="442.2" y="2371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.2" y="2382.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="442.2" y="2355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.2" y="2366.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="442.2" y="2339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.2" y="2350.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="442.7" y="2371.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.7" y="2382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="442.7" y="2355.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.7" y="2366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="442.9" y="2371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.9" y="2382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="442.9" y="2355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.9" y="2366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="443.4" y="2371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.4" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="443.7" y="2355.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="446.7" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="443.7" y="2339.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="446.7" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="443.7" y="2323.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="446.7" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (16 samples, 0.34%)</title><rect x="443.9" y="2387.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.9" y="2398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.34%)</title><rect x="443.9" y="2371.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.9" y="2382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.30%)</title><rect x="444.5" y="2355.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.5" y="2366.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="444.7" y="2339.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="447.7" y="2350.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (12 samples, 0.26%)</title><rect x="445.0" y="2339.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.0" y="2350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (11 samples, 0.24%)</title><rect x="445.2" y="2323.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.2" y="2334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.24%)</title><rect x="445.2" y="2307.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.2" y="2318.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.02%)</title><rect x="445.2" y="2291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.2" y="2302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="445.2" y="2275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.2" y="2286.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.11%)</title><rect x="445.5" y="2291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.5" y="2302.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="445.7" y="2275.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="448.7" y="2286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (3 samples, 0.06%)</title><rect x="446.0" y="2275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.0" y="2286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.06%)</title><rect x="446.0" y="2259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.0" y="2270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.09%)</title><rect x="446.7" y="2291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.7" y="2302.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="447.3" y="2275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.3" y="2286.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="447.3" y="2259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.3" y="2270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="447.3" y="2243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.3" y="2254.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="447.5" y="2227.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.5" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="447.5" y="2211.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="450.5" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="447.5" y="2195.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.5" y="2206.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="447.8" y="2291.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="450.8" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="447.8" y="2275.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="450.8" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="447.8" y="2259.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="450.8" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="447.8" y="2243.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="450.8" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (22 samples, 0.47%)</title><rect x="448.0" y="2387.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.0" y="2398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="449.0" y="2371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.0" y="2382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="449.0" y="2355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.0" y="2366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="449.0" y="2339.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="452.0" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (17 samples, 0.37%)</title><rect x="449.3" y="2371.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.3" y="2382.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (5 samples, 0.11%)</title><rect x="449.3" y="2355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.3" y="2366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.06%)</title><rect x="449.5" y="2339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.5" y="2350.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="450.3" y="2339.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="453.3" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="450.3" y="2323.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.3" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="450.3" y="2307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="453.3" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="450.3" y="2291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="453.3" y="2302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="450.6" y="2355.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.6" y="2366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.11%)</title><rect x="450.8" y="2355.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.8" y="2366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.11%)</title><rect x="450.8" y="2339.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.8" y="2350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.11%)</title><rect x="450.8" y="2323.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.8" y="2334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.11%)</title><rect x="450.8" y="2307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.8" y="2318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.11%)</title><rect x="450.8" y="2291.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.8" y="2302.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="451.6" y="2275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.6" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="451.6" y="2259.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.6" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="451.6" y="2243.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="454.6" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="451.6" y="2227.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="454.6" y="2238.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="451.8" y="2275.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="454.8" y="2286.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.13%)</title><rect x="452.1" y="2355.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.1" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$266/19105023.apply (2 samples, 0.04%)</title><rect x="452.8" y="2339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.8" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.04%)</title><rect x="452.8" y="2323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="2334.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="453.1" y="2307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.1" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="453.4" y="2339.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="456.4" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="453.4" y="2323.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.4" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="453.4" y="2307.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.4" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="453.6" y="2387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="456.6" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="453.6" y="2371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="456.6" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="453.6" y="2355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="456.6" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$207/1907672630.accept (5 samples, 0.11%)</title><rect x="453.9" y="2403.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.9" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (5 samples, 0.11%)</title><rect x="453.9" y="2387.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.9" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (5 samples, 0.11%)</title><rect x="453.9" y="2371.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.9" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (294 samples, 6.34%)</title><rect x="455.1" y="2515.0" width="74.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.1" y="2526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="455.1" y="2499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.1" y="2510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/1097621600.run (1 samples, 0.02%)</title><rect x="455.1" y="2483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.1" y="2494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (293 samples, 6.32%)</title><rect x="455.4" y="2499.0" width="74.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.4" y="2510.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (291 samples, 6.27%)</title><rect x="455.4" y="2483.0" width="74.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.4" y="2494.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1025274910.run (290 samples, 6.25%)</title><rect x="455.6" y="2467.0" width="73.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.6" y="2478.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (290 samples, 6.25%)</title><rect x="455.6" y="2451.0" width="73.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.6" y="2462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (9 samples, 0.19%)</title><rect x="455.6" y="2435.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.6" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="455.6" y="2419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.6" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="455.6" y="2403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.6" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.13%)</title><rect x="456.4" y="2419.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.4" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5 samples, 0.11%)</title><rect x="456.7" y="2403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.7" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (4 samples, 0.09%)</title><rect x="456.7" y="2387.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.7" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="456.9" y="2371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.9" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="456.9" y="2355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.9" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="456.9" y="2339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.9" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="456.9" y="2323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.9" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="457.2" y="2355.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.2" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="457.2" y="2339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="460.2" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="457.2" y="2323.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.2" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="457.4" y="2371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.4" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="457.4" y="2355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.4" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="457.4" y="2339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.4" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="457.7" y="2387.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.7" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="457.7" y="2371.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.7" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="457.7" y="2355.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="460.7" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (281 samples, 6.06%)</title><rect x="457.9" y="2435.0" width="71.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.9" y="2446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (280 samples, 6.04%)</title><rect x="457.9" y="2419.0" width="71.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.9" y="2430.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (280 samples, 6.04%)</title><rect x="457.9" y="2403.0" width="71.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.9" y="2414.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (280 samples, 6.04%)</title><rect x="457.9" y="2387.0" width="71.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.9" y="2398.0">jdk/inte..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="457.9" y="2371.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="460.9" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (279 samples, 6.01%)</title><rect x="458.2" y="2371.0" width="71.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.2" y="2382.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (278 samples, 5.99%)</title><rect x="458.4" y="2355.0" width="70.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.4" y="2366.0">jdk/inte..</text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.04%)</title><rect x="458.4" y="2339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.4" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="458.7" y="2323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="461.7" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="458.7" y="2307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="461.7" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="458.7" y="2291.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.7" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/999614473.run (92 samples, 1.98%)</title><rect x="459.0" y="2339.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.0" y="2350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (92 samples, 1.98%)</title><rect x="459.0" y="2323.0" width="23.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.0" y="2334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (2 samples, 0.04%)</title><rect x="459.2" y="2307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.2" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.set (2 samples, 0.04%)</title><rect x="459.2" y="2291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.2" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.04%)</title><rect x="459.2" y="2275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.2" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (88 samples, 1.90%)</title><rect x="459.7" y="2307.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.7" y="2318.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.11%)</title><rect x="459.7" y="2291.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.7" y="2302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="459.7" y="2275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.7" y="2286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="459.7" y="2259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.7" y="2270.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="459.7" y="2243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.7" y="2254.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="459.7" y="2227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.7" y="2238.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="459.7" y="2211.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.7" y="2222.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="459.7" y="2195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.7" y="2206.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="459.7" y="2179.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.7" y="2190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="459.7" y="2163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.7" y="2174.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="460.0" y="2147.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.0" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="460.0" y="2131.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="463.0" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="460.0" y="2115.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="463.0" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="460.2" y="2275.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.2" y="2286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="460.2" y="2259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.2" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="460.7" y="2275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.7" y="2286.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.02%)</title><rect x="461.0" y="2291.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.0" y="2302.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.02%)</title><rect x="461.0" y="2275.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.0" y="2286.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="461.0" y="2259.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.0" y="2270.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.02%)</title><rect x="461.0" y="2243.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.0" y="2254.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="461.0" y="2227.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.0" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="461.0" y="2211.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="464.0" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="461.0" y="2195.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="464.0" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (82 samples, 1.77%)</title><rect x="461.2" y="2291.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.2" y="2302.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.06%)</title><rect x="461.2" y="2275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.2" y="2286.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.06%)</title><rect x="461.2" y="2259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.2" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.06%)</title><rect x="461.2" y="2243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.2" y="2254.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="461.5" y="2227.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="464.5" y="2238.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="461.5" y="2211.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="464.5" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (79 samples, 1.70%)</title><rect x="462.0" y="2275.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.0" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (11 samples, 0.24%)</title><rect x="462.0" y="2259.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.0" y="2270.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (2 samples, 0.04%)</title><rect x="462.3" y="2243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.3" y="2254.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (1 samples, 0.02%)</title><rect x="462.5" y="2227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.5" y="2238.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.02%)</title><rect x="462.5" y="2211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.5" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="462.5" y="2195.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="465.5" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="462.5" y="2179.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="465.5" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="462.5" y="2163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.5" y="2174.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (3 samples, 0.06%)</title><rect x="462.8" y="2243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.8" y="2254.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.09%)</title><rect x="463.5" y="2243.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.5" y="2254.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.09%)</title><rect x="463.5" y="2227.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.5" y="2238.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="463.8" y="2211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.8" y="2222.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.02%)</title><rect x="464.0" y="2195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.0" y="2206.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (1 samples, 0.02%)</title><rect x="464.3" y="2211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.3" y="2222.0"></text>
</g>
<g>
<title>java/util/LinkedList.isPositionIndex (1 samples, 0.02%)</title><rect x="464.3" y="2195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.3" y="2206.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="464.6" y="2243.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.6" y="2254.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="464.6" y="2227.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.6" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.09%)</title><rect x="464.8" y="2259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.8" y="2270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="464.8" y="2243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.8" y="2254.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="464.8" y="2227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.8" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.06%)</title><rect x="464.8" y="2211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.8" y="2222.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.06%)</title><rect x="464.8" y="2195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.8" y="2206.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.06%)</title><rect x="464.8" y="2179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.8" y="2190.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.06%)</title><rect x="464.8" y="2163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.8" y="2174.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="465.6" y="2227.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.6" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.02%)</title><rect x="465.6" y="2211.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.6" y="2222.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.02%)</title><rect x="465.6" y="2195.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.6" y="2206.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.02%)</title><rect x="465.6" y="2179.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.6" y="2190.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.02%)</title><rect x="465.6" y="2163.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.6" y="2174.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.02%)</title><rect x="465.6" y="2147.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.6" y="2158.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (1 samples, 0.02%)</title><rect x="465.6" y="2131.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.6" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (64 samples, 1.38%)</title><rect x="465.8" y="2259.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.8" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (64 samples, 1.38%)</title><rect x="465.8" y="2243.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.8" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.11%)</title><rect x="465.8" y="2227.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.8" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.11%)</title><rect x="465.8" y="2211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.8" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.09%)</title><rect x="466.1" y="2195.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.1" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="466.1" y="2179.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.1" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="466.1" y="2163.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.1" y="2174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="466.1" y="2147.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.1" y="2158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="466.1" y="2131.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.1" y="2142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="466.1" y="2115.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.1" y="2126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="466.1" y="2099.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.1" y="2110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="466.1" y="2083.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.1" y="2094.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="466.1" y="2067.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.1" y="2078.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="466.1" y="2051.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.1" y="2062.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="466.1" y="2035.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="469.1" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (3 samples, 0.06%)</title><rect x="466.3" y="2179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.3" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (59 samples, 1.27%)</title><rect x="467.1" y="2227.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.1" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (59 samples, 1.27%)</title><rect x="467.1" y="2211.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.1" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (57 samples, 1.23%)</title><rect x="467.3" y="2195.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.3" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (57 samples, 1.23%)</title><rect x="467.3" y="2179.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.3" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (57 samples, 1.23%)</title><rect x="467.3" y="2163.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.3" y="2174.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (56 samples, 1.21%)</title><rect x="467.6" y="2147.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.6" y="2158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (49 samples, 1.06%)</title><rect x="468.9" y="2131.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.9" y="2142.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="468.9" y="2115.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="471.9" y="2126.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="469.1" y="2115.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="472.1" y="2126.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (1 samples, 0.02%)</title><rect x="469.1" y="2099.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="472.1" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="469.1" y="2083.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="472.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="469.1" y="2067.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="472.1" y="2078.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="469.1" y="2051.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="472.1" y="2062.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="469.1" y="2035.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="472.1" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="469.1" y="2019.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.1" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="469.1" y="2003.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.1" y="2014.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="469.1" y="1987.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.1" y="1998.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="469.1" y="1971.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="472.1" y="1982.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="469.1" y="1955.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.1" y="1966.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="469.1" y="1939.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.1" y="1950.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="469.1" y="1923.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="472.1" y="1934.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="469.1" y="1907.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="472.1" y="1918.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="469.1" y="1891.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="472.1" y="1902.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="469.1" y="1875.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="472.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="469.4" y="2099.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="472.4" y="2110.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="469.4" y="2083.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="472.4" y="2094.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="469.4" y="2067.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.4" y="2078.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="469.4" y="2051.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="472.4" y="2062.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="469.4" y="2035.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.4" y="2046.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="469.4" y="2019.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="472.4" y="2030.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="469.4" y="2003.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="472.4" y="2014.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="469.4" y="1987.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="472.4" y="1998.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="469.4" y="1971.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="472.4" y="1982.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="469.4" y="1955.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.4" y="1966.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="469.4" y="1939.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.4" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="469.4" y="1923.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="472.4" y="1934.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="469.6" y="2083.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="472.6" y="2094.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="469.6" y="2067.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="472.6" y="2078.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="469.6" y="2051.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.6" y="2062.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="469.6" y="2035.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.6" y="2046.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.02%)</title><rect x="469.6" y="2019.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.6" y="2030.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="469.6" y="2003.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.6" y="2014.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="469.6" y="1987.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.6" y="1998.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="469.6" y="1971.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="472.6" y="1982.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="469.6" y="1955.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.6" y="1966.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="469.6" y="1939.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="472.6" y="1950.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="469.6" y="1923.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.6" y="1934.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="469.6" y="1907.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.6" y="1918.0"></text>
</g>
<g>
<title>__write (2 samples, 0.04%)</title><rect x="469.9" y="2115.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="472.9" y="2126.0"></text>
</g>
<g>
<title>gettimeofday (43 samples, 0.93%)</title><rect x="470.4" y="2115.0" width="10.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="473.4" y="2126.0"></text>
</g>
<g>
<title>__write (43 samples, 0.93%)</title><rect x="470.4" y="2099.0" width="10.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="473.4" y="2110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.91%)</title><rect x="470.7" y="2083.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.7" y="2094.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.91%)</title><rect x="470.7" y="2067.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="473.7" y="2078.0"></text>
</g>
<g>
<title>sys_write (37 samples, 0.80%)</title><rect x="471.9" y="2051.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.9" y="2062.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="471.9" y="2035.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.9" y="2046.0"></text>
</g>
<g>
<title>vfs_write (36 samples, 0.78%)</title><rect x="472.2" y="2035.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.2" y="2046.0"></text>
</g>
<g>
<title>__vfs_write (32 samples, 0.69%)</title><rect x="472.2" y="2019.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="475.2" y="2030.0"></text>
</g>
<g>
<title>new_sync_write (30 samples, 0.65%)</title><rect x="472.4" y="2003.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="475.4" y="2014.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="472.4" y="1987.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.4" y="1998.0"></text>
</g>
<g>
<title>pipe_write (29 samples, 0.63%)</title><rect x="472.7" y="1987.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="475.7" y="1998.0"></text>
</g>
<g>
<title>__wake_up_sync_key (26 samples, 0.56%)</title><rect x="472.9" y="1971.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.9" y="1982.0"></text>
</g>
<g>
<title>__wake_up_common_lock (26 samples, 0.56%)</title><rect x="472.9" y="1955.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.9" y="1966.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.56%)</title><rect x="472.9" y="1939.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="475.9" y="1950.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.04%)</title><rect x="479.6" y="1971.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.6" y="1982.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.04%)</title><rect x="479.6" y="1955.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="482.6" y="1966.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="480.1" y="2003.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.1" y="2014.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.09%)</title><rect x="480.3" y="2019.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.3" y="2030.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.09%)</title><rect x="480.3" y="2003.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.3" y="2014.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.06%)</title><rect x="480.3" y="1987.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.3" y="1998.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.06%)</title><rect x="480.3" y="1971.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="483.3" y="1982.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.04%)</title><rect x="480.6" y="1955.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.6" y="1966.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="481.1" y="1987.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="484.1" y="1998.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="481.3" y="2131.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="484.3" y="2142.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="481.3" y="2115.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.3" y="2126.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="481.3" y="2099.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.3" y="2110.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="481.6" y="2083.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.6" y="2094.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="481.6" y="2067.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="484.6" y="2078.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="481.6" y="2051.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="484.6" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="481.8" y="2195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.8" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (1 samples, 0.02%)</title><rect x="482.1" y="2307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.1" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="482.1" y="2291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="485.1" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="482.1" y="2275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.1" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="482.1" y="2259.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.1" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/1776462818.accept (11 samples, 0.24%)</title><rect x="482.4" y="2339.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.4" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (10 samples, 0.22%)</title><rect x="482.6" y="2323.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.6" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (10 samples, 0.22%)</title><rect x="482.6" y="2307.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.6" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.13%)</title><rect x="482.6" y="2291.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.6" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.13%)</title><rect x="482.6" y="2275.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.6" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.13%)</title><rect x="482.6" y="2259.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.6" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="482.6" y="2243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.6" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="482.6" y="2227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.6" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="482.6" y="2211.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.6" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.11%)</title><rect x="482.9" y="2243.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.9" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.06%)</title><rect x="482.9" y="2227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.9" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1230419139.accept (3 samples, 0.06%)</title><rect x="482.9" y="2211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.9" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="483.4" y="2195.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="486.4" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="483.4" y="2179.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="486.4" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="483.4" y="2163.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.4" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$293/1565024915.accept (2 samples, 0.04%)</title><rect x="483.6" y="2227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.6" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.04%)</title><rect x="483.6" y="2211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.6" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.04%)</title><rect x="483.6" y="2195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.6" y="2206.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.04%)</title><rect x="483.6" y="2179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.6" y="2190.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (2 samples, 0.04%)</title><rect x="483.6" y="2163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.6" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$209/869825055.accept (3 samples, 0.06%)</title><rect x="484.1" y="2291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.1" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (3 samples, 0.06%)</title><rect x="484.1" y="2275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.1" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="484.6" y="2259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="487.6" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="484.6" y="2243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.6" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="484.6" y="2227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="487.6" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="484.9" y="2291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.9" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (159 samples, 3.43%)</title><rect x="485.2" y="2339.0" width="40.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.2" y="2350.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (159 samples, 3.43%)</title><rect x="485.2" y="2323.0" width="40.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.2" y="2334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (159 samples, 3.43%)</title><rect x="485.2" y="2307.0" width="40.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.2" y="2318.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (151 samples, 3.26%)</title><rect x="485.2" y="2291.0" width="38.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.2" y="2302.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (151 samples, 3.26%)</title><rect x="485.2" y="2275.0" width="38.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.2" y="2286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (151 samples, 3.26%)</title><rect x="485.2" y="2259.0" width="38.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.2" y="2270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (147 samples, 3.17%)</title><rect x="485.9" y="2243.0" width="37.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.9" y="2254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.09%)</title><rect x="485.9" y="2227.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.9" y="2238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1210854148.accept (4 samples, 0.09%)</title><rect x="485.9" y="2211.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.9" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1210854148.accept (143 samples, 3.08%)</title><rect x="486.9" y="2227.0" width="36.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.9" y="2238.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (143 samples, 3.08%)</title><rect x="486.9" y="2211.0" width="36.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.9" y="2222.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (143 samples, 3.08%)</title><rect x="486.9" y="2195.0" width="36.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.9" y="2206.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (143 samples, 3.08%)</title><rect x="486.9" y="2179.0" width="36.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.9" y="2190.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11 samples, 0.24%)</title><rect x="486.9" y="2163.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.9" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.13%)</title><rect x="487.4" y="2147.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.4" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.13%)</title><rect x="487.4" y="2131.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.4" y="2142.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="488.0" y="2115.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="491.0" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$298/1308862923.apply (2 samples, 0.04%)</title><rect x="488.5" y="2115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.5" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$298/1308862923.apply (3 samples, 0.06%)</title><rect x="489.0" y="2147.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.0" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.06%)</title><rect x="489.0" y="2131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.0" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.04%)</title><rect x="489.7" y="2163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.7" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="490.0" y="2147.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.0" y="2158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="490.0" y="2131.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.0" y="2142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (129 samples, 2.78%)</title><rect x="490.2" y="2163.0" width="32.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.2" y="2174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (127 samples, 2.74%)</title><rect x="490.8" y="2147.0" width="32.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.8" y="2158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (121 samples, 2.61%)</title><rect x="490.8" y="2131.0" width="30.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.8" y="2142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (118 samples, 2.54%)</title><rect x="491.0" y="2115.0" width="30.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.0" y="2126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (118 samples, 2.54%)</title><rect x="491.0" y="2099.0" width="30.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.0" y="2110.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (118 samples, 2.54%)</title><rect x="491.0" y="2083.0" width="30.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.0" y="2094.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (118 samples, 2.54%)</title><rect x="491.0" y="2067.0" width="30.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.0" y="2078.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (118 samples, 2.54%)</title><rect x="491.0" y="2051.0" width="30.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.0" y="2062.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (112 samples, 2.41%)</title><rect x="492.3" y="2035.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="495.3" y="2046.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="492.3" y="2019.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="495.3" y="2030.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="492.5" y="2019.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="495.5" y="2030.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.13%)</title><rect x="492.8" y="2019.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="495.8" y="2030.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="493.0" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="496.0" y="2014.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="493.3" y="2003.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="496.3" y="2014.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="493.5" y="2003.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="496.5" y="2014.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="493.5" y="1987.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="496.5" y="1998.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="493.5" y="1971.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="496.5" y="1982.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="493.5" y="1955.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.5" y="1966.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="493.8" y="2003.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="496.8" y="2014.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="493.8" y="1987.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.8" y="1998.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="493.8" y="1971.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="496.8" y="1982.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="494.3" y="2019.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="497.3" y="2030.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="494.6" y="2019.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="497.6" y="2030.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (102 samples, 2.20%)</title><rect x="494.8" y="2019.0" width="26.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="497.8" y="2030.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 2.09%)</title><rect x="496.1" y="2003.0" width="24.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="499.1" y="2014.0">e..</text>
</g>
<g>
<title>do_syscall_64 (97 samples, 2.09%)</title><rect x="496.1" y="1987.0" width="24.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.1" y="1998.0">d..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="496.9" y="1971.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.9" y="1982.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="496.9" y="1955.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="499.9" y="1966.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="496.9" y="1939.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="499.9" y="1950.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="496.9" y="1923.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="499.9" y="1934.0"></text>
</g>
<g>
<title>sys_futex (93 samples, 2.00%)</title><rect x="497.1" y="1971.0" width="23.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="500.1" y="1982.0">s..</text>
</g>
<g>
<title>do_futex (93 samples, 2.00%)</title><rect x="497.1" y="1955.0" width="23.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="500.1" y="1966.0">d..</text>
</g>
<g>
<title>futex_wake (90 samples, 1.94%)</title><rect x="497.6" y="1939.0" width="22.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="500.6" y="1950.0">f..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="498.6" y="1923.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="501.6" y="1934.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="498.9" y="1923.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.9" y="1934.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="499.1" y="1923.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="502.1" y="1934.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.13 (1 samples, 0.02%)</title><rect x="499.1" y="1907.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="502.1" y="1918.0"></text>
</g>
<g>
<title>wake_up_q (83 samples, 1.79%)</title><rect x="499.4" y="1923.0" width="21.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="502.4" y="1934.0">w..</text>
</g>
<g>
<title>try_to_wake_up (83 samples, 1.79%)</title><rect x="499.4" y="1907.0" width="21.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="502.4" y="1918.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (83 samples, 1.79%)</title><rect x="499.4" y="1891.0" width="21.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.4" y="1902.0">_..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="520.5" y="1939.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="523.5" y="1950.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="520.8" y="2035.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.8" y="2046.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="520.8" y="2019.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="523.8" y="2030.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="520.8" y="2003.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="523.8" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="521.0" y="2115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.0" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.09%)</title><rect x="521.5" y="2131.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.5" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/73638393.accept (1 samples, 0.02%)</title><rect x="521.5" y="2115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.5" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$296/1667076487.accept (1 samples, 0.02%)</title><rect x="521.8" y="2115.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$130/693243027.accept (2 samples, 0.04%)</title><rect x="522.0" y="2115.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.0" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$297/73638393.accept (1 samples, 0.02%)</title><rect x="522.5" y="2131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.5" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$130/693243027.accept (1 samples, 0.02%)</title><rect x="522.8" y="2131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.8" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.02%)</title><rect x="522.8" y="2115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.8" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="522.8" y="2099.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.8" y="2110.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="523.1" y="2163.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.1" y="2174.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="523.1" y="2147.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="526.1" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="523.1" y="2131.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="526.1" y="2142.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="523.3" y="2243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="526.3" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="523.3" y="2227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.3" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="523.3" y="2211.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.3" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (8 samples, 0.17%)</title><rect x="523.6" y="2291.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.6" y="2302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="523.6" y="2275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.6" y="2286.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="524.1" y="2275.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.1" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (5 samples, 0.11%)</title><rect x="524.3" y="2275.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.3" y="2286.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="524.8" y="2259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.8" y="2270.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.04%)</title><rect x="525.1" y="2259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.1" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (11 samples, 0.24%)</title><rect x="525.6" y="2339.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.6" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (11 samples, 0.24%)</title><rect x="525.6" y="2323.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.6" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (10 samples, 0.22%)</title><rect x="525.6" y="2307.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.6" y="2318.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (1 samples, 0.02%)</title><rect x="525.6" y="2291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.6" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (9 samples, 0.19%)</title><rect x="525.9" y="2291.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.9" y="2302.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (9 samples, 0.19%)</title><rect x="525.9" y="2275.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.9" y="2286.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.09%)</title><rect x="526.4" y="2259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.4" y="2270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="526.9" y="2243.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.9" y="2254.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="526.9" y="2227.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.9" y="2238.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="527.1" y="2243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.1" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="527.1" y="2227.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="530.1" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="527.1" y="2211.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="530.1" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="527.4" y="2259.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="530.4" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="527.4" y="2243.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="530.4" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="527.4" y="2227.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="530.4" y="2238.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="528.1" y="2307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.1" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="528.1" y="2291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="531.1" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="528.1" y="2275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="531.1" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.02%)</title><rect x="528.4" y="2339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.4" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="528.4" y="2323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.4" y="2334.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.02%)</title><rect x="528.4" y="2307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.4" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="528.4" y="2291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.4" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="528.4" y="2275.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="531.4" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="528.4" y="2259.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="531.4" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="528.4" y="2243.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.4" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (2 samples, 0.04%)</title><rect x="528.7" y="2339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.7" y="2350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="528.9" y="2323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.9" y="2334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="528.9" y="2307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.9" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="529.2" y="2419.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="532.2" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="529.2" y="2403.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="532.2" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="529.2" y="2387.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="532.2" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.04%)</title><rect x="529.4" y="2483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.4" y="2494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="529.4" y="2467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.4" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="529.7" y="2467.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="532.7" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="529.7" y="2451.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="532.7" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="529.7" y="2435.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="532.7" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="529.9" y="2531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="532.9" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="529.9" y="2515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="532.9" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="529.9" y="2499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="532.9" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.02%)</title><rect x="530.2" y="2595.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.2" y="2606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="530.2" y="2579.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.2" y="2590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="530.2" y="2563.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.2" y="2574.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="530.2" y="2547.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="533.2" y="2558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (568 samples, 12.24%)</title><rect x="530.4" y="2595.0" width="144.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.4" y="2606.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (568 samples, 12.24%)</title><rect x="530.4" y="2579.0" width="144.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.4" y="2590.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (437 samples, 9.42%)</title><rect x="530.4" y="2563.0" width="111.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.4" y="2574.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (432 samples, 9.31%)</title><rect x="530.7" y="2547.0" width="109.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.7" y="2558.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (6 samples, 0.13%)</title><rect x="535.0" y="2531.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.0" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="536.3" y="2515.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.3" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="536.3" y="2499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="539.3" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="536.3" y="2483.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="539.3" y="2494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.02%)</title><rect x="536.5" y="2531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.5" y="2542.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (1 samples, 0.02%)</title><rect x="536.5" y="2515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.5" y="2526.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.02%)</title><rect x="536.5" y="2499.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="539.5" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (405 samples, 8.73%)</title><rect x="536.8" y="2531.0" width="103.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.8" y="2542.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (327 samples, 7.05%)</title><rect x="537.0" y="2515.0" width="83.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.0" y="2526.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (326 samples, 7.03%)</title><rect x="537.3" y="2499.0" width="82.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.3" y="2510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (133 samples, 2.87%)</title><rect x="537.3" y="2483.0" width="33.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.3" y="2494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (131 samples, 2.82%)</title><rect x="537.8" y="2467.0" width="33.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.8" y="2478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (131 samples, 2.82%)</title><rect x="537.8" y="2451.0" width="33.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.8" y="2462.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (129 samples, 2.78%)</title><rect x="538.3" y="2435.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.3" y="2446.0">jd..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="538.6" y="2419.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="541.6" y="2430.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.19%)</title><rect x="539.1" y="2419.0" width="2.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="542.1" y="2430.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="539.6" y="2403.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="542.6" y="2414.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="539.8" y="2403.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="542.8" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="539.8" y="2387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="542.8" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="539.8" y="2371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="542.8" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="539.8" y="2355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="542.8" y="2366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="540.1" y="2403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="543.1" y="2414.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="540.4" y="2403.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="543.4" y="2414.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="540.9" y="2403.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="543.9" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="540.9" y="2387.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="543.9" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="540.9" y="2371.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="543.9" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="540.9" y="2355.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="543.9" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="541.1" y="2403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="544.1" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="541.1" y="2387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="544.1" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="541.1" y="2371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="544.1" y="2382.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (117 samples, 2.52%)</title><rect x="541.4" y="2419.0" width="29.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="544.4" y="2430.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 2.44%)</title><rect x="541.9" y="2403.0" width="28.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="544.9" y="2414.0">en..</text>
</g>
<g>
<title>do_syscall_64 (113 samples, 2.44%)</title><rect x="541.9" y="2387.0" width="28.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="544.9" y="2398.0">do..</text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="542.4" y="2371.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.4" y="2382.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="542.4" y="2355.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="545.4" y="2366.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.06%)</title><rect x="542.4" y="2339.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="545.4" y="2350.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="542.6" y="2323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="545.6" y="2334.0"></text>
</g>
<g>
<title>sys_futex (108 samples, 2.33%)</title><rect x="543.1" y="2371.0" width="27.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.1" y="2382.0">s..</text>
</g>
<g>
<title>do_futex (107 samples, 2.31%)</title><rect x="543.1" y="2355.0" width="27.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="546.1" y="2366.0">d..</text>
</g>
<g>
<title>futex_wake (104 samples, 2.24%)</title><rect x="543.7" y="2339.0" width="26.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="546.7" y="2350.0">f..</text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.06%)</title><rect x="544.4" y="2323.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="547.4" y="2334.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="544.4" y="2307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="547.4" y="2318.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="544.7" y="2307.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="547.7" y="2318.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.02%)</title><rect x="544.9" y="2307.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="547.9" y="2318.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="545.2" y="2323.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="548.2" y="2334.0"></text>
</g>
<g>
<title>wake_up_q (95 samples, 2.05%)</title><rect x="545.9" y="2323.0" width="24.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.9" y="2334.0">w..</text>
</g>
<g>
<title>try_to_wake_up (95 samples, 2.05%)</title><rect x="545.9" y="2307.0" width="24.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.9" y="2318.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (95 samples, 2.05%)</title><rect x="545.9" y="2291.0" width="24.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.9" y="2302.0">_..</text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="570.1" y="2339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="573.1" y="2350.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="570.4" y="2355.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="573.4" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="570.6" y="2403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="573.6" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="570.6" y="2387.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.6" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="570.6" y="2371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="573.6" y="2382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$134/2132435101.get (193 samples, 4.16%)</title><rect x="571.1" y="2483.0" width="49.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.1" y="2494.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.lambda$get$0 (193 samples, 4.16%)</title><rect x="571.1" y="2467.0" width="49.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.1" y="2478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.daoGetWrapper (193 samples, 4.16%)</title><rect x="571.1" y="2451.0" width="49.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.1" y="2462.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAOImpl.getWithTimestamp (192 samples, 4.14%)</title><rect x="571.4" y="2435.0" width="48.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.4" y="2446.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (182 samples, 3.92%)</title><rect x="571.6" y="2419.0" width="46.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.6" y="2430.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (181 samples, 3.90%)</title><rect x="571.9" y="2403.0" width="46.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.9" y="2414.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (168 samples, 3.62%)</title><rect x="571.9" y="2387.0" width="42.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="574.9" y="2398.0">Java..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.04%)</title><rect x="572.4" y="2371.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="575.4" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="572.7" y="2355.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="575.7" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="572.7" y="2339.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.7" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="572.7" y="2323.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="575.7" y="2334.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="572.9" y="2371.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="575.9" y="2382.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="573.2" y="2371.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="576.2" y="2382.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="573.4" y="2371.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="576.4" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="573.7" y="2355.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="576.7" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="573.7" y="2339.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.7" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="573.7" y="2323.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="576.7" y="2334.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="573.9" y="2371.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="576.9" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="573.9" y="2355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="576.9" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="573.9" y="2339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.9" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="573.9" y="2323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.9" y="2334.0"></text>
</g>
<g>
<title>operator new(unsigned long) (5 samples, 0.11%)</title><rect x="574.2" y="2371.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="577.2" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="574.9" y="2355.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="577.9" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="574.9" y="2339.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="577.9" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="574.9" y="2323.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.9" y="2334.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.04%)</title><rect x="575.5" y="2371.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="578.5" y="2382.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="576.0" y="2371.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="579.0" y="2382.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (148 samples, 3.19%)</title><rect x="576.2" y="2371.0" width="37.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="579.2" y="2382.0">roc..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="576.2" y="2355.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="579.2" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="576.2" y="2339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="579.2" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="576.2" y="2323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="579.2" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="576.2" y="2307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="579.2" y="2318.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="576.5" y="2355.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="579.5" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="576.5" y="2339.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.5" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="576.5" y="2323.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="579.5" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="576.5" y="2307.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.5" y="2318.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.13%)</title><rect x="576.7" y="2355.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="579.7" y="2366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="577.0" y="2339.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="580.0" y="2350.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="577.2" y="2339.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="580.2" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="577.5" y="2323.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.5" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="577.5" y="2307.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="580.5" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="577.5" y="2291.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="580.5" y="2302.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="577.7" y="2339.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="580.7" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="577.7" y="2323.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="580.7" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="577.7" y="2307.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="580.7" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="577.7" y="2291.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.7" y="2302.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="578.3" y="2355.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="581.3" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="578.3" y="2339.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.3" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="578.3" y="2323.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="581.3" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="578.3" y="2307.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="581.3" y="2318.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.04%)</title><rect x="578.5" y="2355.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="581.5" y="2366.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (112 samples, 2.41%)</title><rect x="579.0" y="2355.0" width="28.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="582.0" y="2366.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (112 samples, 2.41%)</title><rect x="579.0" y="2339.0" width="28.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="582.0" y="2350.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (108 samples, 2.33%)</title><rect x="579.3" y="2323.0" width="27.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="582.3" y="2334.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="579.3" y="2307.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="582.3" y="2318.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="579.5" y="2307.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="582.5" y="2318.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="580.0" y="2307.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="583.0" y="2318.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.04%)</title><rect x="580.5" y="2307.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="583.5" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="580.8" y="2291.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="583.8" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="580.8" y="2275.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.8" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="580.8" y="2259.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.8" y="2270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.04%)</title><rect x="581.0" y="2307.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="584.0" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="581.3" y="2291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.3" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="581.3" y="2275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.3" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="581.3" y="2259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="584.3" y="2270.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (98 samples, 2.11%)</title><rect x="581.6" y="2307.0" width="24.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.6" y="2318.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni17669008949291906155.so (2 samples, 0.04%)</title><rect x="582.8" y="2291.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="585.8" y="2302.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="583.3" y="2291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="586.3" y="2302.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="583.6" y="2291.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="586.6" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="584.1" y="2275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.1" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="584.1" y="2259.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.1" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="584.1" y="2243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="587.1" y="2254.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="584.4" y="2291.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="587.4" y="2302.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (6 samples, 0.13%)</title><rect x="584.6" y="2291.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="587.6" y="2302.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="584.9" y="2275.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="587.9" y="2286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="585.1" y="2275.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="588.1" y="2286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="585.4" y="2275.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="588.4" y="2286.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="585.4" y="2259.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="588.4" y="2270.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="585.6" y="2275.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.6" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="585.6" y="2259.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.6" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="585.6" y="2243.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.6" y="2254.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="586.1" y="2291.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="589.1" y="2302.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="586.4" y="2291.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="589.4" y="2302.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="586.4" y="2275.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="589.4" y="2286.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.04%)</title><rect x="586.6" y="2291.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="589.6" y="2302.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="587.2" y="2291.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="590.2" y="2302.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (70 samples, 1.51%)</title><rect x="587.4" y="2291.0" width="17.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="590.4" y="2302.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17669008949291906155.so (65 samples, 1.40%)</title><rect x="588.4" y="2275.0" width="16.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="591.4" y="2286.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17669008949291906155.so (4 samples, 0.09%)</title><rect x="588.7" y="2259.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="591.7" y="2270.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="589.7" y="2259.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="592.7" y="2270.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (55 samples, 1.19%)</title><rect x="590.0" y="2259.0" width="13.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="593.0" y="2270.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni17669008949291906155.so (1 samples, 0.02%)</title><rect x="600.9" y="2243.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="603.9" y="2254.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="601.1" y="2243.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="604.1" y="2254.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="601.1" y="2227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="604.1" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="601.1" y="2211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="604.1" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="601.1" y="2195.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.1" y="2206.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.13%)</title><rect x="601.4" y="2243.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="604.4" y="2254.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="601.9" y="2227.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.9" y="2238.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="602.2" y="2227.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="605.2" y="2238.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="602.2" y="2211.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.2" y="2222.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="602.2" y="2195.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="605.2" y="2206.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="602.2" y="2179.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="605.2" y="2190.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="602.4" y="2227.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="605.4" y="2238.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="602.7" y="2227.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="605.7" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="602.7" y="2211.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.7" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="602.7" y="2195.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.7" y="2206.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.09%)</title><rect x="602.9" y="2243.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="605.9" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.09%)</title><rect x="602.9" y="2227.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.9" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.09%)</title><rect x="602.9" y="2211.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.9" y="2222.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.02%)</title><rect x="603.9" y="2259.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="606.9" y="2270.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.06%)</title><rect x="604.2" y="2259.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="607.2" y="2270.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="604.5" y="2243.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="607.5" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="604.5" y="2227.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="607.5" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="604.5" y="2211.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.5" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="605.0" y="2275.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="608.0" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="605.0" y="2259.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.0" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="605.0" y="2243.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="608.0" y="2254.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="605.2" y="2291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="608.2" y="2302.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.04%)</title><rect x="605.5" y="2291.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="608.5" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="605.7" y="2275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="608.7" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="605.7" y="2259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="608.7" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="605.7" y="2243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="608.7" y="2254.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="606.0" y="2291.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="609.0" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="606.2" y="2291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.2" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="606.2" y="2275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="609.2" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="606.2" y="2259.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.2" y="2270.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.02%)</title><rect x="606.5" y="2307.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="609.5" y="2318.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="606.7" y="2323.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="609.7" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="607.0" y="2307.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.0" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="607.0" y="2291.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="610.0" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="607.0" y="2275.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="610.0" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="607.2" y="2323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="610.2" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="607.2" y="2307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="610.2" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="607.2" y="2291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="610.2" y="2302.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (24 samples, 0.52%)</title><rect x="607.5" y="2355.0" width="6.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="610.5" y="2366.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="607.5" y="2339.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="610.5" y="2350.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="607.8" y="2339.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="610.8" y="2350.0"></text>
</g>
<g>
<title>jni_NewByteArray (19 samples, 0.41%)</title><rect x="608.0" y="2339.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="611.0" y="2350.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="608.0" y="2323.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="611.0" y="2334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.11%)</title><rect x="608.3" y="2323.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="611.3" y="2334.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="609.5" y="2323.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="612.5" y="2334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.24%)</title><rect x="609.8" y="2323.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="612.8" y="2334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.22%)</title><rect x="610.0" y="2307.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="613.0" y="2318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.17%)</title><rect x="610.0" y="2291.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="613.0" y="2302.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.06%)</title><rect x="610.3" y="2275.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="613.3" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="610.8" y="2259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.8" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="610.8" y="2243.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.8" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="610.8" y="2227.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="613.8" y="2238.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.04%)</title><rect x="611.1" y="2275.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="614.1" y="2286.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned (2 samples, 0.04%)</title><rect x="611.6" y="2275.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="614.6" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="611.8" y="2259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="614.8" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="611.8" y="2243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.8" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="611.8" y="2227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="614.8" y="2238.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="612.1" y="2291.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="615.1" y="2302.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="612.3" y="2291.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="615.3" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="612.3" y="2275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.3" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="612.3" y="2259.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="615.3" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="612.3" y="2243.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="615.3" y="2254.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="612.6" y="2323.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="615.6" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="612.6" y="2307.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="615.6" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="612.6" y="2291.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="615.6" y="2302.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="612.8" y="2339.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="615.8" y="2350.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="612.8" y="2323.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="615.8" y="2334.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="613.1" y="2323.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="616.1" y="2334.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="613.4" y="2339.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="616.4" y="2350.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="613.6" y="2355.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="616.6" y="2366.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.04%)</title><rect x="613.9" y="2371.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="616.9" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="614.4" y="2371.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="617.4" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="614.4" y="2355.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="617.4" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="614.4" y="2339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="617.4" y="2350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="614.6" y="2387.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="617.6" y="2398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="614.6" y="2371.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="617.6" y="2382.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="614.6" y="2355.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="617.6" y="2366.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.11%)</title><rect x="614.9" y="2387.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="617.9" y="2398.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="616.2" y="2387.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="619.2" y="2398.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.04%)</title><rect x="616.4" y="2387.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="619.4" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="616.7" y="2371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="619.7" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="616.7" y="2355.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="619.7" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="616.7" y="2339.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="619.7" y="2350.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="616.9" y="2387.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="619.9" y="2398.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.06%)</title><rect x="617.2" y="2387.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="620.2" y="2398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.shift (5 samples, 0.11%)</title><rect x="617.9" y="2419.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.9" y="2430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/ByteBufferUtils.fromByteToArray (4 samples, 0.09%)</title><rect x="617.9" y="2403.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.9" y="2414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="618.2" y="2387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.2" y="2398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="618.2" y="2371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.2" y="2382.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="618.2" y="2355.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="621.2" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="618.4" y="2339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="621.4" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="618.4" y="2323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="621.4" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="618.4" y="2307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="621.4" y="2318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="618.7" y="2387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.7" y="2398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="618.7" y="2371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.7" y="2382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="618.7" y="2355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.7" y="2366.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.02%)</title><rect x="618.7" y="2339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.7" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="618.7" y="2323.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="621.7" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="618.7" y="2307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="621.7" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="618.7" y="2291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="621.7" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="619.0" y="2403.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.0" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="619.0" y="2387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="622.0" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="619.0" y="2371.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="622.0" y="2382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.fromBytes (4 samples, 0.09%)</title><rect x="619.2" y="2419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.2" y="2430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="619.2" y="2403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.2" y="2414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="619.2" y="2387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.2" y="2398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp$TypeOfRecord.fromValue (1 samples, 0.02%)</title><rect x="619.5" y="2403.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.5" y="2414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.&lt;init&gt; (1 samples, 0.02%)</title><rect x="619.7" y="2403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.7" y="2414.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (1 samples, 0.02%)</title><rect x="619.7" y="2387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="622.7" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="620.0" y="2403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="623.0" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="620.0" y="2387.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="623.0" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="620.0" y="2371.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="623.0" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (76 samples, 1.64%)</title><rect x="620.2" y="2515.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.2" y="2526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (74 samples, 1.60%)</title><rect x="620.7" y="2499.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.7" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (74 samples, 1.60%)</title><rect x="620.7" y="2483.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.7" y="2494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (74 samples, 1.60%)</title><rect x="620.7" y="2467.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.7" y="2478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (58 samples, 1.25%)</title><rect x="620.7" y="2451.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.7" y="2462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (58 samples, 1.25%)</title><rect x="620.7" y="2435.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.7" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (58 samples, 1.25%)</title><rect x="620.7" y="2419.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.7" y="2430.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="621.0" y="2403.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="624.0" y="2414.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.24%)</title><rect x="621.2" y="2403.0" width="2.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="624.2" y="2414.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="621.7" y="2387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="624.7" y="2398.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="622.0" y="2387.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.0" y="2398.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.13%)</title><rect x="622.3" y="2387.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="625.3" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="623.3" y="2371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="626.3" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="623.3" y="2355.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="626.3" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="623.3" y="2339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="626.3" y="2350.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="623.5" y="2323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="626.5" y="2334.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="623.5" y="2307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="626.5" y="2318.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="623.5" y="2291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="626.5" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="623.8" y="2387.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.8" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="623.8" y="2371.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="626.8" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="623.8" y="2355.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="626.8" y="2366.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (45 samples, 0.97%)</title><rect x="624.0" y="2403.0" width="11.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="627.0" y="2414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.93%)</title><rect x="624.5" y="2387.0" width="11.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.5" y="2398.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.93%)</title><rect x="624.5" y="2371.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.5" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="624.8" y="2355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="627.8" y="2366.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="624.8" y="2339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="627.8" y="2350.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="624.8" y="2323.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="627.8" y="2334.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="624.8" y="2307.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="627.8" y="2318.0"></text>
</g>
<g>
<title>sys_futex (41 samples, 0.88%)</title><rect x="625.1" y="2355.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="628.1" y="2366.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.86%)</title><rect x="625.3" y="2339.0" width="10.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="628.3" y="2350.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 0.86%)</title><rect x="625.3" y="2323.0" width="10.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.3" y="2334.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="625.3" y="2307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="628.3" y="2318.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.09%)</title><rect x="625.6" y="2307.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.6" y="2318.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="625.6" y="2291.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="628.6" y="2302.0"></text>
</g>
<g>
<title>wake_q_add (3 samples, 0.06%)</title><rect x="625.8" y="2291.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="628.8" y="2302.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 0.75%)</title><rect x="626.6" y="2307.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.6" y="2318.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.75%)</title><rect x="626.6" y="2291.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="629.6" y="2302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 0.73%)</title><rect x="626.8" y="2275.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="629.8" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13 samples, 0.28%)</title><rect x="635.5" y="2451.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.5" y="2462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.13%)</title><rect x="635.7" y="2435.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.7" y="2446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.13%)</title><rect x="635.7" y="2419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.7" y="2430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$133/1011391191.apply (4 samples, 0.09%)</title><rect x="636.2" y="2403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.2" y="2414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$133/1011391191.apply (6 samples, 0.13%)</title><rect x="637.3" y="2435.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.3" y="2446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.lambda$get$1 (5 samples, 0.11%)</title><rect x="637.5" y="2419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.5" y="2430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.fromBytes (2 samples, 0.04%)</title><rect x="637.5" y="2403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.5" y="2414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="637.5" y="2387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.5" y="2398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="637.5" y="2371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.5" y="2382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="637.5" y="2355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.5" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="637.8" y="2355.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.8" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="637.8" y="2339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.8" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="637.8" y="2323.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="640.8" y="2334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.getEmptyRecord (3 samples, 0.06%)</title><rect x="638.0" y="2403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.0" y="2414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.&lt;init&gt; (3 samples, 0.06%)</title><rect x="638.0" y="2387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.0" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$131/173542487.accept (2 samples, 0.04%)</title><rect x="638.8" y="2451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.8" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="639.3" y="2451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="642.3" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="639.3" y="2435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="642.3" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="639.3" y="2419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="642.3" y="2430.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="639.6" y="2515.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="642.6" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="639.8" y="2531.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.8" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="639.8" y="2515.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.8" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="639.8" y="2499.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="642.8" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.09%)</title><rect x="640.6" y="2547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.6" y="2558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="640.6" y="2531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.6" y="2542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.09%)</title><rect x="640.6" y="2515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.6" y="2526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="640.6" y="2499.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="643.6" y="2510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="640.8" y="2499.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="643.8" y="2510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="640.8" y="2483.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="643.8" y="2494.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="640.8" y="2467.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="643.8" y="2478.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.04%)</title><rect x="641.1" y="2451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="644.1" y="2462.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="641.1" y="2435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="644.1" y="2446.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="641.1" y="2419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.1" y="2430.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="641.1" y="2403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="644.1" y="2414.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="641.1" y="2387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.1" y="2398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="641.1" y="2371.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="644.1" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="641.6" y="2563.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.6" y="2574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="641.6" y="2547.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.6" y="2558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="641.6" y="2531.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="644.6" y="2542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="641.6" y="2515.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.6" y="2526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 0.75%)</title><rect x="641.8" y="2563.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.8" y="2574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.71%)</title><rect x="642.4" y="2547.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.4" y="2558.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.22%)</title><rect x="642.9" y="2531.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="645.9" y="2542.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="642.9" y="2515.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="645.9" y="2526.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.09%)</title><rect x="643.1" y="2515.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="646.1" y="2526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="643.1" y="2499.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="646.1" y="2510.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="643.4" y="2499.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="646.4" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="643.6" y="2499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.6" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="643.6" y="2483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="646.6" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="643.6" y="2467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.6" y="2478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.04%)</title><rect x="644.1" y="2515.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="647.1" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="644.4" y="2499.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="647.4" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="644.4" y="2483.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.4" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="644.4" y="2467.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.4" y="2478.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="644.6" y="2515.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="647.6" y="2526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="644.6" y="2499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.6" y="2510.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="644.6" y="2483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="647.6" y="2494.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.04%)</title><rect x="644.6" y="2467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.6" y="2478.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="644.6" y="2451.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.6" y="2462.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="644.6" y="2435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.6" y="2446.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="644.6" y="2419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="647.6" y="2430.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="645.1" y="2515.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="648.1" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="645.1" y="2499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.1" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="645.1" y="2483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="648.1" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="645.1" y="2467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="648.1" y="2478.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.43%)</title><rect x="645.4" y="2531.0" width="5.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="648.4" y="2542.0"></text>
</g>
<g>
<title>__pthread_cond_wait (18 samples, 0.39%)</title><rect x="645.4" y="2515.0" width="4.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="648.4" y="2526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.34%)</title><rect x="645.4" y="2499.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.4" y="2510.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.34%)</title><rect x="645.4" y="2483.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="648.4" y="2494.0"></text>
</g>
<g>
<title>sys_futex (15 samples, 0.32%)</title><rect x="645.7" y="2467.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="648.7" y="2478.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.30%)</title><rect x="645.7" y="2451.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="648.7" y="2462.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.30%)</title><rect x="645.7" y="2435.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.7" y="2446.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.24%)</title><rect x="645.7" y="2419.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.7" y="2430.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.24%)</title><rect x="645.7" y="2403.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="648.7" y="2414.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.24%)</title><rect x="645.7" y="2387.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="648.7" y="2398.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.19%)</title><rect x="646.2" y="2371.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.2" y="2382.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.06%)</title><rect x="648.5" y="2419.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="651.5" y="2430.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="648.7" y="2403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="651.7" y="2414.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="649.0" y="2403.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="652.0" y="2414.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="649.2" y="2451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.2" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="649.5" y="2499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="652.5" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="649.5" y="2483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="652.5" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="649.5" y="2467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.5" y="2478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="650.0" y="2515.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="653.0" y="2526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="650.2" y="2515.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="653.2" y="2526.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="650.5" y="2531.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="653.5" y="2542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (94 samples, 2.03%)</title><rect x="650.7" y="2563.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.7" y="2574.0">j..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="651.8" y="2547.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="654.8" y="2558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (88 samples, 1.90%)</title><rect x="652.0" y="2547.0" width="22.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.0" y="2558.0">j..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="652.3" y="2531.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="655.3" y="2542.0"></text>
</g>
<g>
<title>Unsafe_Park (26 samples, 0.56%)</title><rect x="653.0" y="2531.0" width="6.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="656.0" y="2542.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="653.8" y="2515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="656.8" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="653.8" y="2499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="656.8" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="653.8" y="2483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="656.8" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="653.8" y="2467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.8" y="2478.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.19%)</title><rect x="654.1" y="2515.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="657.1" y="2526.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.04%)</title><rect x="654.6" y="2499.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="657.6" y="2510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="655.1" y="2499.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="658.1" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="655.1" y="2483.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="658.1" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="655.1" y="2467.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.1" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="655.1" y="2451.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="658.1" y="2462.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="655.3" y="2499.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="658.3" y="2510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="655.6" y="2499.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="658.6" y="2510.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="656.1" y="2499.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="659.1" y="2510.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.19%)</title><rect x="656.3" y="2515.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="659.3" y="2526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.17%)</title><rect x="656.3" y="2499.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="659.3" y="2510.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.17%)</title><rect x="656.3" y="2483.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="659.3" y="2494.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.06%)</title><rect x="657.6" y="2467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="660.6" y="2478.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="657.6" y="2451.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.6" y="2462.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="658.1" y="2435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.1" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="658.4" y="2499.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.4" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="658.4" y="2483.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.4" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="658.4" y="2467.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.4" y="2478.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="658.6" y="2515.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="661.6" y="2526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="658.9" y="2515.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="661.9" y="2526.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="659.1" y="2515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="662.1" y="2526.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="659.4" y="2515.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="662.4" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="659.4" y="2499.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="662.4" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="659.4" y="2483.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="662.4" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="659.4" y="2467.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="662.4" y="2478.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="659.6" y="2531.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="662.6" y="2542.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (54 samples, 1.16%)</title><rect x="659.9" y="2531.0" width="13.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="662.9" y="2542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.10%)</title><rect x="660.7" y="2515.0" width="12.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="663.7" y="2526.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.10%)</title><rect x="660.7" y="2499.0" width="12.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="663.7" y="2510.0"></text>
</g>
<g>
<title>sys_futex (43 samples, 0.93%)</title><rect x="662.7" y="2483.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="665.7" y="2494.0"></text>
</g>
<g>
<title>do_futex (42 samples, 0.91%)</title><rect x="662.7" y="2467.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="665.7" y="2478.0"></text>
</g>
<g>
<title>futex_wait (39 samples, 0.84%)</title><rect x="663.0" y="2451.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="666.0" y="2462.0"></text>
</g>
<g>
<title>futex_wait_queue_me (31 samples, 0.67%)</title><rect x="663.0" y="2435.0" width="7.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.0" y="2446.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.06%)</title><rect x="663.0" y="2419.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="666.0" y="2430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="663.0" y="2403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="666.0" y="2414.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="663.7" y="2419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="666.7" y="2430.0"></text>
</g>
<g>
<title>schedule (27 samples, 0.58%)</title><rect x="664.0" y="2419.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="667.0" y="2430.0"></text>
</g>
<g>
<title>__schedule (25 samples, 0.54%)</title><rect x="664.5" y="2403.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="667.5" y="2414.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.52%)</title><rect x="664.7" y="2387.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="667.7" y="2398.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.11%)</title><rect x="670.8" y="2435.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="673.8" y="2446.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="671.6" y="2419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="674.6" y="2430.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="671.9" y="2419.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.9" y="2430.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.06%)</title><rect x="672.1" y="2435.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="675.1" y="2446.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.06%)</title><rect x="672.1" y="2419.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="675.1" y="2430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="672.1" y="2403.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="675.1" y="2414.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="672.9" y="2451.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="675.9" y="2462.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="673.1" y="2451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.1" y="2462.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="673.4" y="2467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="676.4" y="2478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="673.6" y="2531.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="676.6" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="673.6" y="2515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="676.6" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="673.6" y="2499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="676.6" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="673.6" y="2483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="676.6" y="2494.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="673.9" y="2531.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="676.9" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="673.9" y="2515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="676.9" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="673.9" y="2499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="676.9" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="673.9" y="2483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="676.9" y="2494.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="674.4" y="2547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="677.4" y="2558.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="674.4" y="2531.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="677.4" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="674.4" y="2515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="677.4" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="674.4" y="2499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.4" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="674.4" y="2483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="677.4" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="674.7" y="2563.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="677.7" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="674.7" y="2547.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="677.7" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="674.7" y="2531.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="677.7" y="2542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (746 samples, 16.08%)</title><rect x="674.9" y="2595.0" width="189.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.9" y="2606.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.06%)</title><rect x="676.4" y="2579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.4" y="2590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.02%)</title><rect x="676.7" y="2563.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.7" y="2574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="676.7" y="2547.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.7" y="2558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="676.7" y="2531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="679.7" y="2542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="676.7" y="2515.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="679.7" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="676.9" y="2563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.9" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="676.9" y="2547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.9" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="676.9" y="2531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.9" y="2542.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (7 samples, 0.15%)</title><rect x="677.2" y="2579.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.2" y="2590.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (3 samples, 0.06%)</title><rect x="677.7" y="2563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.7" y="2574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="678.0" y="2547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.0" y="2558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="678.0" y="2531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="681.0" y="2542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="678.0" y="2515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="681.0" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="678.5" y="2563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="681.5" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="678.5" y="2547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.5" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="678.5" y="2531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.5" y="2542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (188 samples, 4.05%)</title><rect x="679.0" y="2579.0" width="47.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.0" y="2590.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/470483530.accept (179 samples, 3.86%)</title><rect x="679.0" y="2563.0" width="45.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.0" y="2574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (179 samples, 3.86%)</title><rect x="679.0" y="2547.0" width="45.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.0" y="2558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (179 samples, 3.86%)</title><rect x="679.0" y="2531.0" width="45.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.0" y="2542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (179 samples, 3.86%)</title><rect x="679.0" y="2515.0" width="45.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.0" y="2526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (179 samples, 3.86%)</title><rect x="679.0" y="2499.0" width="45.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.0" y="2510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.11%)</title><rect x="679.0" y="2483.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.0" y="2494.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.02%)</title><rect x="679.2" y="2467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.2" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.06%)</title><rect x="679.5" y="2467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.5" y="2478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.06%)</title><rect x="679.5" y="2451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.5" y="2462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.02%)</title><rect x="679.5" y="2435.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.5" y="2446.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="679.7" y="2435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.7" y="2446.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="680.0" y="2419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.0" y="2430.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="680.0" y="2403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.0" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (174 samples, 3.75%)</title><rect x="680.3" y="2483.0" width="44.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.3" y="2494.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (174 samples, 3.75%)</title><rect x="680.3" y="2467.0" width="44.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.3" y="2478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (174 samples, 3.75%)</title><rect x="680.3" y="2451.0" width="44.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.3" y="2462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.06%)</title><rect x="680.3" y="2435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.3" y="2446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.06%)</title><rect x="680.3" y="2419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.3" y="2430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (3 samples, 0.06%)</title><rect x="680.3" y="2403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.3" y="2414.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="680.3" y="2387.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="683.3" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="680.8" y="2387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.8" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (171 samples, 3.69%)</title><rect x="681.0" y="2435.0" width="43.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.0" y="2446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (169 samples, 3.64%)</title><rect x="681.3" y="2419.0" width="43.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.3" y="2430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/1097621600.run (168 samples, 3.62%)</title><rect x="681.3" y="2403.0" width="42.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.3" y="2414.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (168 samples, 3.62%)</title><rect x="681.3" y="2387.0" width="42.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="2398.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (90 samples, 1.94%)</title><rect x="681.5" y="2371.0" width="22.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.5" y="2382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (90 samples, 1.94%)</title><rect x="681.5" y="2355.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.5" y="2366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (90 samples, 1.94%)</title><rect x="681.5" y="2339.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.5" y="2350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (90 samples, 1.94%)</title><rect x="681.5" y="2323.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.5" y="2334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (88 samples, 1.90%)</title><rect x="681.8" y="2307.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.8" y="2318.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (88 samples, 1.90%)</title><rect x="681.8" y="2291.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.8" y="2302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (88 samples, 1.90%)</title><rect x="681.8" y="2275.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.8" y="2286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.04%)</title><rect x="681.8" y="2259.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.8" y="2270.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="682.0" y="2243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.0" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="682.0" y="2227.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.0" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="682.0" y="2211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="685.0" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (86 samples, 1.85%)</title><rect x="682.3" y="2259.0" width="21.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.3" y="2270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (86 samples, 1.85%)</title><rect x="682.3" y="2243.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.3" y="2254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (84 samples, 1.81%)</title><rect x="682.3" y="2227.0" width="21.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.3" y="2238.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (84 samples, 1.81%)</title><rect x="682.3" y="2211.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.3" y="2222.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (83 samples, 1.79%)</title><rect x="682.3" y="2195.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.3" y="2206.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.15%)</title><rect x="682.3" y="2179.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="685.3" y="2190.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.04%)</title><rect x="682.3" y="2163.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="685.3" y="2174.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="682.8" y="2163.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="685.8" y="2174.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="683.3" y="2163.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="686.3" y="2174.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="683.6" y="2163.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="686.6" y="2174.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="684.1" y="2179.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="687.1" y="2190.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (75 samples, 1.62%)</title><rect x="684.3" y="2179.0" width="19.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="687.3" y="2190.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 1.53%)</title><rect x="685.3" y="2163.0" width="18.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="688.3" y="2174.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 1.53%)</title><rect x="685.3" y="2147.0" width="18.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.3" y="2158.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.15%)</title><rect x="686.1" y="2131.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="689.1" y="2142.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.15%)</title><rect x="686.1" y="2115.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.1" y="2126.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.15%)</title><rect x="686.1" y="2099.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="689.1" y="2110.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.13%)</title><rect x="686.4" y="2083.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="689.4" y="2094.0"></text>
</g>
<g>
<title>sys_futex (61 samples, 1.31%)</title><rect x="687.9" y="2131.0" width="15.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="690.9" y="2142.0"></text>
</g>
<g>
<title>do_futex (61 samples, 1.31%)</title><rect x="687.9" y="2115.0" width="15.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="690.9" y="2126.0"></text>
</g>
<g>
<title>futex_wake (60 samples, 1.29%)</title><rect x="688.1" y="2099.0" width="15.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="691.1" y="2110.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.11%)</title><rect x="688.9" y="2083.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="691.9" y="2094.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.04%)</title><rect x="688.9" y="2067.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.9" y="2078.0"></text>
</g>
<g>
<title>wake_q_add (3 samples, 0.06%)</title><rect x="689.4" y="2067.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="692.4" y="2078.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="690.2" y="2083.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.2" y="2094.0"></text>
</g>
<g>
<title>wake_up_q (51 samples, 1.10%)</title><rect x="690.4" y="2083.0" width="13.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.4" y="2094.0"></text>
</g>
<g>
<title>try_to_wake_up (51 samples, 1.10%)</title><rect x="690.4" y="2067.0" width="13.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="693.4" y="2078.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 1.10%)</title><rect x="690.4" y="2051.0" width="13.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="693.4" y="2062.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="703.4" y="2195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="706.4" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="703.4" y="2179.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="706.4" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="703.4" y="2163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.4" y="2174.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.04%)</title><rect x="703.7" y="2227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.7" y="2238.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="703.9" y="2211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="706.9" y="2222.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="703.9" y="2195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="706.9" y="2206.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="703.9" y="2179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="706.9" y="2190.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="704.2" y="2307.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="707.2" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="704.2" y="2291.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="707.2" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="704.2" y="2275.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.2" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (9 samples, 0.19%)</title><rect x="704.4" y="2371.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.4" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (8 samples, 0.17%)</title><rect x="704.4" y="2355.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.4" y="2366.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="704.4" y="2339.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="707.4" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.04%)</title><rect x="704.7" y="2339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.7" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.04%)</title><rect x="704.7" y="2323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.7" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.04%)</title><rect x="704.7" y="2307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.7" y="2318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="704.7" y="2291.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="707.7" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="704.9" y="2291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.9" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="704.9" y="2275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.9" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.02%)</title><rect x="704.9" y="2259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.9" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.02%)</title><rect x="704.9" y="2243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.9" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="704.9" y="2227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.9" y="2238.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="704.9" y="2211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.9" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="704.9" y="2195.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.9" y="2206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="704.9" y="2179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="707.9" y="2190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="704.9" y="2163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="707.9" y="2174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.11%)</title><rect x="705.2" y="2339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.2" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.11%)</title><rect x="705.2" y="2323.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.2" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.11%)</title><rect x="705.2" y="2307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.2" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.11%)</title><rect x="705.2" y="2291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.2" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.11%)</title><rect x="705.2" y="2275.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.2" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (5 samples, 0.11%)</title><rect x="705.2" y="2259.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.2" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (5 samples, 0.11%)</title><rect x="705.2" y="2243.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.2" y="2254.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (5 samples, 0.11%)</title><rect x="705.2" y="2227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.2" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.11%)</title><rect x="705.2" y="2211.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.2" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.11%)</title><rect x="705.2" y="2195.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.2" y="2206.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="705.2" y="2179.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="708.2" y="2190.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="705.4" y="2163.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="708.4" y="2174.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="705.4" y="2147.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.4" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="705.4" y="2131.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="708.4" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="705.4" y="2115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="708.4" y="2126.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="705.7" y="2179.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="708.7" y="2190.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="705.9" y="2163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="708.9" y="2174.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="705.9" y="2147.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="708.9" y="2158.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="706.2" y="2131.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="709.2" y="2142.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="706.2" y="2115.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="709.2" y="2126.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="706.2" y="2099.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="709.2" y="2110.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="706.2" y="2083.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.2" y="2094.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="706.2" y="2067.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.2" y="2078.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="706.2" y="2051.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="709.2" y="2062.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="706.5" y="2355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.5" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="706.5" y="2339.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.5" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="706.5" y="2323.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="709.5" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.09%)</title><rect x="706.7" y="2371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.7" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.09%)</title><rect x="706.7" y="2355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.7" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.09%)</title><rect x="706.7" y="2339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.7" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.04%)</title><rect x="707.2" y="2323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.2" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.04%)</title><rect x="707.2" y="2307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.2" y="2318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.02%)</title><rect x="707.2" y="2291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.2" y="2302.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="707.5" y="2291.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.5" y="2302.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="707.5" y="2275.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.5" y="2286.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="707.5" y="2259.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.5" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (64 samples, 1.38%)</title><rect x="707.7" y="2371.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.7" y="2382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="708.5" y="2355.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.5" y="2366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (60 samples, 1.29%)</title><rect x="708.7" y="2355.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.7" y="2366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (60 samples, 1.29%)</title><rect x="708.7" y="2339.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.7" y="2350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (59 samples, 1.27%)</title><rect x="708.7" y="2323.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.7" y="2334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.22%)</title><rect x="708.7" y="2307.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.7" y="2318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.22%)</title><rect x="708.7" y="2291.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.7" y="2302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.22%)</title><rect x="708.7" y="2275.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.7" y="2286.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="710.3" y="2259.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="713.3" y="2270.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.04%)</title><rect x="710.8" y="2259.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="713.8" y="2270.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="711.0" y="2243.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="714.0" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="711.0" y="2227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.0" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="711.0" y="2211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="714.0" y="2222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (48 samples, 1.03%)</title><rect x="711.3" y="2307.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.3" y="2318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (48 samples, 1.03%)</title><rect x="711.3" y="2291.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.3" y="2302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (43 samples, 0.93%)</title><rect x="712.0" y="2275.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.0" y="2286.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.88%)</title><rect x="712.3" y="2259.0" width="10.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="715.3" y="2270.0"></text>
</g>
<g>
<title>__libc_read (41 samples, 0.88%)</title><rect x="712.3" y="2243.0" width="10.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="715.3" y="2254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.80%)</title><rect x="713.1" y="2227.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="716.1" y="2238.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.78%)</title><rect x="713.1" y="2211.0" width="9.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="716.1" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="714.8" y="2195.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="717.8" y="2206.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="714.8" y="2179.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.8" y="2190.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="714.8" y="2163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="717.8" y="2174.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="714.8" y="2147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.8" y="2158.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="715.1" y="2195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="718.1" y="2206.0"></text>
</g>
<g>
<title>sys_read (27 samples, 0.58%)</title><rect x="715.4" y="2195.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="718.4" y="2206.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="715.4" y="2179.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.4" y="2190.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="715.4" y="2163.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="718.4" y="2174.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="715.4" y="2147.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="718.4" y="2158.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="715.6" y="2179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="718.6" y="2190.0"></text>
</g>
<g>
<title>vfs_read (25 samples, 0.54%)</title><rect x="715.9" y="2179.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="718.9" y="2190.0"></text>
</g>
<g>
<title>__vfs_read (20 samples, 0.43%)</title><rect x="716.4" y="2163.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="719.4" y="2174.0"></text>
</g>
<g>
<title>new_sync_read (19 samples, 0.41%)</title><rect x="716.4" y="2147.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="719.4" y="2158.0"></text>
</g>
<g>
<title>sock_read_iter (18 samples, 0.39%)</title><rect x="716.4" y="2131.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.4" y="2142.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.06%)</title><rect x="716.4" y="2115.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="719.4" y="2126.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.32%)</title><rect x="717.1" y="2115.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="720.1" y="2126.0"></text>
</g>
<g>
<title>inet_recvmsg (15 samples, 0.32%)</title><rect x="717.1" y="2099.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.1" y="2110.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="717.4" y="2083.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.4" y="2094.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="717.6" y="2083.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.6" y="2094.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.26%)</title><rect x="717.9" y="2083.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="720.9" y="2094.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="718.9" y="2067.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.9" y="2078.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="718.9" y="2051.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="721.9" y="2062.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="719.2" y="2067.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="722.2" y="2078.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="719.4" y="2067.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.4" y="2078.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.09%)</title><rect x="719.7" y="2067.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.7" y="2078.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="719.7" y="2051.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="722.7" y="2062.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="719.9" y="2051.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.9" y="2062.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="720.2" y="2035.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="723.2" y="2046.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="720.7" y="2067.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="723.7" y="2078.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="721.0" y="2131.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="724.0" y="2142.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.02%)</title><rect x="721.2" y="2147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.2" y="2158.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.06%)</title><rect x="721.5" y="2163.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.5" y="2174.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="721.5" y="2147.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="724.5" y="2158.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="721.7" y="2147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="724.7" y="2158.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="721.7" y="2131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.7" y="2142.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="721.7" y="2115.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.7" y="2126.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="722.0" y="2131.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="725.0" y="2142.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.02%)</title><rect x="722.2" y="2211.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="725.2" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="722.5" y="2227.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="725.5" y="2238.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="722.5" y="2211.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.5" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="722.5" y="2195.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.5" y="2206.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="722.7" y="2259.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="725.7" y="2270.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="723.0" y="2275.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.0" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="723.0" y="2259.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.0" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="723.0" y="2243.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="726.0" y="2254.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="723.5" y="2307.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.5" y="2318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="723.5" y="2291.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.5" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="723.7" y="2323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.7" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="723.7" y="2307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.7" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="723.7" y="2291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.7" y="2302.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="723.7" y="2275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="726.7" y="2286.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="723.7" y="2259.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="726.7" y="2270.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="723.7" y="2243.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.7" y="2254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="724.0" y="2403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.0" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="724.0" y="2387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.0" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="724.0" y="2371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="727.0" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="724.0" y="2355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="727.0" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="724.3" y="2419.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.3" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="724.3" y="2403.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.3" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="724.3" y="2387.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="727.3" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/118468283.accept (7 samples, 0.15%)</title><rect x="724.5" y="2563.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.5" y="2574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (7 samples, 0.15%)</title><rect x="724.5" y="2547.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.5" y="2558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$246/1367138030.run (7 samples, 0.15%)</title><rect x="724.5" y="2531.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.5" y="2542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (7 samples, 0.15%)</title><rect x="724.5" y="2515.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.5" y="2526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (7 samples, 0.15%)</title><rect x="724.5" y="2499.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.5" y="2510.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="725.0" y="2483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.0" y="2494.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="725.0" y="2467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.0" y="2478.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.0" y="2451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.0" y="2462.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.0" y="2435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.0" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="725.0" y="2419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.0" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="725.0" y="2403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.0" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="725.0" y="2387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.0" y="2398.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (4 samples, 0.09%)</title><rect x="725.3" y="2483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.3" y="2494.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.setEventOps (4 samples, 0.09%)</title><rect x="725.3" y="2467.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.3" y="2478.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.02%)</title><rect x="725.8" y="2451.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.8" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="725.8" y="2435.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="728.8" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="725.8" y="2419.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="728.8" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="725.8" y="2403.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="728.8" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="726.0" y="2451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="729.0" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="726.0" y="2435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="729.0" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="726.0" y="2419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.0" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="726.3" y="2563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.3" y="2574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="726.3" y="2547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="729.3" y="2558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="726.3" y="2531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="729.3" y="2542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="726.3" y="2515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="729.3" y="2526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (8 samples, 0.17%)</title><rect x="726.8" y="2579.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.8" y="2590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.17%)</title><rect x="726.8" y="2563.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.8" y="2574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.characteristics (1 samples, 0.02%)</title><rect x="727.1" y="2547.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.1" y="2558.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.11%)</title><rect x="727.3" y="2547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.3" y="2558.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (5 samples, 0.11%)</title><rect x="727.3" y="2531.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.3" y="2542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.11%)</title><rect x="727.3" y="2515.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.3" y="2526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.11%)</title><rect x="727.3" y="2499.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.3" y="2510.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="727.3" y="2483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.3" y="2494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="727.3" y="2467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.3" y="2478.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.02%)</title><rect x="727.3" y="2451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.3" y="2462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.06%)</title><rect x="727.6" y="2483.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.6" y="2494.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="727.8" y="2467.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="730.8" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="728.1" y="2451.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="731.1" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="728.1" y="2435.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.1" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="728.1" y="2419.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="731.1" y="2430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.02%)</title><rect x="728.3" y="2483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.3" y="2494.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.getOpFlags (1 samples, 0.02%)</title><rect x="728.6" y="2547.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.6" y="2558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (292 samples, 6.29%)</title><rect x="728.8" y="2579.0" width="74.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.8" y="2590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$164/1337691867.run (129 samples, 2.78%)</title><rect x="728.8" y="2563.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.8" y="2574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (129 samples, 2.78%)</title><rect x="728.8" y="2547.0" width="32.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.8" y="2558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (129 samples, 2.78%)</title><rect x="728.8" y="2531.0" width="32.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.8" y="2542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 2.76%)</title><rect x="728.8" y="2515.0" width="32.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.8" y="2526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.06%)</title><rect x="728.8" y="2499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.8" y="2510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.06%)</title><rect x="728.8" y="2483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.8" y="2494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (3 samples, 0.06%)</title><rect x="728.8" y="2467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.8" y="2478.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="728.8" y="2451.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="731.8" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="729.1" y="2435.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="732.1" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="729.1" y="2419.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="732.1" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="729.1" y="2403.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="732.1" y="2414.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="729.1" y="2387.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="732.1" y="2398.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="729.1" y="2371.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="732.1" y="2382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="729.1" y="2355.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="732.1" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="729.3" y="2451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.3" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="729.3" y="2435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="732.3" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="729.3" y="2419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="732.3" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="729.3" y="2403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="732.3" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (125 samples, 2.69%)</title><rect x="729.6" y="2499.0" width="31.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.6" y="2510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (125 samples, 2.69%)</title><rect x="729.6" y="2483.0" width="31.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.6" y="2494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/1097621600.run (123 samples, 2.65%)</title><rect x="729.6" y="2467.0" width="31.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.6" y="2478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (123 samples, 2.65%)</title><rect x="729.6" y="2451.0" width="31.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.6" y="2462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (8 samples, 0.17%)</title><rect x="729.9" y="2435.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.9" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (8 samples, 0.17%)</title><rect x="729.9" y="2419.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.9" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (8 samples, 0.17%)</title><rect x="729.9" y="2403.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.9" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.17%)</title><rect x="729.9" y="2387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.9" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.15%)</title><rect x="729.9" y="2371.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.9" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.15%)</title><rect x="729.9" y="2355.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.9" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.15%)</title><rect x="729.9" y="2339.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.9" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (7 samples, 0.15%)</title><rect x="729.9" y="2323.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.9" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (7 samples, 0.15%)</title><rect x="729.9" y="2307.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.9" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (7 samples, 0.15%)</title><rect x="729.9" y="2291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.9" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.15%)</title><rect x="729.9" y="2275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.9" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.15%)</title><rect x="729.9" y="2259.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.9" y="2270.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.15%)</title><rect x="729.9" y="2243.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="732.9" y="2254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.15%)</title><rect x="729.9" y="2227.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.9" y="2238.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.15%)</title><rect x="729.9" y="2211.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.9" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="729.9" y="2195.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.9" y="2206.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="729.9" y="2179.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.9" y="2190.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="729.9" y="2163.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="732.9" y="2174.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="729.9" y="2147.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.9" y="2158.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.13%)</title><rect x="730.1" y="2195.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.1" y="2206.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.13%)</title><rect x="730.1" y="2179.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="733.1" y="2190.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.11%)</title><rect x="730.1" y="2163.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.1" y="2174.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="730.4" y="2147.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="733.4" y="2158.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.13 (1 samples, 0.02%)</title><rect x="730.4" y="2131.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="733.4" y="2142.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="730.6" y="2147.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="733.6" y="2158.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="730.6" y="2131.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="733.6" y="2142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="730.6" y="2115.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="733.6" y="2126.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="731.4" y="2163.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="734.4" y="2174.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="731.6" y="2371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="734.6" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="731.6" y="2355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.6" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="731.6" y="2339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="734.6" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (84 samples, 1.81%)</title><rect x="731.9" y="2435.0" width="21.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.9" y="2446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (79 samples, 1.70%)</title><rect x="732.9" y="2419.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.9" y="2430.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.11%)</title><rect x="732.9" y="2403.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="735.9" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="733.4" y="2387.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.4" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="733.4" y="2371.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="736.4" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="733.4" y="2355.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="736.4" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.04%)</title><rect x="734.2" y="2403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.2" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.02%)</title><rect x="734.4" y="2387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.4" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.02%)</title><rect x="734.4" y="2371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.4" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="734.4" y="2355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.4" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="734.4" y="2339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.4" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.02%)</title><rect x="734.4" y="2323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.4" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (70 samples, 1.51%)</title><rect x="734.7" y="2403.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.7" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 1.51%)</title><rect x="734.7" y="2387.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.7" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (68 samples, 1.47%)</title><rect x="735.2" y="2371.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.2" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 1.47%)</title><rect x="735.2" y="2355.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.2" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 1.47%)</title><rect x="735.2" y="2339.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.2" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (67 samples, 1.44%)</title><rect x="735.4" y="2323.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.4" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (65 samples, 1.40%)</title><rect x="736.0" y="2307.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.0" y="2318.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (64 samples, 1.38%)</title><rect x="736.0" y="2291.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.0" y="2302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (64 samples, 1.38%)</title><rect x="736.0" y="2275.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.0" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (62 samples, 1.34%)</title><rect x="736.2" y="2259.0" width="15.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.2" y="2270.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.11%)</title><rect x="736.2" y="2243.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="739.2" y="2254.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="736.2" y="2227.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="739.2" y="2238.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="736.7" y="2227.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="739.7" y="2238.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="737.0" y="2211.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="740.0" y="2222.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="737.0" y="2195.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="740.0" y="2206.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="737.0" y="2179.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="740.0" y="2190.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="737.2" y="2227.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="740.2" y="2238.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (57 samples, 1.23%)</title><rect x="737.5" y="2243.0" width="14.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="740.5" y="2254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 1.16%)</title><rect x="738.2" y="2227.0" width="13.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="741.2" y="2238.0"></text>
</g>
<g>
<title>__indirect_thunk_start (1 samples, 0.02%)</title><rect x="738.2" y="2211.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.2" y="2222.0"></text>
</g>
<g>
<title>do_syscall_64 (52 samples, 1.12%)</title><rect x="738.5" y="2211.0" width="13.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.5" y="2222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="739.3" y="2195.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="742.3" y="2206.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="739.3" y="2179.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="742.3" y="2190.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="739.3" y="2163.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="742.3" y="2174.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="739.5" y="2147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="742.5" y="2158.0"></text>
</g>
<g>
<title>sys_futex (47 samples, 1.01%)</title><rect x="739.8" y="2195.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.8" y="2206.0"></text>
</g>
<g>
<title>do_futex (47 samples, 1.01%)</title><rect x="739.8" y="2179.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.8" y="2190.0"></text>
</g>
<g>
<title>futex_wake (47 samples, 1.01%)</title><rect x="739.8" y="2163.0" width="11.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.8" y="2174.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="740.0" y="2147.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.0" y="2158.0"></text>
</g>
<g>
<title>wake_up_q (45 samples, 0.97%)</title><rect x="740.3" y="2147.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="743.3" y="2158.0"></text>
</g>
<g>
<title>try_to_wake_up (45 samples, 0.97%)</title><rect x="740.3" y="2131.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="743.3" y="2142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (45 samples, 0.97%)</title><rect x="740.3" y="2115.0" width="11.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.3" y="2126.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="751.7" y="2211.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="754.7" y="2222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="752.0" y="2259.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="755.0" y="2270.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="752.0" y="2243.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="755.0" y="2254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="752.0" y="2227.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="755.0" y="2238.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.02%)</title><rect x="752.2" y="2291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.2" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (2 samples, 0.04%)</title><rect x="752.5" y="2403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.5" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="752.7" y="2387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="755.7" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="752.7" y="2371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="755.7" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="752.7" y="2355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="755.7" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="753.0" y="2419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.0" y="2430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="753.0" y="2403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="756.0" y="2414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="753.0" y="2387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.0" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.04%)</title><rect x="753.3" y="2435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.3" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.04%)</title><rect x="753.3" y="2419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.3" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.04%)</title><rect x="753.3" y="2403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.3" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (27 samples, 0.58%)</title><rect x="753.8" y="2435.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.8" y="2446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (27 samples, 0.58%)</title><rect x="753.8" y="2419.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.8" y="2430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (27 samples, 0.58%)</title><rect x="753.8" y="2403.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.8" y="2414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (26 samples, 0.56%)</title><rect x="754.0" y="2387.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.0" y="2398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (25 samples, 0.54%)</title><rect x="754.0" y="2371.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.0" y="2382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (25 samples, 0.54%)</title><rect x="754.0" y="2355.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.0" y="2366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (24 samples, 0.52%)</title><rect x="754.3" y="2339.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.3" y="2350.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.43%)</title><rect x="754.3" y="2323.0" width="5.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="757.3" y="2334.0"></text>
</g>
<g>
<title>__libc_read (20 samples, 0.43%)</title><rect x="754.3" y="2307.0" width="5.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="757.3" y="2318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.41%)</title><rect x="754.5" y="2291.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="757.5" y="2302.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.41%)</title><rect x="754.5" y="2275.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.5" y="2286.0"></text>
</g>
<g>
<title>sys_read (15 samples, 0.32%)</title><rect x="755.5" y="2259.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.5" y="2270.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="755.5" y="2243.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="758.5" y="2254.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="755.5" y="2227.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="758.5" y="2238.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="755.5" y="2211.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="758.5" y="2222.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.28%)</title><rect x="756.1" y="2243.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.1" y="2254.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.15%)</title><rect x="756.1" y="2227.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.1" y="2238.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.11%)</title><rect x="756.6" y="2211.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="759.6" y="2222.0"></text>
</g>
<g>
<title>sock_read_iter (5 samples, 0.11%)</title><rect x="756.6" y="2195.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="759.6" y="2206.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.09%)</title><rect x="756.8" y="2179.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="759.8" y="2190.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.04%)</title><rect x="756.8" y="2163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="759.8" y="2174.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.04%)</title><rect x="756.8" y="2147.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.8" y="2158.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="756.8" y="2131.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="759.8" y="2142.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="757.1" y="2115.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="760.1" y="2126.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.04%)</title><rect x="757.3" y="2163.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="760.3" y="2174.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="757.3" y="2147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="760.3" y="2158.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="757.3" y="2131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="760.3" y="2142.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="757.3" y="2115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.3" y="2126.0"></text>
</g>
<g>
<title>aa_label_sk_perm (2 samples, 0.04%)</title><rect x="757.3" y="2099.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.3" y="2110.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.13%)</title><rect x="757.8" y="2227.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="760.8" y="2238.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="758.1" y="2211.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="761.1" y="2222.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.09%)</title><rect x="758.3" y="2211.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="761.3" y="2222.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="758.6" y="2195.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="761.6" y="2206.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="758.6" y="2179.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="761.6" y="2190.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="758.9" y="2163.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.9" y="2174.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="759.1" y="2195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="762.1" y="2206.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.06%)</title><rect x="759.4" y="2323.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="762.4" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="759.9" y="2307.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.9" y="2318.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="759.9" y="2291.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="762.9" y="2302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="759.9" y="2275.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.9" y="2286.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="760.1" y="2323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.1" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="760.1" y="2307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.1" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="760.1" y="2291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="763.1" y="2302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="760.4" y="2371.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.4" y="2382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="760.4" y="2355.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.4" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="760.4" y="2339.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="763.4" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="760.4" y="2323.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.4" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="760.4" y="2307.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="763.4" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="760.6" y="2435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="763.6" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="760.6" y="2419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="763.6" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="760.6" y="2403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.6" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.02%)</title><rect x="760.9" y="2467.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.9" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="761.1" y="2467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="764.1" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="761.1" y="2451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.1" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="761.1" y="2435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.1" y="2446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="761.4" y="2515.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="764.4" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="761.4" y="2499.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="764.4" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="761.4" y="2483.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.4" y="2494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$170/1697771214.run (163 samples, 3.51%)</title><rect x="761.6" y="2563.0" width="41.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.6" y="2574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (163 samples, 3.51%)</title><rect x="761.6" y="2547.0" width="41.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.6" y="2558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (158 samples, 3.41%)</title><rect x="762.7" y="2531.0" width="40.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.7" y="2542.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (158 samples, 3.41%)</title><rect x="762.7" y="2515.0" width="40.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.7" y="2526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (158 samples, 3.41%)</title><rect x="762.7" y="2499.0" width="40.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.7" y="2510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (156 samples, 3.36%)</title><rect x="762.9" y="2483.0" width="39.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.9" y="2494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (156 samples, 3.36%)</title><rect x="762.9" y="2467.0" width="39.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.9" y="2478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (155 samples, 3.34%)</title><rect x="762.9" y="2451.0" width="39.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.9" y="2462.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (154 samples, 3.32%)</title><rect x="762.9" y="2435.0" width="39.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.9" y="2446.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="762.9" y="2419.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="765.9" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="762.9" y="2403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.9" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="762.9" y="2387.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="765.9" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="762.9" y="2371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="765.9" y="2382.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.04%)</title><rect x="763.4" y="2419.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="766.4" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="763.7" y="2403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="766.7" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="763.7" y="2387.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="766.7" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="763.7" y="2371.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="766.7" y="2382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.30%)</title><rect x="763.9" y="2419.0" width="3.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="766.9" y="2430.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="764.2" y="2403.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="767.2" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="764.4" y="2387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.4" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="764.4" y="2371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="767.4" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="764.4" y="2355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.4" y="2366.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="764.7" y="2403.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="767.7" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="764.7" y="2387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="767.7" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="764.7" y="2371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="767.7" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="764.7" y="2355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="767.7" y="2366.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="765.0" y="2403.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="768.0" y="2414.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.06%)</title><rect x="765.5" y="2403.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="768.5" y="2414.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="766.2" y="2403.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="769.2" y="2414.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="766.5" y="2403.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="769.5" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="766.7" y="2387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="769.7" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="766.7" y="2371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="769.7" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="766.7" y="2355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.7" y="2366.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="767.0" y="2403.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="770.0" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="767.2" y="2403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="770.2" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="767.2" y="2387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.2" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="767.2" y="2371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.2" y="2382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="767.5" y="2419.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="770.5" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="767.5" y="2403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.5" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="767.5" y="2387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="770.5" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="767.5" y="2371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="770.5" y="2382.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="767.8" y="2419.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="770.8" y="2430.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.04%)</title><rect x="768.0" y="2419.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="771.0" y="2430.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (132 samples, 2.85%)</title><rect x="768.5" y="2419.0" width="33.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="771.5" y="2430.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 2.78%)</title><rect x="768.5" y="2403.0" width="32.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.5" y="2414.0">en..</text>
</g>
<g>
<title>do_syscall_64 (129 samples, 2.78%)</title><rect x="768.5" y="2387.0" width="32.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="771.5" y="2398.0">do..</text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.22%)</title><rect x="770.3" y="2371.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="773.3" y="2382.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.22%)</title><rect x="770.3" y="2355.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.3" y="2366.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.22%)</title><rect x="770.3" y="2339.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.3" y="2350.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.19%)</title><rect x="770.6" y="2323.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="773.6" y="2334.0"></text>
</g>
<g>
<title>sys_futex (112 samples, 2.41%)</title><rect x="772.8" y="2371.0" width="28.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="775.8" y="2382.0">sy..</text>
</g>
<g>
<title>do_futex (111 samples, 2.39%)</title><rect x="773.1" y="2355.0" width="28.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="776.1" y="2366.0">do..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="773.6" y="2339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="776.6" y="2350.0"></text>
</g>
<g>
<title>futex_wake (108 samples, 2.33%)</title><rect x="773.9" y="2339.0" width="27.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="776.9" y="2350.0">f..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="774.6" y="2323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.6" y="2334.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.13 (1 samples, 0.02%)</title><rect x="774.6" y="2307.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="777.6" y="2318.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.09%)</title><rect x="774.9" y="2323.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="777.9" y="2334.0"></text>
</g>
<g>
<title>wake_q_add (4 samples, 0.09%)</title><rect x="774.9" y="2307.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="777.9" y="2318.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.02%)</title><rect x="775.9" y="2323.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="778.9" y="2334.0"></text>
</g>
<g>
<title>wake_up_q (99 samples, 2.13%)</title><rect x="776.1" y="2323.0" width="25.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.1" y="2334.0">w..</text>
</g>
<g>
<title>try_to_wake_up (99 samples, 2.13%)</title><rect x="776.1" y="2307.0" width="25.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.1" y="2318.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (99 samples, 2.13%)</title><rect x="776.1" y="2291.0" width="25.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.1" y="2302.0">_..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="801.3" y="2403.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="804.3" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="801.3" y="2387.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="804.3" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="801.3" y="2371.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="804.3" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="802.1" y="2435.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="805.1" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="802.1" y="2419.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="805.1" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="802.1" y="2403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="805.1" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="802.3" y="2451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="805.3" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="802.3" y="2435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="805.3" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="802.3" y="2419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="805.3" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="802.6" y="2483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="805.6" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="802.6" y="2467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="805.6" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="802.6" y="2451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="805.6" y="2462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.02%)</title><rect x="802.9" y="2531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.9" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="802.9" y="2515.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="805.9" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="802.9" y="2499.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="805.9" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="802.9" y="2483.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="805.9" y="2494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7 samples, 0.15%)</title><rect x="803.1" y="2579.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.1" y="2590.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="803.1" y="2563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.1" y="2574.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="803.1" y="2547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.1" y="2558.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="803.1" y="2531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.1" y="2542.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="803.1" y="2515.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="806.1" y="2526.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="803.4" y="2499.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="806.4" y="2510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="803.4" y="2483.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="806.4" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="803.4" y="2467.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="806.4" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="803.4" y="2451.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="806.4" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="803.4" y="2435.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="806.4" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.11%)</title><rect x="803.6" y="2563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.6" y="2574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.11%)</title><rect x="803.6" y="2547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.6" y="2558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="804.4" y="2531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="807.4" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="804.4" y="2515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="807.4" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="804.4" y="2499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="807.4" y="2510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2 samples, 0.04%)</title><rect x="804.9" y="2579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.9" y="2590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="804.9" y="2563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.9" y="2574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.04%)</title><rect x="804.9" y="2547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.9" y="2558.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.04%)</title><rect x="804.9" y="2531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.9" y="2542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.06%)</title><rect x="805.4" y="2579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.4" y="2590.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.06%)</title><rect x="805.4" y="2563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.4" y="2574.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.06%)</title><rect x="805.4" y="2547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.4" y="2558.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.06%)</title><rect x="805.4" y="2531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.4" y="2542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (15 samples, 0.32%)</title><rect x="806.2" y="2579.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.2" y="2590.0"></text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.17%)</title><rect x="806.7" y="2563.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.7" y="2574.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.17%)</title><rect x="806.7" y="2547.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.7" y="2558.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="807.2" y="2531.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.2" y="2542.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="807.2" y="2515.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.2" y="2526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="807.2" y="2499.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="810.2" y="2510.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.02%)</title><rect x="807.2" y="2483.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="810.2" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="807.2" y="2467.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="810.2" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="807.2" y="2451.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.2" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="807.2" y="2435.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="810.2" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.11%)</title><rect x="807.4" y="2531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.4" y="2542.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.11%)</title><rect x="807.4" y="2515.0" width="1.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="810.4" y="2526.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="807.7" y="2499.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="810.7" y="2510.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.04%)</title><rect x="807.9" y="2499.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="810.9" y="2510.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="807.9" y="2483.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="810.9" y="2494.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="807.9" y="2467.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="810.9" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="807.9" y="2451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="810.9" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="807.9" y="2435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="810.9" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="807.9" y="2419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="810.9" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="808.2" y="2483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="811.2" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="808.2" y="2467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="811.2" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="808.2" y="2451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.2" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="808.5" y="2499.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="811.5" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="808.5" y="2483.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.5" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="808.5" y="2467.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="811.5" y="2478.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.06%)</title><rect x="808.7" y="2563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.7" y="2574.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.06%)</title><rect x="808.7" y="2547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.7" y="2558.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.06%)</title><rect x="808.7" y="2531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="811.7" y="2542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="809.2" y="2515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="812.2" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="809.2" y="2499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="812.2" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="809.2" y="2483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="812.2" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="809.5" y="2563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="812.5" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="809.5" y="2547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="812.5" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="809.5" y="2531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="812.5" y="2542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.02%)</title><rect x="810.0" y="2579.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.0" y="2590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (191 samples, 4.12%)</title><rect x="810.2" y="2579.0" width="48.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.2" y="2590.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (191 samples, 4.12%)</title><rect x="810.2" y="2563.0" width="48.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.2" y="2574.0">sun/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.02%)</title><rect x="810.5" y="2547.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.5" y="2558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="810.5" y="2531.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="813.5" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="810.5" y="2515.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="813.5" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="810.5" y="2499.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.5" y="2510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (189 samples, 4.07%)</title><rect x="810.7" y="2547.0" width="48.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.7" y="2558.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (102 samples, 2.20%)</title><rect x="810.7" y="2531.0" width="26.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.7" y="2542.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.02%)</title><rect x="811.3" y="2515.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="814.3" y="2526.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 2.03%)</title><rect x="811.5" y="2515.0" width="23.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="814.5" y="2526.0">[..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="811.5" y="2499.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="814.5" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="811.8" y="2483.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="814.8" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="811.8" y="2467.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="814.8" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="811.8" y="2451.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.8" y="2462.0"></text>
</g>
<g>
<title>epoll_wait (92 samples, 1.98%)</title><rect x="812.0" y="2499.0" width="23.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="815.0" y="2510.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.79%)</title><rect x="813.0" y="2483.0" width="21.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="816.0" y="2494.0">e..</text>
</g>
<g>
<title>do_syscall_64 (82 samples, 1.77%)</title><rect x="813.0" y="2467.0" width="20.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="816.0" y="2478.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.02%)</title><rect x="813.8" y="2451.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="816.8" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="814.0" y="2451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="817.0" y="2462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="814.0" y="2435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="817.0" y="2446.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="814.0" y="2419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="817.0" y="2430.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="814.0" y="2403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.0" y="2414.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="814.3" y="2451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.3" y="2462.0"></text>
</g>
<g>
<title>sys_epoll_wait (76 samples, 1.64%)</title><rect x="814.6" y="2451.0" width="19.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="817.6" y="2462.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="814.6" y="2435.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="817.6" y="2446.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="814.6" y="2419.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="817.6" y="2430.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="814.8" y="2403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="817.8" y="2414.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="815.3" y="2435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="818.3" y="2446.0"></text>
</g>
<g>
<title>ep_poll (67 samples, 1.44%)</title><rect x="815.6" y="2435.0" width="17.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="818.6" y="2446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.15%)</title><rect x="816.1" y="2419.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="819.1" y="2430.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (22 samples, 0.47%)</title><rect x="817.9" y="2419.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.9" y="2430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="817.9" y="2403.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.9" y="2414.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.37%)</title><rect x="818.9" y="2403.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="821.9" y="2414.0"></text>
</g>
<g>
<title>ep_item_poll.isra.10 (15 samples, 0.32%)</title><rect x="819.1" y="2387.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="822.1" y="2398.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.04%)</title><rect x="820.7" y="2371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.7" y="2382.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.15%)</title><rect x="821.2" y="2371.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="824.2" y="2382.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.09%)</title><rect x="821.9" y="2355.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.9" y="2366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="822.7" y="2339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.7" y="2350.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.02%)</title><rect x="823.0" y="2387.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="826.0" y="2398.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="823.2" y="2403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="826.2" y="2414.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="823.2" y="2387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="826.2" y="2398.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="823.5" y="2419.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="826.5" y="2430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="823.7" y="2419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="826.7" y="2430.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (30 samples, 0.65%)</title><rect x="824.0" y="2419.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="827.0" y="2430.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="824.0" y="2403.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="827.0" y="2414.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (29 samples, 0.63%)</title><rect x="824.2" y="2403.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="827.2" y="2414.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="824.5" y="2387.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="827.5" y="2398.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (10 samples, 0.22%)</title><rect x="824.7" y="2387.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.7" y="2398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.22%)</title><rect x="824.7" y="2371.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="827.7" y="2382.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.37%)</title><rect x="827.3" y="2387.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="830.3" y="2398.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.37%)</title><rect x="827.3" y="2371.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="830.3" y="2382.0"></text>
</g>
<g>
<title>finish_task_switch (17 samples, 0.37%)</title><rect x="827.3" y="2355.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="830.3" y="2366.0"></text>
</g>
<g>
<title>select_estimate_accuracy (2 samples, 0.04%)</title><rect x="831.6" y="2419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="834.6" y="2430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.04%)</title><rect x="831.6" y="2403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="834.6" y="2414.0"></text>
</g>
<g>
<title>kvm_clock_get_cycles (1 samples, 0.02%)</title><rect x="831.9" y="2387.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="834.9" y="2398.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="831.9" y="2371.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="834.9" y="2382.0"></text>
</g>
<g>
<title>set_normalized_timespec64 (2 samples, 0.04%)</title><rect x="832.1" y="2419.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.1" y="2430.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.04%)</title><rect x="832.6" y="2435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="835.6" y="2446.0"></text>
</g>
<g>
<title>timespec64_add_safe (3 samples, 0.06%)</title><rect x="833.1" y="2435.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="836.1" y="2446.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.02%)</title><rect x="833.9" y="2467.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="836.9" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.11%)</title><rect x="834.1" y="2483.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="837.1" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.11%)</title><rect x="834.1" y="2467.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="837.1" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.11%)</title><rect x="834.1" y="2451.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="837.1" y="2462.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.06%)</title><rect x="835.4" y="2515.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="838.4" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="835.9" y="2499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="838.9" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="835.9" y="2483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.9" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="835.9" y="2467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="838.9" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="836.2" y="2515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="839.2" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="836.2" y="2499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="839.2" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="836.2" y="2483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.2" y="2494.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (64 samples, 1.38%)</title><rect x="836.7" y="2531.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.7" y="2542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.13%)</title><rect x="836.7" y="2515.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.7" y="2526.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.13%)</title><rect x="836.7" y="2499.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.7" y="2510.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.02%)</title><rect x="837.4" y="2483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.4" y="2494.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="837.4" y="2467.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="840.4" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="837.7" y="2483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="840.7" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="837.7" y="2467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="840.7" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="837.7" y="2451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="840.7" y="2462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (48 samples, 1.03%)</title><rect x="838.2" y="2515.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.2" y="2526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (48 samples, 1.03%)</title><rect x="838.2" y="2499.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.2" y="2510.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.02%)</title><rect x="838.2" y="2483.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="841.2" y="2494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="838.2" y="2467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="841.2" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="838.2" y="2451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="841.2" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="838.2" y="2435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="841.2" y="2446.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.97%)</title><rect x="838.5" y="2483.0" width="11.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="841.5" y="2494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="838.5" y="2467.0" width="1.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="841.5" y="2478.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="838.5" y="2451.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="841.5" y="2462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.13%)</title><rect x="838.5" y="2435.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="841.5" y="2446.0"></text>
</g>
<g>
<title>__libc_read (6 samples, 0.13%)</title><rect x="838.5" y="2419.0" width="1.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="841.5" y="2430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.13%)</title><rect x="838.5" y="2403.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="841.5" y="2414.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.13%)</title><rect x="838.5" y="2387.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="841.5" y="2398.0"></text>
</g>
<g>
<title>sys_read (6 samples, 0.13%)</title><rect x="838.5" y="2371.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="841.5" y="2382.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="838.5" y="2355.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="841.5" y="2366.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.11%)</title><rect x="838.7" y="2355.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="841.7" y="2366.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.06%)</title><rect x="839.0" y="2339.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="842.0" y="2350.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.06%)</title><rect x="839.0" y="2323.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="842.0" y="2334.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="839.0" y="2307.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="842.0" y="2318.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.04%)</title><rect x="839.2" y="2307.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="842.2" y="2318.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="839.5" y="2291.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="842.5" y="2302.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="839.7" y="2339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="842.7" y="2350.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.02%)</title><rect x="840.0" y="2451.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="843.0" y="2462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="840.0" y="2435.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="843.0" y="2446.0"></text>
</g>
<g>
<title>__libc_read (1 samples, 0.02%)</title><rect x="840.0" y="2419.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="843.0" y="2430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="840.0" y="2403.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="843.0" y="2414.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="840.0" y="2387.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="843.0" y="2398.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.02%)</title><rect x="840.0" y="2371.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="843.0" y="2382.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="840.0" y="2355.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="843.0" y="2366.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="840.0" y="2339.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="843.0" y="2350.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="840.0" y="2323.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="843.0" y="2334.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.02%)</title><rect x="840.0" y="2307.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="843.0" y="2318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="840.0" y="2291.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.0" y="2302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="840.0" y="2275.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="843.0" y="2286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="840.0" y="2259.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.0" y="2270.0"></text>
</g>
<g>
<title>__libc_read (38 samples, 0.82%)</title><rect x="840.2" y="2467.0" width="9.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="843.2" y="2478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.82%)</title><rect x="840.2" y="2451.0" width="9.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.2" y="2462.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.82%)</title><rect x="840.2" y="2435.0" width="9.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="843.2" y="2446.0"></text>
</g>
<g>
<title>sys_read (33 samples, 0.71%)</title><rect x="841.5" y="2419.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="844.5" y="2430.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="841.5" y="2403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="844.5" y="2414.0"></text>
</g>
<g>
<title>vfs_read (32 samples, 0.69%)</title><rect x="841.8" y="2403.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="844.8" y="2414.0"></text>
</g>
<g>
<title>__vfs_read (21 samples, 0.45%)</title><rect x="842.0" y="2387.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="845.0" y="2398.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="842.0" y="2371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.0" y="2382.0"></text>
</g>
<g>
<title>new_sync_read (20 samples, 0.43%)</title><rect x="842.3" y="2371.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="845.3" y="2382.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="842.5" y="2355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.5" y="2366.0"></text>
</g>
<g>
<title>pipe_read (17 samples, 0.37%)</title><rect x="842.8" y="2355.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.8" y="2366.0"></text>
</g>
<g>
<title>__atime_needs_update (2 samples, 0.04%)</title><rect x="843.3" y="2339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.3" y="2350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.17%)</title><rect x="843.8" y="2339.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="846.8" y="2350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.17%)</title><rect x="843.8" y="2323.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="846.8" y="2334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.17%)</title><rect x="843.8" y="2307.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="846.8" y="2318.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.04%)</title><rect x="845.8" y="2339.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="848.8" y="2350.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="846.4" y="2339.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="849.4" y="2350.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="846.9" y="2339.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="849.9" y="2350.0"></text>
</g>
<g>
<title>__atime_needs_update (1 samples, 0.02%)</title><rect x="846.9" y="2323.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.9" y="2334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="846.9" y="2307.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="849.9" y="2318.0"></text>
</g>
<g>
<title>current_kernel_time64 (1 samples, 0.02%)</title><rect x="846.9" y="2291.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.9" y="2302.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="847.1" y="2355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.1" y="2366.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.22%)</title><rect x="847.4" y="2387.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="850.4" y="2398.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="847.6" y="2371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="850.6" y="2382.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="847.9" y="2371.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="850.9" y="2382.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="848.1" y="2371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="851.1" y="2382.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.13%)</title><rect x="848.4" y="2371.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="851.4" y="2382.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.06%)</title><rect x="848.6" y="2355.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="851.6" y="2366.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="848.6" y="2339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.6" y="2350.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="848.9" y="2339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="851.9" y="2350.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="849.2" y="2323.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="852.2" y="2334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="849.4" y="2355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.4" y="2366.0"></text>
</g>
<g>
<title>__libc_read (2 samples, 0.04%)</title><rect x="849.9" y="2483.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="852.9" y="2494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.22%)</title><rect x="850.4" y="2515.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.4" y="2526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.15%)</title><rect x="850.4" y="2499.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.4" y="2510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.13%)</title><rect x="850.7" y="2483.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.7" y="2494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.13%)</title><rect x="850.7" y="2467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.7" y="2478.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.02%)</title><rect x="850.9" y="2451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.9" y="2462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.04%)</title><rect x="851.2" y="2451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.2" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="851.4" y="2435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="854.4" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="851.4" y="2419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="854.4" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="851.4" y="2403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="854.4" y="2414.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="851.7" y="2451.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="854.7" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="851.9" y="2435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="854.9" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="851.9" y="2419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.9" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="851.9" y="2403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="854.9" y="2414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (3 samples, 0.06%)</title><rect x="852.2" y="2499.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.2" y="2510.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="852.7" y="2483.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="855.7" y="2494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="852.7" y="2467.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="855.7" y="2478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (7 samples, 0.15%)</title><rect x="853.0" y="2531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.0" y="2542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (2 samples, 0.04%)</title><rect x="854.0" y="2515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.0" y="2526.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (2 samples, 0.04%)</title><rect x="854.0" y="2499.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="857.0" y="2510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="854.0" y="2483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="857.0" y="2494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="854.0" y="2467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="857.0" y="2478.0"></text>
</g>
<g>
<title>sys_epoll_ctl (2 samples, 0.04%)</title><rect x="854.0" y="2451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="857.0" y="2462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="854.0" y="2435.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.0" y="2446.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="854.2" y="2435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.2" y="2446.0"></text>
</g>
<g>
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="854.2" y="2419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="857.2" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="854.5" y="2515.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="857.5" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="854.5" y="2499.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="857.5" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="854.5" y="2483.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="857.5" y="2494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.06%)</title><rect x="854.7" y="2531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.7" y="2542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.04%)</title><rect x="855.0" y="2515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.0" y="2526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="855.0" y="2499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.0" y="2510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="855.0" y="2483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.0" y="2494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="855.0" y="2467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.0" y="2478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="855.0" y="2451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="858.0" y="2462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="855.0" y="2435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="858.0" y="2446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="855.0" y="2419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="858.0" y="2430.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.02%)</title><rect x="855.5" y="2531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.5" y="2542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.02%)</title><rect x="855.5" y="2515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.5" y="2526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="855.5" y="2499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.5" y="2510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="855.5" y="2483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.5" y="2494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="855.5" y="2467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.5" y="2478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (12 samples, 0.26%)</title><rect x="855.8" y="2531.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.8" y="2542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (2 samples, 0.04%)</title><rect x="856.8" y="2515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="859.8" y="2526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.04%)</title><rect x="856.8" y="2499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.8" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="856.8" y="2483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="859.8" y="2494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="856.8" y="2467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.8" y="2478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="856.8" y="2451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="859.8" y="2462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.06%)</title><rect x="857.3" y="2515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.3" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.06%)</title><rect x="858.1" y="2515.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="861.1" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.06%)</title><rect x="858.1" y="2499.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="861.1" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="858.1" y="2483.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.1" y="2494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (15 samples, 0.32%)</title><rect x="858.8" y="2579.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.8" y="2590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (15 samples, 0.32%)</title><rect x="858.8" y="2563.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.8" y="2574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (15 samples, 0.32%)</title><rect x="858.8" y="2547.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.8" y="2558.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (14 samples, 0.30%)</title><rect x="858.8" y="2531.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.8" y="2542.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="859.1" y="2515.0" width="3.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="862.1" y="2526.0"></text>
</g>
<g>
<title>epoll_wait (13 samples, 0.28%)</title><rect x="859.1" y="2499.0" width="3.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="862.1" y="2510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.28%)</title><rect x="859.1" y="2483.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.1" y="2494.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.28%)</title><rect x="859.1" y="2467.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.1" y="2478.0"></text>
</g>
<g>
<title>sys_epoll_wait (10 samples, 0.22%)</title><rect x="859.8" y="2451.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.8" y="2462.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="859.8" y="2435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.8" y="2446.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="859.8" y="2419.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.8" y="2430.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="859.8" y="2403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.8" y="2414.0"></text>
</g>
<g>
<title>ep_poll (8 samples, 0.17%)</title><rect x="860.3" y="2435.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="863.3" y="2446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="860.3" y="2419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.3" y="2430.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (7 samples, 0.15%)</title><rect x="860.6" y="2419.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.6" y="2430.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="860.6" y="2403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="863.6" y="2414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="860.9" y="2403.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.9" y="2414.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.11%)</title><rect x="861.1" y="2403.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="864.1" y="2414.0"></text>
</g>
<g>
<title>ep_item_poll.isra.10 (3 samples, 0.06%)</title><rect x="861.4" y="2387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="864.4" y="2398.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="861.6" y="2371.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="864.6" y="2382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="861.9" y="2355.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.9" y="2366.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="862.1" y="2387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.1" y="2398.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.02%)</title><rect x="862.4" y="2531.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.4" y="2542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (2 samples, 0.04%)</title><rect x="862.6" y="2579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.6" y="2590.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.02%)</title><rect x="862.9" y="2563.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.9" y="2574.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.02%)</title><rect x="862.9" y="2547.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.9" y="2558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.13%)</title><rect x="863.1" y="2579.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="866.1" y="2590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (6 samples, 0.13%)</title><rect x="863.1" y="2563.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="866.1" y="2574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.13%)</title><rect x="863.1" y="2547.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="866.1" y="2558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.11%)</title><rect x="864.7" y="2595.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.7" y="2606.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.11%)</title><rect x="864.7" y="2579.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="867.7" y="2590.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="864.7" y="2563.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="867.7" y="2574.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="865.4" y="2563.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="868.4" y="2574.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="865.4" y="2547.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="868.4" y="2558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="865.4" y="2531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.4" y="2542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="865.4" y="2515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="868.4" y="2526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="865.4" y="2499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="868.4" y="2510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="865.7" y="2563.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="868.7" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="865.7" y="2547.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.7" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="865.7" y="2531.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="868.7" y="2542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,123 samples, 24.21%)</title><rect x="865.9" y="2595.0" width="285.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.9" y="2606.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (80 samples, 1.72%)</title><rect x="866.7" y="2579.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.7" y="2590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (80 samples, 1.72%)</title><rect x="866.7" y="2563.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.7" y="2574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.06%)</title><rect x="867.5" y="2547.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="870.5" y="2558.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.42%)</title><rect x="868.2" y="2547.0" width="16.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="871.2" y="2558.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="868.2" y="2531.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="871.2" y="2542.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="868.5" y="2531.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="871.5" y="2542.0"></text>
</g>
<g>
<title>epoll_wait (64 samples, 1.38%)</title><rect x="868.7" y="2531.0" width="16.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="871.7" y="2542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 1.27%)</title><rect x="870.0" y="2515.0" width="15.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.0" y="2526.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.25%)</title><rect x="870.0" y="2499.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.0" y="2510.0"></text>
</g>
<g>
<title>sys_epoll_wait (55 samples, 1.19%)</title><rect x="870.8" y="2483.0" width="14.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="873.8" y="2494.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.13%)</title><rect x="870.8" y="2467.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.8" y="2478.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.13%)</title><rect x="870.8" y="2451.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.8" y="2462.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.13%)</title><rect x="870.8" y="2435.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.8" y="2446.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="872.3" y="2467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="875.3" y="2478.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="872.6" y="2467.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="875.6" y="2478.0"></text>
</g>
<g>
<title>ep_poll (47 samples, 1.01%)</title><rect x="872.8" y="2467.0" width="12.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="875.8" y="2478.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.17 (22 samples, 0.47%)</title><rect x="873.1" y="2451.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.1" y="2462.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="873.1" y="2435.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="876.1" y="2446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="873.3" y="2435.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="876.3" y="2446.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.37%)</title><rect x="874.1" y="2435.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="877.1" y="2446.0"></text>
</g>
<g>
<title>ep_item_poll.isra.10 (13 samples, 0.28%)</title><rect x="874.8" y="2419.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="877.8" y="2430.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.22%)</title><rect x="875.6" y="2403.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="878.6" y="2414.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.11%)</title><rect x="876.6" y="2387.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="879.6" y="2398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="877.6" y="2371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="880.6" y="2382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="877.9" y="2387.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="880.9" y="2398.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="878.1" y="2419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="881.1" y="2430.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="878.4" y="2435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="881.4" y="2446.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="878.4" y="2419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="881.4" y="2430.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="878.7" y="2451.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="881.7" y="2462.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 0.47%)</title><rect x="878.9" y="2451.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="881.9" y="2462.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (22 samples, 0.47%)</title><rect x="878.9" y="2435.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="881.9" y="2446.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.45%)</title><rect x="879.2" y="2419.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="882.2" y="2430.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.45%)</title><rect x="879.2" y="2403.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.2" y="2414.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 0.43%)</title><rect x="879.4" y="2387.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="882.4" y="2398.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="884.5" y="2451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="887.5" y="2462.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.02%)</title><rect x="884.8" y="2499.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="887.8" y="2510.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="885.0" y="2547.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="888.0" y="2558.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.09%)</title><rect x="885.5" y="2547.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="888.5" y="2558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="886.5" y="2547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="889.5" y="2558.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="886.5" y="2531.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="889.5" y="2542.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="886.5" y="2515.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="889.5" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="886.5" y="2499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="889.5" y="2510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="886.5" y="2483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.5" y="2494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="886.5" y="2467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.5" y="2478.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="886.8" y="2547.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="889.8" y="2558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="886.8" y="2531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.8" y="2542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="886.8" y="2515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="889.8" y="2526.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="886.8" y="2499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.8" y="2510.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="886.8" y="2483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.8" y="2494.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="886.8" y="2467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="889.8" y="2478.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="886.8" y="2451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="889.8" y="2462.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.02%)</title><rect x="886.8" y="2435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.8" y="2446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,040 samples, 22.42%)</title><rect x="887.1" y="2579.0" width="264.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.1" y="2590.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,038 samples, 22.38%)</title><rect x="887.3" y="2563.0" width="264.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.3" y="2574.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.04%)</title><rect x="887.3" y="2547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.3" y="2558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="887.3" y="2531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.3" y="2542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="887.3" y="2515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.3" y="2526.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="887.3" y="2499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.3" y="2510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (969 samples, 20.89%)</title><rect x="887.8" y="2547.0" width="246.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.8" y="2558.0">one/nio/http/HttpSession.processH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (950 samples, 20.48%)</title><rect x="888.3" y="2531.0" width="241.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.3" y="2542.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (4 samples, 0.09%)</title><rect x="888.6" y="2515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.6" y="2526.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (945 samples, 20.37%)</title><rect x="889.6" y="2515.0" width="240.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.6" y="2526.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (926 samples, 19.96%)</title><rect x="890.9" y="2499.0" width="235.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.9" y="2510.0">RequestHandler1_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.22%)</title><rect x="890.9" y="2483.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.9" y="2494.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="891.4" y="2467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.4" y="2478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="891.4" y="2451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.4" y="2462.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="892.1" y="2467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.1" y="2478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="892.1" y="2451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.1" y="2462.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="892.4" y="2435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.4" y="2446.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="892.9" y="2467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.9" y="2478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="893.2" y="2451.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.2" y="2462.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="893.2" y="2435.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.2" y="2446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="893.2" y="2419.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.2" y="2430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ServiceImpl.entity (916 samples, 19.75%)</title><rect x="893.4" y="2483.0" width="233.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.4" y="2494.0">ru/mail/polis/service/luckydaem..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.09%)</title><rect x="894.2" y="2467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.2" y="2478.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="894.7" y="2451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.7" y="2462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="894.7" y="2435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.7" y="2446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.coordinateRequest (909 samples, 19.59%)</title><rect x="895.2" y="2467.0" width="231.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.2" y="2478.0">ru/mail/polis/service/luckydaem..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (361 samples, 7.78%)</title><rect x="895.2" y="2451.0" width="91.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.2" y="2462.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (351 samples, 7.57%)</title><rect x="896.0" y="2435.0" width="89.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.0" y="2446.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.15%)</title><rect x="896.2" y="2419.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.2" y="2430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="897.0" y="2403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.0" y="2414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="897.7" y="2387.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="900.7" y="2398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (343 samples, 7.39%)</title><rect x="898.0" y="2419.0" width="87.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.0" y="2430.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (343 samples, 7.39%)</title><rect x="898.0" y="2403.0" width="87.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.0" y="2414.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.02%)</title><rect x="898.2" y="2387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.2" y="2398.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (341 samples, 7.35%)</title><rect x="898.5" y="2387.0" width="86.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.5" y="2398.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (340 samples, 7.33%)</title><rect x="898.8" y="2371.0" width="86.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.8" y="2382.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="900.3" y="2355.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="903.3" y="2366.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.47%)</title><rect x="900.5" y="2355.0" width="5.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="903.5" y="2366.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.47%)</title><rect x="900.5" y="2339.0" width="5.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="903.5" y="2350.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.41%)</title><rect x="900.5" y="2323.0" width="4.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="903.5" y="2334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="902.1" y="2307.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="905.1" y="2318.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="902.6" y="2307.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="905.6" y="2318.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.04%)</title><rect x="903.1" y="2307.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="906.1" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="903.3" y="2291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="906.3" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="903.3" y="2275.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="906.3" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="903.3" y="2259.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="906.3" y="2270.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.15%)</title><rect x="903.6" y="2307.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="906.6" y="2318.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (3 samples, 0.06%)</title><rect x="903.6" y="2291.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="906.6" y="2302.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="904.3" y="2291.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="907.3" y="2302.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.06%)</title><rect x="904.6" y="2291.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="907.6" y="2302.0"></text>
</g>
<g>
<title>__send (3 samples, 0.06%)</title><rect x="905.4" y="2323.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="908.4" y="2334.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="906.1" y="2355.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="909.1" y="2366.0"></text>
</g>
<g>
<title>__send (310 samples, 6.68%)</title><rect x="906.4" y="2355.0" width="78.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="909.4" y="2366.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (307 samples, 6.62%)</title><rect x="907.1" y="2339.0" width="78.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="910.1" y="2350.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (307 samples, 6.62%)</title><rect x="907.1" y="2323.0" width="78.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="910.1" y="2334.0">do_syscal..</text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.02%)</title><rect x="908.9" y="2307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="911.9" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="909.2" y="2307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="912.2" y="2318.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="909.2" y="2291.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.2" y="2302.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.06%)</title><rect x="909.2" y="2275.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="912.2" y="2286.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="909.2" y="2259.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.2" y="2270.0"></text>
</g>
<g>
<title>sys_sendto (296 samples, 6.38%)</title><rect x="909.9" y="2307.0" width="75.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.9" y="2318.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (294 samples, 6.34%)</title><rect x="909.9" y="2291.0" width="74.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="912.9" y="2302.0">SYSC_sen..</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="911.0" y="2275.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.0" y="2286.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="911.2" y="2275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.2" y="2286.0"></text>
</g>
<g>
<title>sock_sendmsg (286 samples, 6.17%)</title><rect x="911.5" y="2275.0" width="72.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="914.5" y="2286.0">sock_sen..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="912.2" y="2259.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="915.2" y="2270.0"></text>
</g>
<g>
<title>inet_sendmsg (271 samples, 5.84%)</title><rect x="912.7" y="2259.0" width="69.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.7" y="2270.0">inet_se..</text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="912.7" y="2243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="915.7" y="2254.0"></text>
</g>
<g>
<title>tcp_sendmsg (270 samples, 5.82%)</title><rect x="913.0" y="2243.0" width="68.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="916.0" y="2254.0">tcp_sen..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="913.0" y="2227.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="916.0" y="2238.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="913.3" y="2227.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="916.3" y="2238.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.04%)</title><rect x="913.8" y="2227.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="916.8" y="2238.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="914.3" y="2227.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.3" y="2238.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="914.5" y="2227.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="917.5" y="2238.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.06%)</title><rect x="914.8" y="2227.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.8" y="2238.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="915.5" y="2227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="918.5" y="2238.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="916.0" y="2227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.0" y="2238.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (257 samples, 5.54%)</title><rect x="916.3" y="2227.0" width="65.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="919.3" y="2238.0">tcp_sen..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="916.8" y="2211.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.8" y="2222.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.11%)</title><rect x="917.1" y="2211.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="920.1" y="2222.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.11%)</title><rect x="917.1" y="2195.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.1" y="2206.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="918.3" y="2211.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="921.3" y="2222.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="918.6" y="2211.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.6" y="2222.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.09%)</title><rect x="919.4" y="2211.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="922.4" y="2222.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.09%)</title><rect x="919.4" y="2195.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="922.4" y="2206.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.24%)</title><rect x="920.4" y="2211.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="923.4" y="2222.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.15%)</title><rect x="921.1" y="2195.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="924.1" y="2206.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.43 (3 samples, 0.06%)</title><rect x="921.1" y="2179.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.1" y="2190.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="921.1" y="2163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="924.1" y="2174.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.04%)</title><rect x="921.4" y="2163.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.4" y="2174.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.09%)</title><rect x="921.9" y="2179.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="924.9" y="2190.0"></text>
</g>
<g>
<title>prefetch_freepointer (1 samples, 0.02%)</title><rect x="922.7" y="2163.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="925.7" y="2174.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="922.9" y="2195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="925.9" y="2206.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="923.2" y="2211.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.2" y="2222.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="923.4" y="2211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.4" y="2222.0"></text>
</g>
<g>
<title>tcp_push (217 samples, 4.68%)</title><rect x="923.7" y="2211.0" width="55.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.7" y="2222.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (216 samples, 4.66%)</title><rect x="923.9" y="2195.0" width="55.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="926.9" y="2206.0">__tcp..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="923.9" y="2179.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="926.9" y="2190.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="924.2" y="2179.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.2" y="2190.0"></text>
</g>
<g>
<title>tcp_write_xmit (214 samples, 4.61%)</title><rect x="924.4" y="2179.0" width="54.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="927.4" y="2190.0">tcp_w..</text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="925.2" y="2163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.2" y="2174.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="925.5" y="2163.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.5" y="2174.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="925.5" y="2147.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.5" y="2158.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.02%)</title><rect x="925.5" y="2131.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="928.5" y="2142.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="925.5" y="2115.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.5" y="2126.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="925.7" y="2163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="928.7" y="2174.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="925.7" y="2147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="928.7" y="2158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="926.0" y="2147.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="929.0" y="2158.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.60 (1 samples, 0.02%)</title><rect x="926.0" y="2131.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="929.0" y="2142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="926.0" y="2115.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.0" y="2126.0"></text>
</g>
<g>
<title>tcp_transmit_skb (207 samples, 4.46%)</title><rect x="926.2" y="2163.0" width="52.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="929.2" y="2174.0">tcp_t..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="926.5" y="2147.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.5" y="2158.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="926.7" y="2147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="929.7" y="2158.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="927.0" y="2147.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="930.0" y="2158.0"></text>
</g>
<g>
<title>ip_queue_xmit (202 samples, 4.35%)</title><rect x="927.2" y="2147.0" width="51.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="930.2" y="2158.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out (200 samples, 4.31%)</title><rect x="927.7" y="2131.0" width="50.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="930.7" y="2142.0">ip_lo..</text>
</g>
<g>
<title>ip_output (199 samples, 4.29%)</title><rect x="927.7" y="2115.0" width="50.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="930.7" y="2126.0">ip_ou..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="928.0" y="2099.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="931.0" y="2110.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="928.3" y="2099.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.3" y="2110.0"></text>
</g>
<g>
<title>ip_finish_output (196 samples, 4.23%)</title><rect x="928.5" y="2099.0" width="49.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="931.5" y="2110.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="928.8" y="2083.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="931.8" y="2094.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="929.3" y="2083.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="932.3" y="2094.0"></text>
</g>
<g>
<title>ip_finish_output2 (192 samples, 4.14%)</title><rect x="929.5" y="2083.0" width="48.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="932.5" y="2094.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (170 samples, 3.66%)</title><rect x="929.8" y="2067.0" width="43.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.8" y="2078.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.17 (170 samples, 3.66%)</title><rect x="929.8" y="2051.0" width="43.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="932.8" y="2062.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (169 samples, 3.64%)</title><rect x="930.0" y="2035.0" width="43.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.0" y="2046.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (169 samples, 3.64%)</title><rect x="930.0" y="2019.0" width="43.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.0" y="2030.0">__so..</text>
</g>
<g>
<title>net_rx_action (165 samples, 3.56%)</title><rect x="931.1" y="2003.0" width="41.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="934.1" y="2014.0">net..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="931.1" y="1987.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.1" y="1998.0"></text>
</g>
<g>
<title>process_backlog (164 samples, 3.54%)</title><rect x="931.3" y="1987.0" width="41.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="934.3" y="1998.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (163 samples, 3.51%)</title><rect x="931.3" y="1971.0" width="41.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="934.3" y="1982.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (163 samples, 3.51%)</title><rect x="931.3" y="1955.0" width="41.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="934.3" y="1966.0">__n..</text>
</g>
<g>
<title>ip_rcv (159 samples, 3.43%)</title><rect x="932.1" y="1939.0" width="40.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.1" y="1950.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="932.3" y="1923.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.3" y="1934.0"></text>
</g>
<g>
<title>ip_rcv_finish (157 samples, 3.38%)</title><rect x="932.6" y="1923.0" width="39.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.6" y="1934.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (154 samples, 3.32%)</title><rect x="933.1" y="1907.0" width="39.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.1" y="1918.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (153 samples, 3.30%)</title><rect x="933.1" y="1891.0" width="38.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="936.1" y="1902.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (149 samples, 3.21%)</title><rect x="934.1" y="1875.0" width="37.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="937.1" y="1886.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="935.1" y="1859.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.1" y="1870.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="935.4" y="1859.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.4" y="1870.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="935.6" y="1859.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="938.6" y="1870.0"></text>
</g>
<g>
<title>tcp_filter (2 samples, 0.04%)</title><rect x="935.9" y="1859.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="938.9" y="1870.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="935.9" y="1843.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="938.9" y="1854.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="935.9" y="1827.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="938.9" y="1838.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.04%)</title><rect x="936.4" y="1859.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="939.4" y="1870.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (138 samples, 2.97%)</title><rect x="936.9" y="1859.0" width="35.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.9" y="1870.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (138 samples, 2.97%)</title><rect x="936.9" y="1843.0" width="35.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="939.9" y="1854.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.15%)</title><rect x="937.9" y="1827.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.9" y="1838.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.09%)</title><rect x="937.9" y="1811.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.9" y="1822.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.06%)</title><rect x="938.9" y="1811.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.9" y="1822.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="938.9" y="1795.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.9" y="1806.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="938.9" y="1779.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.9" y="1790.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="938.9" y="1763.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.9" y="1774.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="939.7" y="1827.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="942.7" y="1838.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="940.0" y="1827.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="943.0" y="1838.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="940.0" y="1811.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.0" y="1822.0"></text>
</g>
<g>
<title>kvm_sched_clock_read (1 samples, 0.02%)</title><rect x="940.0" y="1795.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.0" y="1806.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.22%)</title><rect x="940.2" y="1827.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.2" y="1838.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="940.2" y="1811.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="943.2" y="1822.0"></text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 0.19%)</title><rect x="940.5" y="1811.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.5" y="1822.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.19%)</title><rect x="940.5" y="1795.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="943.5" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.19%)</title><rect x="940.5" y="1779.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="943.5" y="1790.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.45%)</title><rect x="942.8" y="1827.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.8" y="1838.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="943.0" y="1811.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.0" y="1822.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="943.3" y="1811.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.3" y="1822.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="943.5" y="1811.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.5" y="1822.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (17 samples, 0.37%)</title><rect x="943.8" y="1811.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.8" y="1822.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.22%)</title><rect x="944.5" y="1795.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="947.5" y="1806.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.09%)</title><rect x="944.5" y="1779.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.5" y="1790.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="944.5" y="1763.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.5" y="1774.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.06%)</title><rect x="944.8" y="1763.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.8" y="1774.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="945.3" y="1747.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="948.3" y="1758.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.61 (1 samples, 0.02%)</title><rect x="945.3" y="1731.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.3" y="1742.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.13%)</title><rect x="945.6" y="1779.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="948.6" y="1790.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="945.6" y="1763.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="948.6" y="1774.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.11%)</title><rect x="945.8" y="1763.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.8" y="1774.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.06%)</title><rect x="946.1" y="1747.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="949.1" y="1758.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="946.8" y="1747.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="949.8" y="1758.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="946.8" y="1731.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="949.8" y="1742.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="946.8" y="1715.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.8" y="1726.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.61 (1 samples, 0.02%)</title><rect x="946.8" y="1699.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.8" y="1710.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="947.1" y="1795.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.1" y="1806.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="947.3" y="1795.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="950.3" y="1806.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.33 (2 samples, 0.04%)</title><rect x="947.6" y="1795.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="950.6" y="1806.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.02%)</title><rect x="947.8" y="1779.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.8" y="1790.0"></text>
</g>
<g>
<title>tcp_data_queue (94 samples, 2.03%)</title><rect x="948.1" y="1827.0" width="23.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="951.1" y="1838.0">t..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="948.9" y="1811.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="951.9" y="1822.0"></text>
</g>
<g>
<title>sock_def_readable (87 samples, 1.88%)</title><rect x="949.1" y="1811.0" width="22.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="952.1" y="1822.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (84 samples, 1.81%)</title><rect x="949.9" y="1795.0" width="21.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="952.9" y="1806.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (84 samples, 1.81%)</title><rect x="949.9" y="1779.0" width="21.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="952.9" y="1790.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (84 samples, 1.81%)</title><rect x="949.9" y="1763.0" width="21.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="952.9" y="1774.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="971.2" y="1811.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="974.2" y="1822.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="972.0" y="1891.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.0" y="1902.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="972.3" y="1907.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="975.3" y="1918.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="972.5" y="1939.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.5" y="1950.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="972.8" y="1971.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.8" y="1982.0"></text>
</g>
<g>
<title>dev_queue_xmit (21 samples, 0.45%)</title><rect x="973.0" y="2067.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="976.0" y="2078.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.45%)</title><rect x="973.0" y="2051.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="976.0" y="2062.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="974.6" y="2035.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="977.6" y="2046.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.24%)</title><rect x="974.8" y="2035.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.8" y="2046.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.24%)</title><rect x="974.8" y="2019.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="977.8" y="2030.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="974.8" y="2003.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.8" y="2014.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.13%)</title><rect x="975.1" y="2003.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="978.1" y="2014.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.09%)</title><rect x="975.1" y="1987.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="978.1" y="1998.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="976.1" y="1987.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="979.1" y="1998.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="976.1" y="1971.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="979.1" y="1982.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="976.6" y="2003.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="979.6" y="2014.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.06%)</title><rect x="976.8" y="2003.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="979.8" y="2014.0"></text>
</g>
<g>
<title>sk_free (3 samples, 0.06%)</title><rect x="976.8" y="1987.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="979.8" y="1998.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="977.6" y="2035.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="980.6" y="2046.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="977.9" y="2035.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.9" y="2046.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="978.1" y="2035.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="981.1" y="2046.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="978.4" y="2115.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="981.4" y="2126.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="978.6" y="2147.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="981.6" y="2158.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="978.6" y="2131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.6" y="2142.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="978.6" y="2115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="981.6" y="2126.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="978.9" y="2211.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="981.9" y="2222.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.22%)</title><rect x="979.1" y="2211.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.1" y="2222.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="979.4" y="2195.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="982.4" y="2206.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.13%)</title><rect x="979.9" y="2195.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="982.9" y="2206.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="981.2" y="2179.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="984.2" y="2190.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="981.4" y="2195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="984.4" y="2206.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.17%)</title><rect x="981.7" y="2259.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.7" y="2270.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.17%)</title><rect x="981.7" y="2243.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="984.7" y="2254.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.17%)</title><rect x="981.7" y="2227.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="984.7" y="2238.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.17%)</title><rect x="981.7" y="2211.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.7" y="2222.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.02%)</title><rect x="983.5" y="2195.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="986.5" y="2206.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.04%)</title><rect x="983.7" y="2259.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="986.7" y="2270.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="984.2" y="2275.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="987.2" y="2286.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="984.2" y="2259.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="987.2" y="2270.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="984.2" y="2243.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.2" y="2254.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="984.2" y="2227.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="987.2" y="2238.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="984.7" y="2291.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.7" y="2302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.11%)</title><rect x="985.2" y="2435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.2" y="2446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.11%)</title><rect x="985.2" y="2419.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.2" y="2430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.11%)</title><rect x="985.2" y="2403.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.2" y="2414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="986.3" y="2387.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="989.3" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="986.5" y="2435.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="989.5" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="986.5" y="2419.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="989.5" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="986.5" y="2403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.5" y="2414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.get (536 samples, 11.55%)</title><rect x="987.0" y="2451.0" width="136.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.0" y="2462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="987.0" y="2435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.0" y="2446.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="987.0" y="2419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.0" y="2430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (160 samples, 3.45%)</title><rect x="987.3" y="2435.0" width="40.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.3" y="2446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (158 samples, 3.41%)</title><rect x="987.8" y="2419.0" width="40.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.8" y="2430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (2 samples, 0.04%)</title><rect x="988.0" y="2403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.0" y="2414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (155 samples, 3.34%)</title><rect x="988.5" y="2403.0" width="39.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.5" y="2414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (155 samples, 3.34%)</title><rect x="988.5" y="2387.0" width="39.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.5" y="2398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (154 samples, 3.32%)</title><rect x="988.8" y="2371.0" width="39.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.8" y="2382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.02%)</title><rect x="988.8" y="2355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="991.8" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (153 samples, 3.30%)</title><rect x="989.1" y="2355.0" width="38.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.1" y="2366.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.02%)</title><rect x="990.1" y="2339.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.1" y="2350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="990.1" y="2323.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.1" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (148 samples, 3.19%)</title><rect x="990.3" y="2339.0" width="37.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.3" y="2350.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (147 samples, 3.17%)</title><rect x="990.6" y="2323.0" width="37.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.6" y="2334.0">jdk..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="991.3" y="2307.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="994.3" y="2318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.19%)</title><rect x="991.6" y="2307.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="994.6" y="2318.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.09%)</title><rect x="991.8" y="2291.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="994.8" y="2302.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.09%)</title><rect x="992.9" y="2291.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="995.9" y="2302.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="993.9" y="2307.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="996.9" y="2318.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (131 samples, 2.82%)</title><rect x="994.6" y="2307.0" width="33.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="997.6" y="2318.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 2.78%)</title><rect x="995.2" y="2291.0" width="32.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.2" y="2302.0">en..</text>
</g>
<g>
<title>do_syscall_64 (128 samples, 2.76%)</title><rect x="995.2" y="2275.0" width="32.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.2" y="2286.0">do..</text>
</g>
<g>
<title>sys_futex (128 samples, 2.76%)</title><rect x="995.2" y="2259.0" width="32.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.2" y="2270.0">sy..</text>
</g>
<g>
<title>do_futex (127 samples, 2.74%)</title><rect x="995.2" y="2243.0" width="32.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="998.2" y="2254.0">do..</text>
</g>
<g>
<title>futex_wake (122 samples, 2.63%)</title><rect x="995.7" y="2227.0" width="31.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="998.7" y="2238.0">fu..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="996.4" y="2211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.4" y="2222.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="996.7" y="2211.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.7" y="2222.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.13 (1 samples, 0.02%)</title><rect x="996.7" y="2195.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="999.7" y="2206.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.11%)</title><rect x="996.9" y="2211.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.9" y="2222.0"></text>
</g>
<g>
<title>wake_q_add (5 samples, 0.11%)</title><rect x="996.9" y="2195.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="999.9" y="2206.0"></text>
</g>
<g>
<title>wake_up_q (112 samples, 2.41%)</title><rect x="998.2" y="2211.0" width="28.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1001.2" y="2222.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (112 samples, 2.41%)</title><rect x="998.2" y="2195.0" width="28.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1001.2" y="2206.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (112 samples, 2.41%)</title><rect x="998.2" y="2179.0" width="28.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.2" y="2190.0">_r..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1026.7" y="2227.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1029.7" y="2238.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="1027.0" y="2227.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.0" y="2238.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1027.2" y="2227.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1030.2" y="2238.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1027.5" y="2243.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1030.5" y="2254.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1027.7" y="2275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.7" y="2286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.04%)</title><rect x="1028.0" y="2435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.0" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (233 samples, 5.02%)</title><rect x="1028.5" y="2435.0" width="59.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.5" y="2446.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (233 samples, 5.02%)</title><rect x="1028.5" y="2419.0" width="59.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.5" y="2430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (233 samples, 5.02%)</title><rect x="1028.5" y="2403.0" width="59.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.5" y="2414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (232 samples, 5.00%)</title><rect x="1028.7" y="2387.0" width="59.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.7" y="2398.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="1029.0" y="2371.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.0" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="1029.0" y="2355.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.0" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="1029.2" y="2371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.2" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="1029.2" y="2355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.2" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (97 samples, 2.09%)</title><rect x="1029.5" y="2371.0" width="24.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.5" y="2382.0">j..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="1030.0" y="2355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.0" y="2366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.13%)</title><rect x="1030.5" y="2355.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.5" y="2366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="1030.5" y="2339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.5" y="2350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="1030.5" y="2323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.5" y="2334.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.02%)</title><rect x="1030.5" y="2307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.5" y="2318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.11%)</title><rect x="1030.8" y="2339.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.8" y="2350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.11%)</title><rect x="1030.8" y="2323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.8" y="2334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.09%)</title><rect x="1031.0" y="2307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.0" y="2318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.09%)</title><rect x="1031.0" y="2291.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1034.0" y="2302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.06%)</title><rect x="1031.0" y="2275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.0" y="2286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.06%)</title><rect x="1031.0" y="2259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.0" y="2270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="1031.3" y="2243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.3" y="2254.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.02%)</title><rect x="1031.5" y="2243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.5" y="2254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="1031.8" y="2275.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.8" y="2286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17 samples, 0.37%)</title><rect x="1032.0" y="2355.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.0" y="2366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (17 samples, 0.37%)</title><rect x="1032.0" y="2339.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.0" y="2350.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="1032.0" y="2323.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1035.0" y="2334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (16 samples, 0.34%)</title><rect x="1032.3" y="2323.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.3" y="2334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.34%)</title><rect x="1032.3" y="2307.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.3" y="2318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (16 samples, 0.34%)</title><rect x="1032.3" y="2291.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.3" y="2302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (16 samples, 0.34%)</title><rect x="1032.3" y="2275.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.3" y="2286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (14 samples, 0.30%)</title><rect x="1032.5" y="2259.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1035.5" y="2270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (9 samples, 0.19%)</title><rect x="1033.3" y="2243.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1036.3" y="2254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.19%)</title><rect x="1033.3" y="2227.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.3" y="2238.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="1033.6" y="2211.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.6" y="2222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="1033.6" y="2195.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.6" y="2206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1033.6" y="2179.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.6" y="2190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1033.6" y="2163.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.6" y="2174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.13%)</title><rect x="1033.8" y="2211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.8" y="2222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.13%)</title><rect x="1033.8" y="2195.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.8" y="2206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.13%)</title><rect x="1033.8" y="2179.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.8" y="2190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.13%)</title><rect x="1033.8" y="2163.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1036.8" y="2174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.13%)</title><rect x="1033.8" y="2147.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.8" y="2158.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="1034.1" y="2131.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1037.1" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$28/1627428162.test (3 samples, 0.06%)</title><rect x="1034.6" y="2131.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.6" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$28/1627428162.test (1 samples, 0.02%)</title><rect x="1035.3" y="2211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.3" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.02%)</title><rect x="1035.3" y="2195.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.3" y="2206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.02%)</title><rect x="1035.3" y="2179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.3" y="2190.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (2 samples, 0.04%)</title><rect x="1035.6" y="2243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.6" y="2254.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1036.1" y="2259.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1039.1" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.04%)</title><rect x="1036.4" y="2355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.4" y="2366.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="1036.4" y="2339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.4" y="2350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="1036.4" y="2323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.4" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (65 samples, 1.40%)</title><rect x="1036.9" y="2355.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.9" y="2366.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (65 samples, 1.40%)</title><rect x="1036.9" y="2339.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.9" y="2350.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="1036.9" y="2323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.9" y="2334.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1036.9" y="2307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.9" y="2318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1036.9" y="2291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1039.9" y="2302.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (63 samples, 1.36%)</title><rect x="1037.4" y="2323.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.4" y="2334.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1037.6" y="2307.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1040.6" y="2318.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.06%)</title><rect x="1037.9" y="2307.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1040.9" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1038.4" y="2291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1041.4" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1038.4" y="2275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1041.4" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1038.4" y="2259.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1041.4" y="2270.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (34 samples, 0.73%)</title><rect x="1038.7" y="2307.0" width="8.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1041.7" y="2318.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="1039.4" y="2291.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1042.4" y="2302.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.02%)</title><rect x="1039.7" y="2291.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.7" y="2302.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.04%)</title><rect x="1039.9" y="2291.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1042.9" y="2302.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (2 samples, 0.04%)</title><rect x="1039.9" y="2275.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1042.9" y="2286.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.06%)</title><rect x="1040.4" y="2291.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.4" y="2302.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="1040.7" y="2275.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1043.7" y="2286.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.02%)</title><rect x="1040.9" y="2275.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1043.9" y="2286.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="1040.9" y="2259.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1043.9" y="2270.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="1041.2" y="2291.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1044.2" y="2302.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="1041.5" y="2291.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1044.5" y="2302.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.04%)</title><rect x="1041.7" y="2291.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1044.7" y="2302.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="1042.2" y="2291.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1045.2" y="2302.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="1042.5" y="2291.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1045.5" y="2302.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (2 samples, 0.04%)</title><rect x="1042.7" y="2291.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1045.7" y="2302.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.15%)</title><rect x="1043.2" y="2291.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1046.2" y="2302.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="1043.2" y="2275.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.2" y="2286.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.06%)</title><rect x="1043.7" y="2275.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.7" y="2286.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="1043.7" y="2259.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.7" y="2270.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="1044.0" y="2243.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.0" y="2254.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="1044.2" y="2259.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.2" y="2270.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.04%)</title><rect x="1044.5" y="2275.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.5" y="2286.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (9 samples, 0.19%)</title><rect x="1045.0" y="2291.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.0" y="2302.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.04%)</title><rect x="1045.3" y="2275.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1048.3" y="2286.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.11%)</title><rect x="1045.8" y="2275.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1048.8" y="2286.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.09%)</title><rect x="1046.0" y="2259.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1049.0" y="2270.0"></text>
</g>
<g>
<title>nmethod::metadata_addr_at(int) const (1 samples, 0.02%)</title><rect x="1047.0" y="2275.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1050.0" y="2286.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.04%)</title><rect x="1047.3" y="2307.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1050.3" y="2318.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.02%)</title><rect x="1047.8" y="2307.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1050.8" y="2318.0"></text>
</g>
<g>
<title>Method::is_method() const volatile (1 samples, 0.02%)</title><rect x="1048.1" y="2307.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1051.1" y="2318.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="1048.3" y="2307.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1051.3" y="2318.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.02%)</title><rect x="1048.6" y="2307.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1051.6" y="2318.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (16 samples, 0.34%)</title><rect x="1048.8" y="2307.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.8" y="2318.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (14 samples, 0.30%)</title><rect x="1049.3" y="2291.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.3" y="2302.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1050.1" y="2275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1053.1" y="2286.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1050.1" y="2259.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1053.1" y="2270.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1050.1" y="2243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1053.1" y="2254.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1050.1" y="2227.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1053.1" y="2238.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1050.1" y="2211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1053.1" y="2222.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="1050.1" y="2195.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1053.1" y="2206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1050.1" y="2179.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1053.1" y="2190.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="1050.4" y="2275.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.4" y="2286.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="1050.4" y="2259.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.4" y="2270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1050.4" y="2243.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.4" y="2254.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (9 samples, 0.19%)</title><rect x="1050.6" y="2275.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.6" y="2286.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (9 samples, 0.19%)</title><rect x="1050.6" y="2259.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.6" y="2270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (9 samples, 0.19%)</title><rect x="1050.6" y="2243.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.6" y="2254.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (9 samples, 0.19%)</title><rect x="1050.6" y="2227.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.6" y="2238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (9 samples, 0.19%)</title><rect x="1050.6" y="2211.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.6" y="2222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1052.4" y="2195.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1055.4" y="2206.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1052.6" y="2195.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1055.6" y="2206.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.04%)</title><rect x="1052.9" y="2307.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.9" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.02%)</title><rect x="1053.4" y="2355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.4" y="2366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="1053.4" y="2339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.4" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.02%)</title><rect x="1053.7" y="2355.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.7" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1053.9" y="2355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1056.9" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1053.9" y="2339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1056.9" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1053.9" y="2323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1056.9" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (13 samples, 0.28%)</title><rect x="1054.2" y="2371.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.2" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1054.7" y="2355.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.7" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="1054.7" y="2339.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.7" y="2350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="1054.7" y="2323.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1057.7" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.02%)</title><rect x="1054.7" y="2307.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.7" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.02%)</title><rect x="1054.7" y="2291.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.7" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (10 samples, 0.22%)</title><rect x="1054.9" y="2355.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1057.9" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (10 samples, 0.22%)</title><rect x="1054.9" y="2339.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.9" y="2350.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.04%)</title><rect x="1055.4" y="2323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.4" y="2334.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.04%)</title><rect x="1055.4" y="2307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.4" y="2318.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.04%)</title><rect x="1055.4" y="2291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1058.4" y="2302.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.06%)</title><rect x="1055.9" y="2323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.9" y="2334.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.04%)</title><rect x="1055.9" y="2307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.9" y="2318.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.04%)</title><rect x="1055.9" y="2291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.9" y="2302.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.04%)</title><rect x="1055.9" y="2275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.9" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.04%)</title><rect x="1055.9" y="2259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.9" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (2 samples, 0.04%)</title><rect x="1055.9" y="2243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.9" y="2254.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (2 samples, 0.04%)</title><rect x="1055.9" y="2227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.9" y="2238.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (2 samples, 0.04%)</title><rect x="1055.9" y="2211.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.9" y="2222.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (2 samples, 0.04%)</title><rect x="1055.9" y="2195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.9" y="2206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (2 samples, 0.04%)</title><rect x="1055.9" y="2179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.9" y="2190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.02%)</title><rect x="1056.5" y="2307.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.5" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.04%)</title><rect x="1056.7" y="2323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.7" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1057.2" y="2323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1060.2" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1057.2" y="2307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1060.2" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1057.2" y="2291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1060.2" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (119 samples, 2.57%)</title><rect x="1057.5" y="2371.0" width="30.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.5" y="2382.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (115 samples, 2.48%)</title><rect x="1057.5" y="2355.0" width="29.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.5" y="2366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (115 samples, 2.48%)</title><rect x="1057.5" y="2339.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.5" y="2350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="1057.5" y="2323.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.5" y="2334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (114 samples, 2.46%)</title><rect x="1057.7" y="2323.0" width="29.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.7" y="2334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (113 samples, 2.44%)</title><rect x="1058.0" y="2307.0" width="28.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.0" y="2318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (111 samples, 2.39%)</title><rect x="1058.0" y="2291.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.0" y="2302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (111 samples, 2.39%)</title><rect x="1058.0" y="2275.0" width="28.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.0" y="2286.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (108 samples, 2.33%)</title><rect x="1058.7" y="2259.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.7" y="2270.0">j..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="1059.0" y="2243.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1062.0" y="2254.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.17%)</title><rect x="1059.3" y="2243.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1062.3" y="2254.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1059.8" y="2227.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1062.8" y="2238.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="1060.0" y="2227.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1063.0" y="2238.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="1060.3" y="2227.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1063.3" y="2238.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="1060.5" y="2227.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.5" y="2238.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1060.8" y="2227.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1063.8" y="2238.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="1061.0" y="2227.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1064.0" y="2238.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1061.3" y="2243.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1064.3" y="2254.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (97 samples, 2.09%)</title><rect x="1061.5" y="2243.0" width="24.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1064.5" y="2254.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (94 samples, 2.03%)</title><rect x="1062.3" y="2227.0" width="23.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1065.3" y="2238.0">e..</text>
</g>
<g>
<title>do_syscall_64 (92 samples, 1.98%)</title><rect x="1062.3" y="2211.0" width="23.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1065.3" y="2222.0">d..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1063.8" y="2195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.8" y="2206.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1063.8" y="2179.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1066.8" y="2190.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="1063.8" y="2163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1066.8" y="2174.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1063.8" y="2147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.8" y="2158.0"></text>
</g>
<g>
<title>sys_futex (85 samples, 1.83%)</title><rect x="1064.1" y="2195.0" width="21.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1067.1" y="2206.0">s..</text>
</g>
<g>
<title>do_futex (84 samples, 1.81%)</title><rect x="1064.1" y="2179.0" width="21.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1067.1" y="2190.0">d..</text>
</g>
<g>
<title>futex_wake (83 samples, 1.79%)</title><rect x="1064.3" y="2163.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.3" y="2174.0">f..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1064.9" y="2147.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1067.9" y="2158.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="1065.1" y="2147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1068.1" y="2158.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.04%)</title><rect x="1065.4" y="2147.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.4" y="2158.0"></text>
</g>
<g>
<title>wake_up_q (77 samples, 1.66%)</title><rect x="1065.9" y="2147.0" width="19.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1068.9" y="2158.0"></text>
</g>
<g>
<title>try_to_wake_up (77 samples, 1.66%)</title><rect x="1065.9" y="2131.0" width="19.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1068.9" y="2142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (77 samples, 1.66%)</title><rect x="1065.9" y="2115.0" width="19.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1068.9" y="2126.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1085.5" y="2179.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1088.5" y="2190.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.04%)</title><rect x="1085.7" y="2211.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1088.7" y="2222.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.04%)</title><rect x="1086.2" y="2291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.2" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (4 samples, 0.09%)</title><rect x="1086.7" y="2355.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.7" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.09%)</title><rect x="1086.7" y="2339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.7" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.09%)</title><rect x="1086.7" y="2323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.7" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="1087.0" y="2307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.0" y="2318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="1087.0" y="2291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.0" y="2302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/ClustersNodes.isMe (1 samples, 0.02%)</title><rect x="1087.7" y="2435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.7" y="2446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/HtttRequestBuilder.createGetHttpRequest (40 samples, 0.86%)</title><rect x="1088.0" y="2435.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.0" y="2446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (16 samples, 0.34%)</title><rect x="1088.0" y="2419.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.0" y="2430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (16 samples, 0.34%)</title><rect x="1088.0" y="2403.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.0" y="2414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.30%)</title><rect x="1088.3" y="2387.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.3" y="2398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.30%)</title><rect x="1088.3" y="2371.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.3" y="2382.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="1088.5" y="2355.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1091.5" y="2366.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (10 samples, 0.22%)</title><rect x="1089.3" y="2355.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.3" y="2366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (6 samples, 0.13%)</title><rect x="1089.8" y="2339.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.8" y="2350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.13%)</title><rect x="1089.8" y="2323.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.8" y="2334.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.11%)</title><rect x="1089.8" y="2307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.8" y="2318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$111/1468709455.accept (2 samples, 0.04%)</title><rect x="1090.3" y="2291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.3" y="2302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.04%)</title><rect x="1090.3" y="2275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.3" y="2286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$27/1300393335.test (1 samples, 0.02%)</title><rect x="1090.5" y="2259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.5" y="2270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.02%)</title><rect x="1090.5" y="2243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.5" y="2254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="1090.5" y="2227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.5" y="2238.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.02%)</title><rect x="1090.5" y="2211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.5" y="2222.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="1090.5" y="2195.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.5" y="2206.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="1090.5" y="2179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.5" y="2190.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="1090.5" y="2163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.5" y="2174.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1090.5" y="2147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.5" y="2158.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1090.5" y="2131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.5" y="2142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="1090.5" y="2115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.5" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$27/1300393335.test (1 samples, 0.02%)</title><rect x="1090.8" y="2291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.8" y="2302.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1091.1" y="2307.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1094.1" y="2318.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.04%)</title><rect x="1091.3" y="2339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.3" y="2350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$107/255257563.accept (1 samples, 0.02%)</title><rect x="1091.6" y="2323.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.6" y="2334.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="1091.8" y="2387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.8" y="2398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/HtttRequestBuilder.requestTemplate (24 samples, 0.52%)</title><rect x="1092.1" y="2419.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.1" y="2430.0"></text>
</g>
<g>
<title>java/net/URI.create (14 samples, 0.30%)</title><rect x="1092.1" y="2403.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.1" y="2414.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (14 samples, 0.30%)</title><rect x="1092.1" y="2387.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.1" y="2398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (14 samples, 0.30%)</title><rect x="1092.1" y="2371.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.1" y="2382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (5 samples, 0.11%)</title><rect x="1092.1" y="2355.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.1" y="2366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (5 samples, 0.11%)</title><rect x="1092.1" y="2339.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.1" y="2350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.11%)</title><rect x="1092.1" y="2323.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.1" y="2334.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1092.8" y="2307.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1095.8" y="2318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1093.1" y="2307.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1096.1" y="2318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (9 samples, 0.19%)</title><rect x="1093.3" y="2355.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.3" y="2366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.02%)</title><rect x="1093.6" y="2339.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.6" y="2350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="1093.6" y="2323.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.6" y="2334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (7 samples, 0.15%)</title><rect x="1093.8" y="2339.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.8" y="2350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.06%)</title><rect x="1093.8" y="2323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.8" y="2334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.02%)</title><rect x="1093.8" y="2307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.8" y="2318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="1093.8" y="2291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.8" y="2302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1093.8" y="2275.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1096.8" y="2286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1093.8" y="2259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1096.8" y="2270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1093.8" y="2243.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1096.8" y="2254.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.04%)</title><rect x="1094.1" y="2307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.1" y="2318.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1094.1" y="2291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.1" y="2302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1094.1" y="2275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.1" y="2286.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="1094.4" y="2291.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1097.4" y="2302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.09%)</title><rect x="1094.6" y="2323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.6" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (8 samples, 0.17%)</title><rect x="1095.6" y="2403.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.6" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (8 samples, 0.17%)</title><rect x="1095.6" y="2387.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1098.6" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (6 samples, 0.13%)</title><rect x="1095.6" y="2371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.6" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$27/1300393335.test (6 samples, 0.13%)</title><rect x="1095.6" y="2355.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.6" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.13%)</title><rect x="1095.6" y="2339.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.6" y="2350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.13%)</title><rect x="1095.6" y="2323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.6" y="2334.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.13%)</title><rect x="1095.6" y="2307.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.6" y="2318.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.13%)</title><rect x="1095.6" y="2291.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.6" y="2302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1096.4" y="2275.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.4" y="2286.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="1096.6" y="2275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.6" y="2286.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="1096.6" y="2259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.6" y="2270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1096.9" y="2243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.9" y="2254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1096.9" y="2227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.9" y="2238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="1096.9" y="2211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1099.9" y="2222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.04%)</title><rect x="1097.2" y="2371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.2" y="2382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1097.4" y="2355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.4" y="2366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1097.4" y="2339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.4" y="2350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="1097.4" y="2323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.4" y="2334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="1097.4" y="2307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.4" y="2318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="1097.4" y="2291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1100.4" y="2302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.04%)</title><rect x="1097.7" y="2403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.7" y="2414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.04%)</title><rect x="1097.7" y="2387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1100.7" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.04%)</title><rect x="1097.7" y="2371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1100.7" y="2382.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="1097.7" y="2355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.7" y="2366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.countAckForGetMthod (79 samples, 1.70%)</title><rect x="1098.2" y="2435.0" width="20.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.2" y="2446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (75 samples, 1.62%)</title><rect x="1099.2" y="2419.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.2" y="2430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (75 samples, 1.62%)</title><rect x="1099.2" y="2403.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.2" y="2414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="1100.2" y="2387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.2" y="2398.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (69 samples, 1.49%)</title><rect x="1100.7" y="2387.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.7" y="2398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (69 samples, 1.49%)</title><rect x="1100.7" y="2371.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.7" y="2382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isReleasable (4 samples, 0.09%)</title><rect x="1100.7" y="2355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.7" y="2366.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.09%)</title><rect x="1100.7" y="2339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.7" y="2350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 1.34%)</title><rect x="1101.7" y="2355.0" width="15.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.7" y="2366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 1.34%)</title><rect x="1101.7" y="2339.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.7" y="2350.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.50%)</title><rect x="1102.0" y="2323.0" width="5.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1105.0" y="2334.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1102.2" y="2307.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.2" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1102.2" y="2291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1105.2" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1102.2" y="2275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1105.2" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1102.2" y="2259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1105.2" y="2270.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="1102.5" y="2307.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.5" y="2318.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.17%)</title><rect x="1102.8" y="2307.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.8" y="2318.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="1103.8" y="2291.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1106.8" y="2302.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="1104.0" y="2275.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.0" y="2286.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="1104.3" y="2291.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1107.3" y="2302.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1104.5" y="2291.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1107.5" y="2302.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.15%)</title><rect x="1104.8" y="2307.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1107.8" y="2318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="1105.6" y="2291.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1108.6" y="2302.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.09%)</title><rect x="1105.6" y="2275.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1108.6" y="2286.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1106.3" y="2259.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.3" y="2270.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1106.3" y="2243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1109.3" y="2254.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1106.3" y="2227.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.3" y="2238.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1106.6" y="2307.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1109.6" y="2318.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1106.8" y="2307.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1109.8" y="2318.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.04%)</title><rect x="1107.1" y="2307.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1110.1" y="2318.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1107.6" y="2307.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1110.6" y="2318.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.78%)</title><rect x="1107.8" y="2323.0" width="9.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1110.8" y="2334.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="1107.8" y="2307.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1110.8" y="2318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1107.8" y="2291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1110.8" y="2302.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1107.8" y="2275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1110.8" y="2286.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1107.8" y="2259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1110.8" y="2270.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1107.8" y="2243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1110.8" y="2254.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1107.8" y="2227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1110.8" y="2238.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1107.8" y="2211.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1110.8" y="2222.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1107.8" y="2195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1110.8" y="2206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1107.8" y="2179.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1110.8" y="2190.0"></text>
</g>
<g>
<title>__pthread_cond_wait (34 samples, 0.73%)</title><rect x="1108.1" y="2307.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1111.1" y="2318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.63%)</title><rect x="1109.4" y="2291.0" width="7.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1112.4" y="2302.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.63%)</title><rect x="1109.4" y="2275.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1112.4" y="2286.0"></text>
</g>
<g>
<title>sys_futex (26 samples, 0.56%)</title><rect x="1110.1" y="2259.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1113.1" y="2270.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.54%)</title><rect x="1110.4" y="2243.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1113.4" y="2254.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 0.52%)</title><rect x="1110.6" y="2227.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.6" y="2238.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.39%)</title><rect x="1110.6" y="2211.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1113.6" y="2222.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.37%)</title><rect x="1110.9" y="2195.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1113.9" y="2206.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.37%)</title><rect x="1110.9" y="2179.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1113.9" y="2190.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.34%)</title><rect x="1111.1" y="2163.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1114.1" y="2174.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.09%)</title><rect x="1115.2" y="2211.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1118.2" y="2222.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="1116.0" y="2195.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.0" y="2206.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1116.2" y="2211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1119.2" y="2222.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1116.5" y="2211.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1119.5" y="2222.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="1116.7" y="2307.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1119.7" y="2318.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="1117.0" y="2323.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.0" y="2334.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="1117.3" y="2323.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1120.3" y="2334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="1117.5" y="2355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.5" y="2366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.processResponcessFromGetRequest (20 samples, 0.43%)</title><rect x="1118.3" y="2435.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.3" y="2446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.mergeRecords (9 samples, 0.19%)</title><rect x="1118.5" y="2419.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.5" y="2430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="1118.5" y="2403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.5" y="2414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="1118.5" y="2387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.5" y="2398.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.02%)</title><rect x="1118.5" y="2371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.5" y="2382.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.characteristics (1 samples, 0.02%)</title><rect x="1118.5" y="2355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.5" y="2366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (8 samples, 0.17%)</title><rect x="1118.8" y="2403.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.8" y="2414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (8 samples, 0.17%)</title><rect x="1118.8" y="2387.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.8" y="2398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.15%)</title><rect x="1118.8" y="2371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.8" y="2382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.15%)</title><rect x="1118.8" y="2355.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.8" y="2366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.15%)</title><rect x="1118.8" y="2339.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.8" y="2350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.15%)</title><rect x="1118.8" y="2323.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1121.8" y="2334.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (4 samples, 0.09%)</title><rect x="1118.8" y="2307.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.8" y="2318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.06%)</title><rect x="1119.0" y="2291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.0" y="2302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (2 samples, 0.04%)</title><rect x="1119.3" y="2275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.3" y="2286.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$306/1631148927.apply (1 samples, 0.02%)</title><rect x="1119.5" y="2259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.5" y="2270.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.02%)</title><rect x="1119.5" y="2243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.5" y="2254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$305/529401364.compare (1 samples, 0.02%)</title><rect x="1119.5" y="2227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.5" y="2238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.02%)</title><rect x="1119.5" y="2211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.5" y="2222.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.02%)</title><rect x="1119.5" y="2195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.5" y="2206.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="1119.8" y="2307.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.8" y="2318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="1119.8" y="2291.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="2302.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.02%)</title><rect x="1119.8" y="2275.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.8" y="2286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="1120.0" y="2307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.0" y="2318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.begin (1 samples, 0.02%)</title><rect x="1120.0" y="2291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.0" y="2302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.02%)</title><rect x="1120.3" y="2307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.3" y="2318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1120.3" y="2291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.3" y="2302.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1120.3" y="2275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1123.3" y="2286.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1120.3" y="2259.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1123.3" y="2270.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.02%)</title><rect x="1120.6" y="2371.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.6" y="2382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.getResponse (10 samples, 0.22%)</title><rect x="1120.8" y="2419.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1123.8" y="2430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.getValueInByteFormat (3 samples, 0.06%)</title><rect x="1121.1" y="2403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.1" y="2414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1121.3" y="2387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.3" y="2398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1121.3" y="2371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.3" y="2382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1121.3" y="2355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.3" y="2366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1121.3" y="2339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.3" y="2350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1121.3" y="2323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.3" y="2334.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1121.3" y="2307.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1124.3" y="2318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1121.6" y="2323.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.6" y="2334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1121.6" y="2307.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.6" y="2318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1121.6" y="2291.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.6" y="2302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RecordTimestamp.toBytes (6 samples, 0.13%)</title><rect x="1121.8" y="2403.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.8" y="2414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="1121.8" y="2387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1124.8" y="2398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1121.8" y="2371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.8" y="2382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1121.8" y="2355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.8" y="2366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1122.1" y="2339.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.1" y="2350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1122.1" y="2323.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.1" y="2334.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1122.1" y="2307.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1125.1" y="2318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.06%)</title><rect x="1122.3" y="2387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.3" y="2398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1122.3" y="2371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.3" y="2382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1122.3" y="2355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.3" y="2366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1122.6" y="2339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.6" y="2350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="1122.6" y="2323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.6" y="2334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="1122.6" y="2307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.6" y="2318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="1122.6" y="2291.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.6" y="2302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (1 samples, 0.02%)</title><rect x="1123.1" y="2387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.1" y="2398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putLongUnaligned (1 samples, 0.02%)</title><rect x="1123.1" y="2371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.1" y="2382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.02%)</title><rect x="1123.1" y="2355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.1" y="2366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.upsert (12 samples, 0.26%)</title><rect x="1123.4" y="2451.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.4" y="2462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1123.6" y="2435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.6" y="2446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1123.6" y="2419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.6" y="2430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$316/1191156855.get$Lambda (1 samples, 0.02%)</title><rect x="1123.6" y="2403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.6" y="2414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators$$Lambda$316/1191156855.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1123.6" y="2387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.6" y="2398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.13%)</title><rect x="1123.9" y="2435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.9" y="2446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.11%)</title><rect x="1124.1" y="2419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.1" y="2430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="1124.1" y="2403.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.1" y="2414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="1124.1" y="2387.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.1" y="2398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1124.6" y="2371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.6" y="2382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1124.6" y="2355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.6" y="2366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.02%)</title><rect x="1124.6" y="2339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.6" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1124.9" y="2355.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.9" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1124.9" y="2339.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1127.9" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1124.9" y="2323.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.9" y="2334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/luckydaemon/RequestCoordinators.processResponcessFromGetRequest (1 samples, 0.02%)</title><rect x="1125.1" y="2371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.1" y="2382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="1125.4" y="2435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.4" y="2446.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1125.6" y="2419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.6" y="2430.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1125.6" y="2403.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1128.6" y="2414.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1125.9" y="2435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.9" y="2446.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (14 samples, 0.30%)</title><rect x="1126.4" y="2499.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.4" y="2510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.30%)</title><rect x="1126.4" y="2483.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.4" y="2494.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.17%)</title><rect x="1126.4" y="2467.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.4" y="2478.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.06%)</title><rect x="1126.4" y="2451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.4" y="2462.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.11%)</title><rect x="1127.2" y="2451.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1130.2" y="2462.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.13%)</title><rect x="1128.4" y="2467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.4" y="2478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.13%)</title><rect x="1128.4" y="2451.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.4" y="2462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (6 samples, 0.13%)</title><rect x="1128.4" y="2435.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.4" y="2446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.13%)</title><rect x="1130.0" y="2531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.0" y="2542.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="2515.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.0" y="2526.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1130.0" y="2499.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.0" y="2510.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1130.0" y="2483.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.0" y="2494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1130.0" y="2467.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.0" y="2478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1130.2" y="2515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.2" y="2526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="1130.2" y="2499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.2" y="2510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.06%)</title><rect x="1130.7" y="2515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.7" y="2526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="1131.2" y="2499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.2" y="2510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.09%)</title><rect x="1131.5" y="2531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.5" y="2542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1132.0" y="2515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.0" y="2526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1132.0" y="2499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.0" y="2510.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1132.3" y="2483.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1135.3" y="2494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.15%)</title><rect x="1132.5" y="2531.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.5" y="2542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="1133.8" y="2515.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.8" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1134.0" y="2515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1137.0" y="2526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1134.0" y="2499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.0" y="2510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1134.0" y="2483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1137.0" y="2494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.04%)</title><rect x="1134.3" y="2547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.3" y="2558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (65 samples, 1.40%)</title><rect x="1134.8" y="2547.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.8" y="2558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (59 samples, 1.27%)</title><rect x="1135.3" y="2531.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.3" y="2542.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="1135.6" y="2515.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1138.6" y="2526.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.43%)</title><rect x="1135.8" y="2515.0" width="5.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1138.8" y="2526.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.43%)</title><rect x="1135.8" y="2499.0" width="5.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1138.8" y="2510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.39%)</title><rect x="1135.8" y="2483.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1138.8" y="2494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="1136.1" y="2467.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.1" y="2478.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="1136.8" y="2467.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1139.8" y="2478.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="1137.1" y="2467.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1140.1" y="2478.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.24%)</title><rect x="1137.3" y="2467.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1140.3" y="2478.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.04%)</title><rect x="1137.6" y="2451.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1140.6" y="2462.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.04%)</title><rect x="1138.1" y="2451.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.1" y="2462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="1138.6" y="2451.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.6" y="2462.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.11%)</title><rect x="1138.9" y="2451.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1141.9" y="2462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1139.9" y="2435.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.9" y="2446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1139.9" y="2419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.9" y="2430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1139.9" y="2403.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.9" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1140.1" y="2467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1143.1" y="2478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1140.1" y="2451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1143.1" y="2462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1140.1" y="2435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1143.1" y="2446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="1140.4" y="2483.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1143.4" y="2494.0"></text>
</g>
<g>
<title>recv (1 samples, 0.02%)</title><rect x="1140.7" y="2483.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1143.7" y="2494.0"></text>
</g>
<g>
<title>recv (37 samples, 0.80%)</title><rect x="1140.9" y="2515.0" width="9.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1143.9" y="2526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.71%)</title><rect x="1141.9" y="2499.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1144.9" y="2510.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.71%)</title><rect x="1141.9" y="2483.0" width="8.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1144.9" y="2494.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.02%)</title><rect x="1142.7" y="2467.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.7" y="2478.0"></text>
</g>
<g>
<title>sys_recvfrom (29 samples, 0.63%)</title><rect x="1142.9" y="2467.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.9" y="2478.0"></text>
</g>
<g>
<title>SYSC_recvfrom (28 samples, 0.60%)</title><rect x="1142.9" y="2451.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1145.9" y="2462.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.04%)</title><rect x="1142.9" y="2435.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.9" y="2446.0"></text>
</g>
<g>
<title>sock_recvmsg (23 samples, 0.50%)</title><rect x="1143.5" y="2435.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.5" y="2446.0"></text>
</g>
<g>
<title>inet_recvmsg (21 samples, 0.45%)</title><rect x="1143.7" y="2419.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.7" y="2430.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1144.0" y="2403.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1147.0" y="2414.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="1144.2" y="2403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1147.2" y="2414.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="1144.7" y="2403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1147.7" y="2414.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.34%)</title><rect x="1145.0" y="2403.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1148.0" y="2414.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1145.2" y="2387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.2" y="2398.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1145.2" y="2371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1148.2" y="2382.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="1145.2" y="2355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.2" y="2366.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1145.5" y="2387.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1148.5" y="2398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="1145.5" y="2371.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.5" y="2382.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="1145.5" y="2355.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.5" y="2366.0"></text>
</g>
<g>
<title>kvm_wait (1 samples, 0.02%)</title><rect x="1145.5" y="2339.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1148.5" y="2350.0"></text>
</g>
<g>
<title>native_safe_halt (1 samples, 0.02%)</title><rect x="1145.5" y="2323.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.5" y="2334.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1145.7" y="2387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.7" y="2398.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.13%)</title><rect x="1146.2" y="2387.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.2" y="2398.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="1146.8" y="2371.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1149.8" y="2382.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="1147.0" y="2371.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1150.0" y="2382.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="1147.0" y="2355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1150.0" y="2366.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1147.3" y="2355.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.3" y="2366.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="1147.5" y="2371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.5" y="2382.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="1147.8" y="2387.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1150.8" y="2398.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1148.0" y="2371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.0" y="2382.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.06%)</title><rect x="1148.3" y="2387.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.3" y="2398.0"></text>
</g>
<g>
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1148.8" y="2371.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1151.8" y="2382.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.02%)</title><rect x="1148.8" y="2355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1151.8" y="2366.0"></text>
</g>
<g>
<title>pvclock_clocksource_read (1 samples, 0.02%)</title><rect x="1148.8" y="2339.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1151.8" y="2350.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1149.0" y="2419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1152.0" y="2430.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1149.0" y="2403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1152.0" y="2414.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1149.0" y="2387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1152.0" y="2398.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1149.0" y="2371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1152.0" y="2382.0"></text>
</g>
<g>
<title>aa_label_sk_perm (1 samples, 0.02%)</title><rect x="1149.0" y="2355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1152.0" y="2366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="1149.3" y="2435.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1152.3" y="2446.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="1149.3" y="2419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1152.3" y="2430.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1149.3" y="2403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1152.3" y="2414.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1149.3" y="2387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.3" y="2398.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="1149.6" y="2419.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1152.6" y="2430.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="1150.1" y="2451.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1153.1" y="2462.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (4 samples, 0.09%)</title><rect x="1150.3" y="2531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.3" y="2542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.02%)</title><rect x="1151.1" y="2515.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.1" y="2526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1151.3" y="2563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1154.3" y="2574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1151.3" y="2547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.3" y="2558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1151.3" y="2531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.3" y="2542.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="1151.6" y="2595.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.6" y="2606.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="1151.8" y="2595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.8" y="2606.0"></text>
</g>
<g>
<title>start_thread (149 samples, 3.21%)</title><rect x="1152.1" y="2595.0" width="37.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1155.1" y="2606.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (149 samples, 3.21%)</title><rect x="1152.1" y="2579.0" width="37.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1155.1" y="2590.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (149 samples, 3.21%)</title><rect x="1152.1" y="2563.0" width="37.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.1" y="2574.0">Thr..</text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.09%)</title><rect x="1152.1" y="2547.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.1" y="2558.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.06%)</title><rect x="1152.1" y="2531.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.1" y="2542.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.1" y="2515.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.1" y="2526.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.1" y="2499.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.1" y="2510.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.1" y="2483.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.1" y="2494.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.1" y="2467.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.1" y="2478.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.1" y="2451.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.1" y="2462.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.02%)</title><rect x="1152.1" y="2435.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.1" y="2446.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (1 samples, 0.02%)</title><rect x="1152.1" y="2419.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.1" y="2430.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.4" y="2515.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1155.4" y="2526.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="1152.4" y="2499.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.4" y="2510.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1152.4" y="2483.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.4" y="2494.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.6" y="2515.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.6" y="2526.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="1152.6" y="2499.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.6" y="2510.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.02%)</title><rect x="1152.6" y="2483.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.6" y="2494.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1152.9" y="2531.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1155.9" y="2542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1152.9" y="2515.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.9" y="2526.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1152.9" y="2499.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.9" y="2510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.02%)</title><rect x="1152.9" y="2483.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1155.9" y="2494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1152.9" y="2467.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1155.9" y="2478.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1152.9" y="2451.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1155.9" y="2462.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1152.9" y="2435.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.9" y="2446.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1152.9" y="2419.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.9" y="2430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1152.9" y="2403.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.9" y="2414.0"></text>
</g>
<g>
<title>JavaThread::run() (143 samples, 3.08%)</title><rect x="1153.1" y="2547.0" width="36.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.1" y="2558.0">Jav..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (143 samples, 3.08%)</title><rect x="1153.1" y="2531.0" width="36.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.1" y="2542.0">Jav..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (142 samples, 3.06%)</title><rect x="1153.1" y="2515.0" width="36.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.1" y="2526.0">Com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (141 samples, 3.04%)</title><rect x="1153.1" y="2499.0" width="35.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.1" y="2510.0">Com..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (140 samples, 3.02%)</title><rect x="1153.1" y="2483.0" width="35.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.1" y="2494.0">C2C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (140 samples, 3.02%)</title><rect x="1153.1" y="2467.0" width="35.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.1" y="2478.0">Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (83 samples, 1.79%)</title><rect x="1153.1" y="2451.0" width="21.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.1" y="2462.0">C..</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.04%)</title><rect x="1153.1" y="2435.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.1" y="2446.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.04%)</title><rect x="1153.1" y="2419.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.1" y="2430.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1153.1" y="2403.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.1" y="2414.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1153.1" y="2387.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1156.1" y="2398.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.02%)</title><rect x="1153.4" y="2403.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.4" y="2414.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.02%)</title><rect x="1153.4" y="2387.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.4" y="2398.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.11%)</title><rect x="1153.6" y="2435.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.6" y="2446.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.11%)</title><rect x="1153.6" y="2419.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.6" y="2430.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="1153.9" y="2403.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.9" y="2414.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.06%)</title><rect x="1154.1" y="2403.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.1" y="2414.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.06%)</title><rect x="1154.1" y="2387.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.1" y="2398.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1154.1" y="2371.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.1" y="2382.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="1154.1" y="2355.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.1" y="2366.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="1154.1" y="2339.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.1" y="2350.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="1154.1" y="2323.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.1" y="2334.0"></text>
</g>
<g>
<title>State::_sub_Op_ConvI2L(Node const*) (1 samples, 0.02%)</title><rect x="1154.1" y="2307.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.1" y="2318.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="1154.4" y="2355.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.4" y="2366.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.02%)</title><rect x="1154.4" y="2339.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.4" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1154.4" y="2323.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1157.4" y="2334.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1154.4" y="2307.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.4" y="2318.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1154.4" y="2291.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1157.4" y="2302.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="1154.6" y="2371.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.6" y="2382.0"></text>
</g>
<g>
<title>State::_sub_Op_LoadP(Node const*) (1 samples, 0.02%)</title><rect x="1154.6" y="2355.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.6" y="2366.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (6 samples, 0.13%)</title><rect x="1154.9" y="2435.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.9" y="2446.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.02%)</title><rect x="1154.9" y="2419.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.9" y="2430.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.02%)</title><rect x="1154.9" y="2403.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.9" y="2414.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 0.11%)</title><rect x="1155.2" y="2419.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.2" y="2430.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="1155.2" y="2403.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.2" y="2414.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.02%)</title><rect x="1155.2" y="2387.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.2" y="2398.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.02%)</title><rect x="1155.4" y="2387.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.4" y="2398.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.02%)</title><rect x="1155.4" y="2371.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.4" y="2382.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.04%)</title><rect x="1155.7" y="2403.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.7" y="2414.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_exit_block_pressure(Block*) (1 samples, 0.02%)</title><rect x="1155.9" y="2387.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.9" y="2398.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1155.9" y="2371.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.9" y="2382.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.02%)</title><rect x="1156.2" y="2403.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.2" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1156.2" y="2387.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1159.2" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1156.2" y="2371.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1159.2" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1156.2" y="2355.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1159.2" y="2366.0"></text>
</g>
<g>
<title>PhaseCFG::fixup_flow() (1 samples, 0.02%)</title><rect x="1156.4" y="2435.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.4" y="2446.0"></text>
</g>
<g>
<title>jmpConNode::negate() (1 samples, 0.02%)</title><rect x="1156.4" y="2419.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.4" y="2430.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.02%)</title><rect x="1156.7" y="2435.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.7" y="2446.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.02%)</title><rect x="1156.7" y="2419.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.7" y="2430.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (67 samples, 1.44%)</title><rect x="1156.9" y="2435.0" width="17.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.9" y="2446.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1156.9" y="2419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.9" y="2430.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.02%)</title><rect x="1157.2" y="2419.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.2" y="2430.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (7 samples, 0.15%)</title><rect x="1157.4" y="2419.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.4" y="2430.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1158.2" y="2403.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.2" y="2414.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.02%)</title><rect x="1158.5" y="2403.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.5" y="2414.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.02%)</title><rect x="1158.7" y="2403.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.7" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1158.7" y="2387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.7" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1158.7" y="2371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.7" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1158.7" y="2355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1161.7" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1159.0" y="2403.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1162.0" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1159.0" y="2387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1162.0" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1159.0" y="2371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.0" y="2382.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (7 samples, 0.15%)</title><rect x="1159.2" y="2419.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.2" y="2430.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (4 samples, 0.09%)</title><rect x="1160.0" y="2403.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.0" y="2414.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.02%)</title><rect x="1160.2" y="2387.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.2" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1160.2" y="2371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1163.2" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1160.2" y="2355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.2" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1160.2" y="2339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.2" y="2350.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1160.5" y="2387.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.5" y="2398.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.09%)</title><rect x="1161.0" y="2419.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.0" y="2430.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1161.3" y="2403.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.3" y="2414.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1161.3" y="2387.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.3" y="2398.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.02%)</title><rect x="1161.5" y="2403.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="2414.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.02%)</title><rect x="1161.5" y="2387.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.5" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1161.8" y="2403.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1164.8" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1161.8" y="2387.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1164.8" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1161.8" y="2371.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1164.8" y="2382.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (15 samples, 0.32%)</title><rect x="1162.0" y="2419.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.0" y="2430.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.02%)</title><rect x="1162.3" y="2403.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.3" y="2414.0"></text>
</g>
<g>
<title>MachProjNode::Opcode() const (1 samples, 0.02%)</title><rect x="1162.5" y="2403.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.5" y="2414.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.02%)</title><rect x="1162.8" y="2403.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.8" y="2414.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (6 samples, 0.13%)</title><rect x="1163.0" y="2403.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.0" y="2414.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.09%)</title><rect x="1163.5" y="2387.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.5" y="2398.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (4 samples, 0.09%)</title><rect x="1164.6" y="2403.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.6" y="2414.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (4 samples, 0.09%)</title><rect x="1164.6" y="2387.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.6" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="1165.1" y="2371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1168.1" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="1165.1" y="2355.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1168.1" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="1165.1" y="2339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1168.1" y="2350.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.02%)</title><rect x="1165.6" y="2403.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.6" y="2414.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.02%)</title><rect x="1165.8" y="2419.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.8" y="2430.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (2 samples, 0.04%)</title><rect x="1166.1" y="2419.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.1" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1166.3" y="2403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.3" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1166.3" y="2387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1169.3" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1166.3" y="2371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1169.3" y="2382.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.178] (3 samples, 0.06%)</title><rect x="1166.6" y="2419.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.6" y="2430.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.02%)</title><rect x="1166.9" y="2403.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.9" y="2414.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1167.1" y="2403.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.1" y="2414.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (11 samples, 0.24%)</title><rect x="1167.4" y="2419.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.4" y="2430.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1168.4" y="2403.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="2414.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (1 samples, 0.02%)</title><rect x="1168.6" y="2403.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.6" y="2414.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.11%)</title><rect x="1168.9" y="2403.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.9" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="1169.7" y="2387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.7" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="1169.7" y="2371.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.7" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="1169.7" y="2355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1172.7" y="2366.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 0.11%)</title><rect x="1170.2" y="2419.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.2" y="2430.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.09%)</title><rect x="1170.2" y="2403.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.2" y="2414.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.02%)</title><rect x="1170.7" y="2387.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.7" y="2398.0"></text>
</g>
<g>
<title>Block::find_remove(Node const*) (1 samples, 0.02%)</title><rect x="1170.7" y="2371.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.7" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1170.9" y="2387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.9" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1170.9" y="2371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.9" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1170.9" y="2355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1173.9" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1171.2" y="2403.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1174.2" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1171.2" y="2387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.2" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1171.2" y="2371.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.2" y="2382.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.04%)</title><rect x="1171.4" y="2419.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.4" y="2430.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1171.4" y="2403.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.4" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1171.7" y="2403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.7" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1171.7" y="2387.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1174.7" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1171.7" y="2371.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.7" y="2382.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="1171.9" y="2419.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.9" y="2430.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1171.9" y="2403.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.9" y="2414.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (6 samples, 0.13%)</title><rect x="1172.2" y="2419.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.2" y="2430.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="1172.7" y="2403.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.7" y="2414.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="1172.7" y="2387.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1175.7" y="2398.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.02%)</title><rect x="1173.0" y="2403.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.0" y="2414.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="1173.0" y="2387.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1176.0" y="2398.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1173.2" y="2403.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.2" y="2414.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1173.5" y="2403.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.5" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1173.5" y="2387.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1176.5" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1173.5" y="2371.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1176.5" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1173.5" y="2355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1176.5" y="2366.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="1173.7" y="2419.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1176.7" y="2430.0"></text>
</g>
<g>
<title>loadConINode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.02%)</title><rect x="1174.0" y="2435.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.0" y="2446.0"></text>
</g>
<g>
<title>Compile::Optimize() (40 samples, 0.86%)</title><rect x="1174.2" y="2451.0" width="10.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.2" y="2462.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.02%)</title><rect x="1174.2" y="2435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.2" y="2446.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="1174.2" y="2419.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.2" y="2430.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="1174.2" y="2403.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.2" y="2414.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.02%)</title><rect x="1174.2" y="2387.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.2" y="2398.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.06%)</title><rect x="1174.5" y="2435.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.5" y="2446.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.06%)</title><rect x="1174.5" y="2419.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.5" y="2430.0"></text>
</g>
<g>
<title>ConnectionGraph::add_base(FieldNode*, PointsToNode*) [clone .isra.266] (1 samples, 0.02%)</title><rect x="1174.7" y="2403.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.7" y="2414.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1175.0" y="2403.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.0" y="2414.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) (1 samples, 0.02%)</title><rect x="1175.0" y="2387.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.0" y="2398.0"></text>
</g>
<g>
<title>ConnectionGraph::add_edge(PointsToNode*, PointsToNode*) [clone .isra.264] (1 samples, 0.02%)</title><rect x="1175.0" y="2371.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.0" y="2382.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.04%)</title><rect x="1175.2" y="2435.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.2" y="2446.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1175.5" y="2419.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="2430.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1175.5" y="2403.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.5" y="2414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (22 samples, 0.47%)</title><rect x="1175.8" y="2435.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.8" y="2446.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.06%)</title><rect x="1175.8" y="2419.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.8" y="2430.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="1176.3" y="2403.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.3" y="2414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1176.5" y="2419.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.5" y="2430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1176.5" y="2403.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.5" y="2414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1176.5" y="2387.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.5" y="2398.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (11 samples, 0.24%)</title><rect x="1176.8" y="2419.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.8" y="2430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (8 samples, 0.17%)</title><rect x="1177.0" y="2403.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.0" y="2414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (8 samples, 0.17%)</title><rect x="1177.0" y="2387.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.0" y="2398.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (6 samples, 0.13%)</title><rect x="1177.5" y="2371.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.5" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1178.8" y="2355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1181.8" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1178.8" y="2339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.8" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1178.8" y="2323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.8" y="2334.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="1179.1" y="2403.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1182.1" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="1179.1" y="2387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.1" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="1179.1" y="2371.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.1" y="2382.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.06%)</title><rect x="1179.6" y="2419.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.6" y="2430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1180.1" y="2403.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.1" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1180.1" y="2387.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.1" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1180.1" y="2371.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.1" y="2382.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.04%)</title><rect x="1180.3" y="2419.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.3" y="2430.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.04%)</title><rect x="1180.3" y="2403.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.3" y="2414.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.02%)</title><rect x="1180.3" y="2387.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.3" y="2398.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1180.3" y="2371.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.3" y="2382.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.02%)</title><rect x="1180.6" y="2387.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.6" y="2398.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1180.6" y="2371.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.6" y="2382.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.04%)</title><rect x="1180.8" y="2419.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.8" y="2430.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.04%)</title><rect x="1180.8" y="2403.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.8" y="2414.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1180.8" y="2387.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.8" y="2398.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (1 samples, 0.02%)</title><rect x="1180.8" y="2371.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1183.8" y="2382.0"></text>
</g>
<g>
<title>CmpNode::add_id() const (1 samples, 0.02%)</title><rect x="1180.8" y="2355.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.8" y="2366.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1181.1" y="2387.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.1" y="2398.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (1 samples, 0.02%)</title><rect x="1181.1" y="2371.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.1" y="2382.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2355.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.1" y="2366.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2339.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.1" y="2350.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2323.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.1" y="2334.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2307.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.1" y="2318.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2291.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.1" y="2302.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2275.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.1" y="2286.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2259.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.1" y="2270.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2243.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.1" y="2254.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2227.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.1" y="2238.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2211.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.1" y="2222.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2195.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.1" y="2206.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2179.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.1" y="2190.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1181.1" y="2163.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.1" y="2174.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1181.1" y="2147.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.1" y="2158.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (2 samples, 0.04%)</title><rect x="1181.4" y="2435.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.4" y="2446.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) [clone .constprop.199] (2 samples, 0.04%)</title><rect x="1181.4" y="2419.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.4" y="2430.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist0(Node*) [clone .constprop.200] (1 samples, 0.02%)</title><rect x="1181.4" y="2403.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.4" y="2414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1181.4" y="2387.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1184.4" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1181.4" y="2371.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.4" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1181.4" y="2355.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.4" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1181.6" y="2403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.6" y="2414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1181.6" y="2387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.6" y="2398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1181.6" y="2371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.6" y="2382.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 0.17%)</title><rect x="1181.9" y="2435.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.9" y="2446.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 0.17%)</title><rect x="1181.9" y="2419.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.9" y="2430.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1181.9" y="2403.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.9" y="2414.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1181.9" y="2387.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.9" y="2398.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.02%)</title><rect x="1181.9" y="2371.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.9" y="2382.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.02%)</title><rect x="1181.9" y="2355.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.9" y="2366.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1182.1" y="2403.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.1" y="2414.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1182.1" y="2387.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.1" y="2398.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.02%)</title><rect x="1182.1" y="2371.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.1" y="2382.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="2355.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.1" y="2366.0"></text>
</g>
<g>
<title>LoadNode::hash() const (1 samples, 0.02%)</title><rect x="1182.4" y="2403.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.4" y="2414.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (3 samples, 0.06%)</title><rect x="1182.6" y="2403.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.6" y="2414.0"></text>
</g>
<g>
<title>NodeHash::grow() (2 samples, 0.04%)</title><rect x="1182.6" y="2387.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.6" y="2398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1182.9" y="2371.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.9" y="2382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1182.9" y="2355.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1185.9" y="2366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1182.9" y="2339.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.9" y="2350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1183.1" y="2387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1186.1" y="2398.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1183.1" y="2371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1186.1" y="2382.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1183.1" y="2355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.1" y="2366.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1183.4" y="2403.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.4" y="2414.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.02%)</title><rect x="1183.4" y="2387.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.4" y="2398.0"></text>
</g>
<g>
<title>PhiNode::simple_data_loop_check(Node*) const (1 samples, 0.02%)</title><rect x="1183.4" y="2371.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.4" y="2382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1183.4" y="2355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.4" y="2366.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1183.4" y="2339.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1186.4" y="2350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1183.4" y="2323.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1186.4" y="2334.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1183.6" y="2403.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.6" y="2414.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1183.6" y="2387.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.6" y="2398.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1183.6" y="2371.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="2382.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.02%)</title><rect x="1183.6" y="2355.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="2366.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.02%)</title><rect x="1183.9" y="2435.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.9" y="2446.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="1183.9" y="2419.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.9" y="2430.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1183.9" y="2403.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.9" y="2414.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1183.9" y="2387.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.9" y="2398.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1183.9" y="2371.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="2382.0"></text>
</g>
<g>
<title>AddPNode::Opcode() const (1 samples, 0.02%)</title><rect x="1183.9" y="2355.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.9" y="2366.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1183.9" y="2339.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1186.9" y="2350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1183.9" y="2323.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1186.9" y="2334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1183.9" y="2307.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.9" y="2318.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="1184.1" y="2435.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1187.1" y="2446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (16 samples, 0.34%)</title><rect x="1184.4" y="2451.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.4" y="2462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (16 samples, 0.34%)</title><rect x="1184.4" y="2435.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.4" y="2446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (16 samples, 0.34%)</title><rect x="1184.4" y="2419.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.4" y="2430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (16 samples, 0.34%)</title><rect x="1184.4" y="2403.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="2414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (16 samples, 0.34%)</title><rect x="1184.4" y="2387.0" width="4.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="2398.0"></text>
</g>
<g>
<title>Parse::do_call() (16 samples, 0.34%)</title><rect x="1184.4" y="2371.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.4" y="2382.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1184.4" y="2355.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="2366.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1184.4" y="2339.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.4" y="2350.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1184.4" y="2323.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.4" y="2334.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1184.4" y="2307.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.4" y="2318.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1184.4" y="2291.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.4" y="2302.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.4" y="2275.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.4" y="2286.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.4" y="2259.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.4" y="2270.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1184.4" y="2243.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="2254.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1184.4" y="2227.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="2238.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1184.4" y="2211.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.4" y="2222.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.4" y="2195.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.4" y="2206.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.4" y="2179.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.4" y="2190.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.4" y="2163.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.4" y="2174.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.4" y="2147.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="2158.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1184.4" y="2131.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="2142.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1184.4" y="2115.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.4" y="2126.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1184.4" y="2099.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.4" y="2110.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1184.4" y="2083.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1187.4" y="2094.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1184.4" y="2067.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1187.4" y="2078.0"></text>
</g>
<g>
<title>sys_gettid (1 samples, 0.02%)</title><rect x="1184.4" y="2051.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1187.4" y="2062.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.24%)</title><rect x="1184.7" y="2355.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.7" y="2366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.24%)</title><rect x="1184.7" y="2339.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.7" y="2350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.24%)</title><rect x="1184.7" y="2323.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.7" y="2334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.24%)</title><rect x="1184.7" y="2307.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="2318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.24%)</title><rect x="1184.7" y="2291.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.7" y="2302.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.22%)</title><rect x="1184.7" y="2275.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.7" y="2286.0"></text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.02%)</title><rect x="1184.7" y="2259.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.7" y="2270.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1184.7" y="2243.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1187.7" y="2254.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1184.7" y="2227.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1187.7" y="2238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1184.7" y="2211.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1187.7" y="2222.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1184.9" y="2259.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="2270.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1184.9" y="2243.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="2254.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1184.9" y="2227.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.9" y="2238.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1184.9" y="2211.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="2222.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1184.9" y="2195.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.9" y="2206.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.9" y="2179.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.9" y="2190.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.9" y="2163.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.9" y="2174.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1184.9" y="2147.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="2158.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1184.9" y="2131.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.9" y="2142.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1184.9" y="2115.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="2126.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.9" y="2099.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="2110.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.9" y="2083.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="2094.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.9" y="2067.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="2078.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.9" y="2051.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.9" y="2062.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1184.9" y="2035.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.9" y="2046.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.02%)</title><rect x="1184.9" y="2019.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="2030.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.02%)</title><rect x="1184.9" y="2003.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.9" y="2014.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1184.9" y="1987.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1187.9" y="1998.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1184.9" y="1971.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1187.9" y="1982.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1184.9" y="1955.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.9" y="1966.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.15%)</title><rect x="1185.2" y="2259.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.2" y="2270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.15%)</title><rect x="1185.2" y="2243.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="2254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.13%)</title><rect x="1185.2" y="2227.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="2238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.13%)</title><rect x="1185.2" y="2211.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.2" y="2222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.13%)</title><rect x="1185.2" y="2195.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.2" y="2206.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.11%)</title><rect x="1185.2" y="2179.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.2" y="2190.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1185.2" y="2163.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.2" y="2174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1185.2" y="2147.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.2" y="2158.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1185.2" y="2131.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="2142.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1185.2" y="2115.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="2126.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1185.2" y="2099.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="2110.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1185.2" y="2083.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.2" y="2094.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1185.2" y="2067.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.2" y="2078.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1185.2" y="2051.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.2" y="2062.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1185.2" y="2035.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.2" y="2046.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1185.2" y="2019.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.2" y="2030.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1185.2" y="2003.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="2014.0"></text>
</g>
<g>
<title>CmpINode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1185.2" y="1987.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="1998.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1185.4" y="1987.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.4" y="1998.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1185.4" y="1971.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.4" y="1982.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1185.4" y="1955.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.4" y="1966.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1185.4" y="1939.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.4" y="1950.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1185.4" y="1923.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="1934.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1185.4" y="1907.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.4" y="1918.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1185.4" y="1891.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.4" y="1902.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1185.4" y="1875.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1188.4" y="1886.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1185.4" y="1859.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.4" y="1870.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.7" y="1971.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.7" y="1982.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.7" y="1955.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="1966.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.7" y="1939.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="1950.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.7" y="1923.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="1934.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1185.7" y="1907.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.7" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.9" y="1907.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="1918.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.9" y="1891.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.9" y="1902.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.9" y="1875.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.9" y="1886.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.9" y="1859.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="1870.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.9" y="1843.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="1854.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.9" y="1827.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.9" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.9" y="1811.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="1822.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.9" y="1795.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="1806.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.9" y="1779.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="1790.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.9" y="1763.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="1774.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.9" y="1747.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="1758.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.9" y="1731.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.9" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.9" y="1715.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="1726.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.02%)</title><rect x="1185.9" y="1699.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="1710.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.02%)</title><rect x="1185.9" y="1683.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="1694.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1185.9" y="1667.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="1678.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1185.9" y="1651.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="1662.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1185.9" y="1635.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.9" y="1646.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="2163.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="2174.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="2147.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="2158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.2" y="2131.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="2142.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.2" y="2115.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="2126.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.2" y="2099.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="2110.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.2" y="2083.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.2" y="2094.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.2" y="2067.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="2078.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="2051.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="2062.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.2" y="2035.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="2046.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.2" y="2019.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="2030.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.2" y="2003.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="2014.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.2" y="1987.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="1998.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.2" y="1971.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="1982.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="1955.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.2" y="1939.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.2" y="1923.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.2" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.2" y="1907.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.2" y="1891.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.2" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.2" y="1875.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="1886.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="1859.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.2" y="1843.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.2" y="1827.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.2" y="1811.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.2" y="1795.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.2" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.2" y="1779.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="1763.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.2" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.2" y="1747.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.2" y="1731.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.2" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.2" y="1715.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.2" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.2" y="1699.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.2" y="1683.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.2" y="1694.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="1667.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.2" y="1651.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="1662.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.02%)</title><rect x="1186.2" y="1635.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.2" y="1646.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.02%)</title><rect x="1186.2" y="1619.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.2" y="1630.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="2179.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="2190.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="2163.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.4" y="2174.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1186.4" y="2147.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.4" y="2158.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.4" y="2131.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.4" y="2142.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.4" y="2115.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="2126.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="1186.4" y="2099.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.4" y="2110.0"></text>
</g>
<g>
<title>G1BarrierSetC2::g1_mark_card(GraphKit*, IdealKit&amp;, Node*, Node*, unsigned int, Node*, Node*, Node*, TypeFunc const*) const (1 samples, 0.02%)</title><rect x="1186.4" y="2083.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="2094.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1186.4" y="2067.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.4" y="2078.0"></text>
</g>
<g>
<title>SubLNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="2051.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="2062.0"></text>
</g>
<g>
<title>PhaseTransform::longcon(long) (1 samples, 0.02%)</title><rect x="1186.4" y="2035.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.4" y="2046.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1186.4" y="2019.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.4" y="2030.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="2003.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="2014.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.164] (1 samples, 0.02%)</title><rect x="1186.7" y="2227.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.7" y="2238.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.02%)</title><rect x="1186.7" y="2211.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="2222.0"></text>
</g>
<g>
<title>DataLayout::data_in() (1 samples, 0.02%)</title><rect x="1186.7" y="2195.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="2206.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.9" y="2259.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.9" y="2270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.9" y="2243.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.9" y="2254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.9" y="2227.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.9" y="2238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.9" y="2211.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="2222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.9" y="2195.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.9" y="2206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.9" y="2179.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.9" y="2190.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.9" y="2163.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.9" y="2174.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.9" y="2147.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.9" y="2158.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1186.9" y="2131.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.9" y="2142.0"></text>
</g>
<g>
<title>ConLNode::Opcode() const (1 samples, 0.02%)</title><rect x="1186.9" y="2115.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.9" y="2126.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1187.2" y="2275.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.2" y="2286.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1187.2" y="2259.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.2" y="2270.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.02%)</title><rect x="1187.2" y="2243.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.2" y="2254.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1187.2" y="2227.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.2" y="2238.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="1187.2" y="2211.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.2" y="2222.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="1187.2" y="2195.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.2" y="2206.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.02%)</title><rect x="1187.2" y="2179.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.2" y="2190.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.02%)</title><rect x="1187.2" y="2163.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.2" y="2174.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.02%)</title><rect x="1187.2" y="2147.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.2" y="2158.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.02%)</title><rect x="1187.2" y="2131.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.2" y="2142.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.02%)</title><rect x="1187.2" y="2115.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.2" y="2126.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1187.5" y="2355.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.5" y="2366.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.285] (1 samples, 0.02%)</title><rect x="1187.5" y="2339.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.5" y="2350.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.02%)</title><rect x="1187.5" y="2323.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.5" y="2334.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1187.5" y="2307.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.5" y="2318.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.02%)</title><rect x="1187.5" y="2291.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.5" y="2302.0"></text>
</g>
<g>
<title>GraphKit::compute_stack_effects(int&amp;, int&amp;) (1 samples, 0.02%)</title><rect x="1187.5" y="2275.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.5" y="2286.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.5" y="2259.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="2270.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.5" y="2243.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.5" y="2254.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.5" y="2227.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.5" y="2238.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.5" y="2211.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="2222.0"></text>
</g>
<g>
<title>ciSymbol::ciSymbol(Symbol*, vmSymbols::SID) (1 samples, 0.02%)</title><rect x="1187.5" y="2195.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.5" y="2206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1187.7" y="2339.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="2350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1187.7" y="2323.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.7" y="2334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1187.7" y="2307.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="2318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1187.7" y="2291.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="2302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1187.7" y="2275.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="2286.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1187.7" y="2259.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="2270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1187.7" y="2243.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="2254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1187.7" y="2227.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="2238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1187.7" y="2211.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="2222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1187.7" y="2195.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="2206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1187.7" y="2179.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="2190.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1187.7" y="2163.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="2174.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1187.7" y="2147.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="2158.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.02%)</title><rect x="1187.7" y="2131.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="2142.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1187.7" y="2115.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="2126.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_virtual_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.02%)</title><rect x="1187.7" y="2099.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="2110.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="1187.7" y="2083.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="2094.0"></text>
</g>
<g>
<title>CompilationPolicy::can_be_compiled(methodHandle const&amp;, int) (1 samples, 0.02%)</title><rect x="1187.7" y="2067.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="2078.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.0" y="2147.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.0" y="2158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.0" y="2131.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="2142.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.0" y="2115.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="2126.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.0" y="2099.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="2110.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.0" y="2083.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.0" y="2094.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.0" y="2067.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="2078.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.0" y="2051.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="2062.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.0" y="2035.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.0" y="2046.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.0" y="2019.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="2030.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.0" y="2003.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.0" y="2014.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.0" y="1987.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="1998.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.0" y="1971.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="1982.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.0" y="1955.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.0" y="1939.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.0" y="1923.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.0" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.0" y="1907.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.0" y="1891.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.0" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.0" y="1875.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="1886.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1188.0" y="1859.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.0" y="1870.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.02%)</title><rect x="1188.0" y="1843.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.0" y="1854.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (1 samples, 0.02%)</title><rect x="1188.0" y="1827.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.0" y="1838.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1188.0" y="1811.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.0" y="1822.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1188.0" y="1795.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="1806.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1188.0" y="1779.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="1790.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1188.0" y="1763.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.0" y="1774.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1188.0" y="1747.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="1758.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1188.0" y="1731.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="1742.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1188.0" y="1715.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="1726.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1188.0" y="1699.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.0" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1188.0" y="1683.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="1694.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1188.0" y="1667.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="1678.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1188.0" y="1651.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.0" y="1662.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1188.0" y="1635.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.0" y="1646.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1188.0" y="1619.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1188.0" y="1603.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.0" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1188.0" y="1587.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="1598.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1188.0" y="1571.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.0" y="1582.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1188.0" y="1555.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="1566.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1188.0" y="1539.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1191.0" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1188.0" y="1523.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1191.0" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1188.0" y="1507.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.0" y="1518.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.2" y="2243.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.2" y="2254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.2" y="2227.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.2" y="2238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.2" y="2211.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.2" y="2222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.2" y="2195.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.2" y="2206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.2" y="2179.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.2" y="2190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.2" y="2163.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="2174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.2" y="2147.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.2" y="2158.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.2" y="2131.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="2142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.2" y="2115.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="2126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.2" y="2099.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.2" y="2110.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="1188.2" y="2083.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="2094.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1188.2" y="2067.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.2" y="2078.0"></text>
</g>
<g>
<title>TypeTuple::xdual() const (1 samples, 0.02%)</title><rect x="1188.2" y="2051.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.2" y="2062.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1188.2" y="2035.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.2" y="2046.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1188.2" y="2019.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1191.2" y="2030.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1188.2" y="2003.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.2" y="2014.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.02%)</title><rect x="1188.5" y="2451.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.5" y="2462.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1188.5" y="2435.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.5" y="2446.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1188.7" y="2483.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="2494.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1188.7" y="2467.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="2478.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.02%)</title><rect x="1188.7" y="2451.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.7" y="2462.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.02%)</title><rect x="1188.7" y="2435.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="2446.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.02%)</title><rect x="1188.7" y="2419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="2430.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.02%)</title><rect x="1188.7" y="2403.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="2414.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.02%)</title><rect x="1188.7" y="2387.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="2398.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.02%)</title><rect x="1188.7" y="2371.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="2382.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="1189.0" y="2499.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.0" y="2510.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="1189.2" y="2515.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.2" y="2526.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.02%)</title><rect x="1189.2" y="2499.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.2" y="2510.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.02%)</title><rect x="1189.2" y="2483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.2" y="2494.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.02%)</title><rect x="1189.2" y="2467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.2" y="2478.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.02%)</title><rect x="1189.2" y="2451.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.2" y="2462.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.5" y="2547.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.5" y="2558.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.02%)</title><rect x="1189.5" y="2531.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="2542.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.02%)</title><rect x="1189.5" y="2515.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.5" y="2526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.5" y="2499.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1192.5" y="2510.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.5" y="2483.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.5" y="2494.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="2547.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="2558.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="1189.7" y="2531.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="2542.0"></text>
</g>
</g>
</svg>
